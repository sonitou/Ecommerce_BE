
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Language
 * 
 */
export type Language = $Result.DefaultSelection<Prisma.$LanguagePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserTranslation
 * 
 */
export type UserTranslation = $Result.DefaultSelection<Prisma.$UserTranslationPayload>
/**
 * Model VerificationCode
 * 
 */
export type VerificationCode = $Result.DefaultSelection<Prisma.$VerificationCodePayload>
/**
 * Model Device
 * 
 */
export type Device = $Result.DefaultSelection<Prisma.$DevicePayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model Permission
 * 
 */
export type Permission = $Result.DefaultSelection<Prisma.$PermissionPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductTranslation
 * 
 */
export type ProductTranslation = $Result.DefaultSelection<Prisma.$ProductTranslationPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model CategoryTranslation
 * 
 */
export type CategoryTranslation = $Result.DefaultSelection<Prisma.$CategoryTranslationPayload>
/**
 * Model Variant
 * 
 */
export type Variant = $Result.DefaultSelection<Prisma.$VariantPayload>
/**
 * Model VariantOption
 * 
 */
export type VariantOption = $Result.DefaultSelection<Prisma.$VariantOptionPayload>
/**
 * Model SKU
 * 
 */
export type SKU = $Result.DefaultSelection<Prisma.$SKUPayload>
/**
 * Model Brand
 * 
 */
export type Brand = $Result.DefaultSelection<Prisma.$BrandPayload>
/**
 * Model BrandTranslation
 * 
 */
export type BrandTranslation = $Result.DefaultSelection<Prisma.$BrandTranslationPayload>
/**
 * Model CartItem
 * 
 */
export type CartItem = $Result.DefaultSelection<Prisma.$CartItemPayload>
/**
 * Model ProductSKUSnapshot
 * 
 */
export type ProductSKUSnapshot = $Result.DefaultSelection<Prisma.$ProductSKUSnapshotPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model PaymentTransaction
 * 
 */
export type PaymentTransaction = $Result.DefaultSelection<Prisma.$PaymentTransactionPayload>
/**
 * Model Message
 * 
 */
export type Message = $Result.DefaultSelection<Prisma.$MessagePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const OrderStatus: {
  PENDING_CONFIRMATION: 'PENDING_CONFIRMATION',
  PENDING_PICKUP: 'PENDING_PICKUP',
  PENDING_DELIVERY: 'PENDING_DELIVERY',
  DELIVERED: 'DELIVERED',
  RETURNED: 'RETURNED',
  CANCELLED: 'CANCELLED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const VerificationCodeType: {
  REGISTER: 'REGISTER',
  FORGOT_PASSWORD: 'FORGOT_PASSWORD',
  LOGIN: 'LOGIN',
  DISABLE_2FA: 'DISABLE_2FA'
};

export type VerificationCodeType = (typeof VerificationCodeType)[keyof typeof VerificationCodeType]


export const UserStatus: {
  ACTIVE: 'ACTIVE',
  INACTIVE: 'INACTIVE',
  BLOCKED: 'BLOCKED'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const HTTPMethod: {
  GET: 'GET',
  POST: 'POST',
  PUT: 'PUT',
  DELETE: 'DELETE',
  PATCH: 'PATCH',
  OPTIONS: 'OPTIONS',
  HEAD: 'HEAD'
};

export type HTTPMethod = (typeof HTTPMethod)[keyof typeof HTTPMethod]

}

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type VerificationCodeType = $Enums.VerificationCodeType

export const VerificationCodeType: typeof $Enums.VerificationCodeType

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type HTTPMethod = $Enums.HTTPMethod

export const HTTPMethod: typeof $Enums.HTTPMethod

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Languages
 * const languages = await prisma.language.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Languages
   * const languages = await prisma.language.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.language`: Exposes CRUD operations for the **Language** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Languages
    * const languages = await prisma.language.findMany()
    * ```
    */
  get language(): Prisma.LanguageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userTranslation`: Exposes CRUD operations for the **UserTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserTranslations
    * const userTranslations = await prisma.userTranslation.findMany()
    * ```
    */
  get userTranslation(): Prisma.UserTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationCode`: Exposes CRUD operations for the **VerificationCode** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationCodes
    * const verificationCodes = await prisma.verificationCode.findMany()
    * ```
    */
  get verificationCode(): Prisma.VerificationCodeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.device`: Exposes CRUD operations for the **Device** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Devices
    * const devices = await prisma.device.findMany()
    * ```
    */
  get device(): Prisma.DeviceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permission`: Exposes CRUD operations for the **Permission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permission.findMany()
    * ```
    */
  get permission(): Prisma.PermissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productTranslation`: Exposes CRUD operations for the **ProductTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductTranslations
    * const productTranslations = await prisma.productTranslation.findMany()
    * ```
    */
  get productTranslation(): Prisma.ProductTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categoryTranslation`: Exposes CRUD operations for the **CategoryTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CategoryTranslations
    * const categoryTranslations = await prisma.categoryTranslation.findMany()
    * ```
    */
  get categoryTranslation(): Prisma.CategoryTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variant`: Exposes CRUD operations for the **Variant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variants
    * const variants = await prisma.variant.findMany()
    * ```
    */
  get variant(): Prisma.VariantDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variantOption`: Exposes CRUD operations for the **VariantOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VariantOptions
    * const variantOptions = await prisma.variantOption.findMany()
    * ```
    */
  get variantOption(): Prisma.VariantOptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sKU`: Exposes CRUD operations for the **SKU** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SKUS
    * const sKUS = await prisma.sKU.findMany()
    * ```
    */
  get sKU(): Prisma.SKUDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **Brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.BrandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brandTranslation`: Exposes CRUD operations for the **BrandTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BrandTranslations
    * const brandTranslations = await prisma.brandTranslation.findMany()
    * ```
    */
  get brandTranslation(): Prisma.BrandTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cartItem`: Exposes CRUD operations for the **CartItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CartItems
    * const cartItems = await prisma.cartItem.findMany()
    * ```
    */
  get cartItem(): Prisma.CartItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productSKUSnapshot`: Exposes CRUD operations for the **ProductSKUSnapshot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductSKUSnapshots
    * const productSKUSnapshots = await prisma.productSKUSnapshot.findMany()
    * ```
    */
  get productSKUSnapshot(): Prisma.ProductSKUSnapshotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentTransaction`: Exposes CRUD operations for the **PaymentTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentTransactions
    * const paymentTransactions = await prisma.paymentTransaction.findMany()
    * ```
    */
  get paymentTransaction(): Prisma.PaymentTransactionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message`: Exposes CRUD operations for the **Message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.message.findMany()
    * ```
    */
  get message(): Prisma.MessageDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Language: 'Language',
    User: 'User',
    UserTranslation: 'UserTranslation',
    VerificationCode: 'VerificationCode',
    Device: 'Device',
    RefreshToken: 'RefreshToken',
    Permission: 'Permission',
    Role: 'Role',
    Product: 'Product',
    ProductTranslation: 'ProductTranslation',
    Category: 'Category',
    CategoryTranslation: 'CategoryTranslation',
    Variant: 'Variant',
    VariantOption: 'VariantOption',
    SKU: 'SKU',
    Brand: 'Brand',
    BrandTranslation: 'BrandTranslation',
    CartItem: 'CartItem',
    ProductSKUSnapshot: 'ProductSKUSnapshot',
    Order: 'Order',
    Review: 'Review',
    PaymentTransaction: 'PaymentTransaction',
    Message: 'Message'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "language" | "user" | "userTranslation" | "verificationCode" | "device" | "refreshToken" | "permission" | "role" | "product" | "productTranslation" | "category" | "categoryTranslation" | "variant" | "variantOption" | "sKU" | "brand" | "brandTranslation" | "cartItem" | "productSKUSnapshot" | "order" | "review" | "paymentTransaction" | "message"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Language: {
        payload: Prisma.$LanguagePayload<ExtArgs>
        fields: Prisma.LanguageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LanguageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LanguageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findFirst: {
            args: Prisma.LanguageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LanguageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          findMany: {
            args: Prisma.LanguageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          create: {
            args: Prisma.LanguageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          createMany: {
            args: Prisma.LanguageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LanguageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          delete: {
            args: Prisma.LanguageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          update: {
            args: Prisma.LanguageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          deleteMany: {
            args: Prisma.LanguageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LanguageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LanguageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>[]
          }
          upsert: {
            args: Prisma.LanguageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LanguagePayload>
          }
          aggregate: {
            args: Prisma.LanguageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLanguage>
          }
          groupBy: {
            args: Prisma.LanguageGroupByArgs<ExtArgs>
            result: $Utils.Optional<LanguageGroupByOutputType>[]
          }
          count: {
            args: Prisma.LanguageCountArgs<ExtArgs>
            result: $Utils.Optional<LanguageCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserTranslation: {
        payload: Prisma.$UserTranslationPayload<ExtArgs>
        fields: Prisma.UserTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          findFirst: {
            args: Prisma.UserTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          findMany: {
            args: Prisma.UserTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>[]
          }
          create: {
            args: Prisma.UserTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          createMany: {
            args: Prisma.UserTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>[]
          }
          delete: {
            args: Prisma.UserTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          update: {
            args: Prisma.UserTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          deleteMany: {
            args: Prisma.UserTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>[]
          }
          upsert: {
            args: Prisma.UserTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserTranslationPayload>
          }
          aggregate: {
            args: Prisma.UserTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserTranslation>
          }
          groupBy: {
            args: Prisma.UserTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<UserTranslationCountAggregateOutputType> | number
          }
        }
      }
      VerificationCode: {
        payload: Prisma.$VerificationCodePayload<ExtArgs>
        fields: Prisma.VerificationCodeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationCodeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationCodeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          findFirst: {
            args: Prisma.VerificationCodeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationCodeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          findMany: {
            args: Prisma.VerificationCodeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          create: {
            args: Prisma.VerificationCodeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          createMany: {
            args: Prisma.VerificationCodeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationCodeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          delete: {
            args: Prisma.VerificationCodeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          update: {
            args: Prisma.VerificationCodeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          deleteMany: {
            args: Prisma.VerificationCodeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationCodeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationCodeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>[]
          }
          upsert: {
            args: Prisma.VerificationCodeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationCodePayload>
          }
          aggregate: {
            args: Prisma.VerificationCodeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationCode>
          }
          groupBy: {
            args: Prisma.VerificationCodeGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationCodeGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationCodeCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationCodeCountAggregateOutputType> | number
          }
        }
      }
      Device: {
        payload: Prisma.$DevicePayload<ExtArgs>
        fields: Prisma.DeviceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DeviceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DeviceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findFirst: {
            args: Prisma.DeviceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DeviceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          findMany: {
            args: Prisma.DeviceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          create: {
            args: Prisma.DeviceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          createMany: {
            args: Prisma.DeviceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DeviceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          delete: {
            args: Prisma.DeviceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          update: {
            args: Prisma.DeviceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          deleteMany: {
            args: Prisma.DeviceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DeviceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DeviceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>[]
          }
          upsert: {
            args: Prisma.DeviceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DevicePayload>
          }
          aggregate: {
            args: Prisma.DeviceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDevice>
          }
          groupBy: {
            args: Prisma.DeviceGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeviceGroupByOutputType>[]
          }
          count: {
            args: Prisma.DeviceCountArgs<ExtArgs>
            result: $Utils.Optional<DeviceCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RefreshTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RefreshTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      Permission: {
        payload: Prisma.$PermissionPayload<ExtArgs>
        fields: Prisma.PermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findFirst: {
            args: Prisma.PermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          findMany: {
            args: Prisma.PermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          create: {
            args: Prisma.PermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          createMany: {
            args: Prisma.PermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PermissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          delete: {
            args: Prisma.PermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          update: {
            args: Prisma.PermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          deleteMany: {
            args: Prisma.PermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PermissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>[]
          }
          upsert: {
            args: Prisma.PermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PermissionPayload>
          }
          aggregate: {
            args: Prisma.PermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermission>
          }
          groupBy: {
            args: Prisma.PermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PermissionCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.RoleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductTranslation: {
        payload: Prisma.$ProductTranslationPayload<ExtArgs>
        fields: Prisma.ProductTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findFirst: {
            args: Prisma.ProductTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findMany: {
            args: Prisma.ProductTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          create: {
            args: Prisma.ProductTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          createMany: {
            args: Prisma.ProductTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          delete: {
            args: Prisma.ProductTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          update: {
            args: Prisma.ProductTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ProductTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ProductTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          aggregate: {
            args: Prisma.ProductTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductTranslation>
          }
          groupBy: {
            args: Prisma.ProductTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      CategoryTranslation: {
        payload: Prisma.$CategoryTranslationPayload<ExtArgs>
        fields: Prisma.CategoryTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findFirst: {
            args: Prisma.CategoryTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          findMany: {
            args: Prisma.CategoryTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          create: {
            args: Prisma.CategoryTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          createMany: {
            args: Prisma.CategoryTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CategoryTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          delete: {
            args: Prisma.CategoryTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          update: {
            args: Prisma.CategoryTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          deleteMany: {
            args: Prisma.CategoryTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>[]
          }
          upsert: {
            args: Prisma.CategoryTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryTranslationPayload>
          }
          aggregate: {
            args: Prisma.CategoryTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategoryTranslation>
          }
          groupBy: {
            args: Prisma.CategoryTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryTranslationCountAggregateOutputType> | number
          }
        }
      }
      Variant: {
        payload: Prisma.$VariantPayload<ExtArgs>
        fields: Prisma.VariantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VariantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VariantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          findFirst: {
            args: Prisma.VariantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VariantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          findMany: {
            args: Prisma.VariantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>[]
          }
          create: {
            args: Prisma.VariantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          createMany: {
            args: Prisma.VariantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VariantCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>[]
          }
          delete: {
            args: Prisma.VariantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          update: {
            args: Prisma.VariantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          deleteMany: {
            args: Prisma.VariantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VariantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VariantUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>[]
          }
          upsert: {
            args: Prisma.VariantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantPayload>
          }
          aggregate: {
            args: Prisma.VariantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariant>
          }
          groupBy: {
            args: Prisma.VariantGroupByArgs<ExtArgs>
            result: $Utils.Optional<VariantGroupByOutputType>[]
          }
          count: {
            args: Prisma.VariantCountArgs<ExtArgs>
            result: $Utils.Optional<VariantCountAggregateOutputType> | number
          }
        }
      }
      VariantOption: {
        payload: Prisma.$VariantOptionPayload<ExtArgs>
        fields: Prisma.VariantOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VariantOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VariantOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          findFirst: {
            args: Prisma.VariantOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VariantOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          findMany: {
            args: Prisma.VariantOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>[]
          }
          create: {
            args: Prisma.VariantOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          createMany: {
            args: Prisma.VariantOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VariantOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>[]
          }
          delete: {
            args: Prisma.VariantOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          update: {
            args: Prisma.VariantOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          deleteMany: {
            args: Prisma.VariantOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VariantOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VariantOptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>[]
          }
          upsert: {
            args: Prisma.VariantOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VariantOptionPayload>
          }
          aggregate: {
            args: Prisma.VariantOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariantOption>
          }
          groupBy: {
            args: Prisma.VariantOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<VariantOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.VariantOptionCountArgs<ExtArgs>
            result: $Utils.Optional<VariantOptionCountAggregateOutputType> | number
          }
        }
      }
      SKU: {
        payload: Prisma.$SKUPayload<ExtArgs>
        fields: Prisma.SKUFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SKUFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SKUFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          findFirst: {
            args: Prisma.SKUFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SKUFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          findMany: {
            args: Prisma.SKUFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>[]
          }
          create: {
            args: Prisma.SKUCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          createMany: {
            args: Prisma.SKUCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SKUCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>[]
          }
          delete: {
            args: Prisma.SKUDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          update: {
            args: Prisma.SKUUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          deleteMany: {
            args: Prisma.SKUDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SKUUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SKUUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>[]
          }
          upsert: {
            args: Prisma.SKUUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SKUPayload>
          }
          aggregate: {
            args: Prisma.SKUAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSKU>
          }
          groupBy: {
            args: Prisma.SKUGroupByArgs<ExtArgs>
            result: $Utils.Optional<SKUGroupByOutputType>[]
          }
          count: {
            args: Prisma.SKUCountArgs<ExtArgs>
            result: $Utils.Optional<SKUCountAggregateOutputType> | number
          }
        }
      }
      Brand: {
        payload: Prisma.$BrandPayload<ExtArgs>
        fields: Prisma.BrandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findFirst: {
            args: Prisma.BrandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findMany: {
            args: Prisma.BrandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          create: {
            args: Prisma.BrandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          createMany: {
            args: Prisma.BrandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BrandCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          delete: {
            args: Prisma.BrandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          update: {
            args: Prisma.BrandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          deleteMany: {
            args: Prisma.BrandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BrandUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          upsert: {
            args: Prisma.BrandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.BrandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      BrandTranslation: {
        payload: Prisma.$BrandTranslationPayload<ExtArgs>
        fields: Prisma.BrandTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          findFirst: {
            args: Prisma.BrandTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          findMany: {
            args: Prisma.BrandTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>[]
          }
          create: {
            args: Prisma.BrandTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          createMany: {
            args: Prisma.BrandTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BrandTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>[]
          }
          delete: {
            args: Prisma.BrandTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          update: {
            args: Prisma.BrandTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          deleteMany: {
            args: Prisma.BrandTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.BrandTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>[]
          }
          upsert: {
            args: Prisma.BrandTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandTranslationPayload>
          }
          aggregate: {
            args: Prisma.BrandTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrandTranslation>
          }
          groupBy: {
            args: Prisma.BrandTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<BrandTranslationCountAggregateOutputType> | number
          }
        }
      }
      CartItem: {
        payload: Prisma.$CartItemPayload<ExtArgs>
        fields: Prisma.CartItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CartItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CartItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          findFirst: {
            args: Prisma.CartItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CartItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          findMany: {
            args: Prisma.CartItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>[]
          }
          create: {
            args: Prisma.CartItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          createMany: {
            args: Prisma.CartItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CartItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>[]
          }
          delete: {
            args: Prisma.CartItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          update: {
            args: Prisma.CartItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          deleteMany: {
            args: Prisma.CartItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CartItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CartItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>[]
          }
          upsert: {
            args: Prisma.CartItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CartItemPayload>
          }
          aggregate: {
            args: Prisma.CartItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCartItem>
          }
          groupBy: {
            args: Prisma.CartItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.CartItemCountArgs<ExtArgs>
            result: $Utils.Optional<CartItemCountAggregateOutputType> | number
          }
        }
      }
      ProductSKUSnapshot: {
        payload: Prisma.$ProductSKUSnapshotPayload<ExtArgs>
        fields: Prisma.ProductSKUSnapshotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductSKUSnapshotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductSKUSnapshotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          findFirst: {
            args: Prisma.ProductSKUSnapshotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductSKUSnapshotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          findMany: {
            args: Prisma.ProductSKUSnapshotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>[]
          }
          create: {
            args: Prisma.ProductSKUSnapshotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          createMany: {
            args: Prisma.ProductSKUSnapshotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductSKUSnapshotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>[]
          }
          delete: {
            args: Prisma.ProductSKUSnapshotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          update: {
            args: Prisma.ProductSKUSnapshotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          deleteMany: {
            args: Prisma.ProductSKUSnapshotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductSKUSnapshotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductSKUSnapshotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>[]
          }
          upsert: {
            args: Prisma.ProductSKUSnapshotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSKUSnapshotPayload>
          }
          aggregate: {
            args: Prisma.ProductSKUSnapshotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductSKUSnapshot>
          }
          groupBy: {
            args: Prisma.ProductSKUSnapshotGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductSKUSnapshotGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductSKUSnapshotCountArgs<ExtArgs>
            result: $Utils.Optional<ProductSKUSnapshotCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReviewUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      PaymentTransaction: {
        payload: Prisma.$PaymentTransactionPayload<ExtArgs>
        fields: Prisma.PaymentTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findFirst: {
            args: Prisma.PaymentTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findMany: {
            args: Prisma.PaymentTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          create: {
            args: Prisma.PaymentTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          createMany: {
            args: Prisma.PaymentTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentTransactionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          delete: {
            args: Prisma.PaymentTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          update: {
            args: Prisma.PaymentTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          deleteMany: {
            args: Prisma.PaymentTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentTransactionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          upsert: {
            args: Prisma.PaymentTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          aggregate: {
            args: Prisma.PaymentTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentTransaction>
          }
          groupBy: {
            args: Prisma.PaymentTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionCountAggregateOutputType> | number
          }
        }
      }
      Message: {
        payload: Prisma.$MessagePayload<ExtArgs>
        fields: Prisma.MessageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MessageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MessageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findFirst: {
            args: Prisma.MessageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MessageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          findMany: {
            args: Prisma.MessageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          create: {
            args: Prisma.MessageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          createMany: {
            args: Prisma.MessageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MessageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          delete: {
            args: Prisma.MessageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          update: {
            args: Prisma.MessageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          deleteMany: {
            args: Prisma.MessageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MessageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MessageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>[]
          }
          upsert: {
            args: Prisma.MessageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MessagePayload>
          }
          aggregate: {
            args: Prisma.MessageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage>
          }
          groupBy: {
            args: Prisma.MessageGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessageGroupByOutputType>[]
          }
          count: {
            args: Prisma.MessageCountArgs<ExtArgs>
            result: $Utils.Optional<MessageCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    language?: LanguageOmit
    user?: UserOmit
    userTranslation?: UserTranslationOmit
    verificationCode?: VerificationCodeOmit
    device?: DeviceOmit
    refreshToken?: RefreshTokenOmit
    permission?: PermissionOmit
    role?: RoleOmit
    product?: ProductOmit
    productTranslation?: ProductTranslationOmit
    category?: CategoryOmit
    categoryTranslation?: CategoryTranslationOmit
    variant?: VariantOmit
    variantOption?: VariantOptionOmit
    sKU?: SKUOmit
    brand?: BrandOmit
    brandTranslation?: BrandTranslationOmit
    cartItem?: CartItemOmit
    productSKUSnapshot?: ProductSKUSnapshotOmit
    order?: OrderOmit
    review?: ReviewOmit
    paymentTransaction?: PaymentTransactionOmit
    message?: MessageOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type LanguageCountOutputType
   */

  export type LanguageCountOutputType = {
    userTranslations: number
    productTranslations: number
    categoryTranslations: number
    brandTranslations: number
  }

  export type LanguageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userTranslations?: boolean | LanguageCountOutputTypeCountUserTranslationsArgs
    productTranslations?: boolean | LanguageCountOutputTypeCountProductTranslationsArgs
    categoryTranslations?: boolean | LanguageCountOutputTypeCountCategoryTranslationsArgs
    brandTranslations?: boolean | LanguageCountOutputTypeCountBrandTranslationsArgs
  }

  // Custom InputTypes
  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LanguageCountOutputType
     */
    select?: LanguageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * LanguageCountOutputType without action
   */
  export type LanguageCountOutputTypeCountBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    devices: number
    refreshTokens: number
    carts: number
    orders: number
    reviews: number
    createdPermissions: number
    updatedPermissions: number
    deletedPermissions: number
    createdRoles: number
    updatedRoles: number
    deletedRoles: number
    createdProducts: number
    updatedProducts: number
    deletedProducts: number
    createdCategories: number
    updatedCategories: number
    deletedCategories: number
    createdVariants: number
    updatedVariants: number
    deletedVariants: number
    createdVariantOptions: number
    updatedVariantOptions: number
    deletedVariantOptions: number
    createdSKUS: number
    updatedSKUS: number
    deletedSKUS: number
    createdLanguages: number
    updatedLanguages: number
    deletedLanguages: number
    createdBrands: number
    updatedBrands: number
    deletedBrands: number
    createdProductTranslations: number
    updatedProductTranslations: number
    deletedProductTranslations: number
    createdCategoryTranslations: number
    updatedCategoryTranslations: number
    deletedCategoryTranslations: number
    createdBrandTranslations: number
    updatedBrandTranslations: number
    deletedBrandTranslations: number
    createdOrders: number
    updatedOrders: number
    deletedOrders: number
    createdUserTranslations: number
    updatedUserTranslations: number
    deletedUserTranslations: number
    userTranslations: number
    sentMessages: number
    receivedMessages: number
    createdUsers: number
    updatedUsers: number
    deletedUsers: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    devices?: boolean | UserCountOutputTypeCountDevicesArgs
    refreshTokens?: boolean | UserCountOutputTypeCountRefreshTokensArgs
    carts?: boolean | UserCountOutputTypeCountCartsArgs
    orders?: boolean | UserCountOutputTypeCountOrdersArgs
    reviews?: boolean | UserCountOutputTypeCountReviewsArgs
    createdPermissions?: boolean | UserCountOutputTypeCountCreatedPermissionsArgs
    updatedPermissions?: boolean | UserCountOutputTypeCountUpdatedPermissionsArgs
    deletedPermissions?: boolean | UserCountOutputTypeCountDeletedPermissionsArgs
    createdRoles?: boolean | UserCountOutputTypeCountCreatedRolesArgs
    updatedRoles?: boolean | UserCountOutputTypeCountUpdatedRolesArgs
    deletedRoles?: boolean | UserCountOutputTypeCountDeletedRolesArgs
    createdProducts?: boolean | UserCountOutputTypeCountCreatedProductsArgs
    updatedProducts?: boolean | UserCountOutputTypeCountUpdatedProductsArgs
    deletedProducts?: boolean | UserCountOutputTypeCountDeletedProductsArgs
    createdCategories?: boolean | UserCountOutputTypeCountCreatedCategoriesArgs
    updatedCategories?: boolean | UserCountOutputTypeCountUpdatedCategoriesArgs
    deletedCategories?: boolean | UserCountOutputTypeCountDeletedCategoriesArgs
    createdVariants?: boolean | UserCountOutputTypeCountCreatedVariantsArgs
    updatedVariants?: boolean | UserCountOutputTypeCountUpdatedVariantsArgs
    deletedVariants?: boolean | UserCountOutputTypeCountDeletedVariantsArgs
    createdVariantOptions?: boolean | UserCountOutputTypeCountCreatedVariantOptionsArgs
    updatedVariantOptions?: boolean | UserCountOutputTypeCountUpdatedVariantOptionsArgs
    deletedVariantOptions?: boolean | UserCountOutputTypeCountDeletedVariantOptionsArgs
    createdSKUS?: boolean | UserCountOutputTypeCountCreatedSKUSArgs
    updatedSKUS?: boolean | UserCountOutputTypeCountUpdatedSKUSArgs
    deletedSKUS?: boolean | UserCountOutputTypeCountDeletedSKUSArgs
    createdLanguages?: boolean | UserCountOutputTypeCountCreatedLanguagesArgs
    updatedLanguages?: boolean | UserCountOutputTypeCountUpdatedLanguagesArgs
    deletedLanguages?: boolean | UserCountOutputTypeCountDeletedLanguagesArgs
    createdBrands?: boolean | UserCountOutputTypeCountCreatedBrandsArgs
    updatedBrands?: boolean | UserCountOutputTypeCountUpdatedBrandsArgs
    deletedBrands?: boolean | UserCountOutputTypeCountDeletedBrandsArgs
    createdProductTranslations?: boolean | UserCountOutputTypeCountCreatedProductTranslationsArgs
    updatedProductTranslations?: boolean | UserCountOutputTypeCountUpdatedProductTranslationsArgs
    deletedProductTranslations?: boolean | UserCountOutputTypeCountDeletedProductTranslationsArgs
    createdCategoryTranslations?: boolean | UserCountOutputTypeCountCreatedCategoryTranslationsArgs
    updatedCategoryTranslations?: boolean | UserCountOutputTypeCountUpdatedCategoryTranslationsArgs
    deletedCategoryTranslations?: boolean | UserCountOutputTypeCountDeletedCategoryTranslationsArgs
    createdBrandTranslations?: boolean | UserCountOutputTypeCountCreatedBrandTranslationsArgs
    updatedBrandTranslations?: boolean | UserCountOutputTypeCountUpdatedBrandTranslationsArgs
    deletedBrandTranslations?: boolean | UserCountOutputTypeCountDeletedBrandTranslationsArgs
    createdOrders?: boolean | UserCountOutputTypeCountCreatedOrdersArgs
    updatedOrders?: boolean | UserCountOutputTypeCountUpdatedOrdersArgs
    deletedOrders?: boolean | UserCountOutputTypeCountDeletedOrdersArgs
    createdUserTranslations?: boolean | UserCountOutputTypeCountCreatedUserTranslationsArgs
    updatedUserTranslations?: boolean | UserCountOutputTypeCountUpdatedUserTranslationsArgs
    deletedUserTranslations?: boolean | UserCountOutputTypeCountDeletedUserTranslationsArgs
    userTranslations?: boolean | UserCountOutputTypeCountUserTranslationsArgs
    sentMessages?: boolean | UserCountOutputTypeCountSentMessagesArgs
    receivedMessages?: boolean | UserCountOutputTypeCountReceivedMessagesArgs
    createdUsers?: boolean | UserCountOutputTypeCountCreatedUsersArgs
    updatedUsers?: boolean | UserCountOutputTypeCountUpdatedUsersArgs
    deletedUsers?: boolean | UserCountOutputTypeCountDeletedUsersArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDevicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartItemWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCreatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUpdatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountDeletedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type DeviceCountOutputType
   */

  export type DeviceCountOutputType = {
    refreshTokens: number
  }

  export type DeviceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refreshTokens?: boolean | DeviceCountOutputTypeCountRefreshTokensArgs
  }

  // Custom InputTypes
  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeviceCountOutputType
     */
    select?: DeviceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeviceCountOutputType without action
   */
  export type DeviceCountOutputTypeCountRefreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type PermissionCountOutputType
   */

  export type PermissionCountOutputType = {
    roles: number
  }

  export type PermissionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | PermissionCountOutputTypeCountRolesArgs
  }

  // Custom InputTypes
  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PermissionCountOutputType
     */
    select?: PermissionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PermissionCountOutputType without action
   */
  export type PermissionCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    permissions: number
    users: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | RoleCountOutputTypeCountPermissionsArgs
    users?: boolean | RoleCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    categories: number
    variants: number
    skus: number
    reviews: number
    productTranslations: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | ProductCountOutputTypeCountCategoriesArgs
    variants?: boolean | ProductCountOutputTypeCountVariantsArgs
    skus?: boolean | ProductCountOutputTypeCountSkusArgs
    reviews?: boolean | ProductCountOutputTypeCountReviewsArgs
    productTranslations?: boolean | ProductCountOutputTypeCountProductTranslationsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountSkusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    products: number
    childrenCategories: number
    categoryTranslations: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | CategoryCountOutputTypeCountProductsArgs
    childrenCategories?: boolean | CategoryCountOutputTypeCountChildrenCategoriesArgs
    categoryTranslations?: boolean | CategoryCountOutputTypeCountCategoryTranslationsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountChildrenCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
  }


  /**
   * Count Type VariantCountOutputType
   */

  export type VariantCountOutputType = {
    variantOptions: number
  }

  export type VariantCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variantOptions?: boolean | VariantCountOutputTypeCountVariantOptionsArgs
  }

  // Custom InputTypes
  /**
   * VariantCountOutputType without action
   */
  export type VariantCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantCountOutputType
     */
    select?: VariantCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VariantCountOutputType without action
   */
  export type VariantCountOutputTypeCountVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
  }


  /**
   * Count Type VariantOptionCountOutputType
   */

  export type VariantOptionCountOutputType = {
    skus: number
  }

  export type VariantOptionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    skus?: boolean | VariantOptionCountOutputTypeCountSkusArgs
  }

  // Custom InputTypes
  /**
   * VariantOptionCountOutputType without action
   */
  export type VariantOptionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOptionCountOutputType
     */
    select?: VariantOptionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VariantOptionCountOutputType without action
   */
  export type VariantOptionCountOutputTypeCountSkusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
  }


  /**
   * Count Type SKUCountOutputType
   */

  export type SKUCountOutputType = {
    variantOptions: number
    cartItems: number
    productSKUSnapshots: number
  }

  export type SKUCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variantOptions?: boolean | SKUCountOutputTypeCountVariantOptionsArgs
    cartItems?: boolean | SKUCountOutputTypeCountCartItemsArgs
    productSKUSnapshots?: boolean | SKUCountOutputTypeCountProductSKUSnapshotsArgs
  }

  // Custom InputTypes
  /**
   * SKUCountOutputType without action
   */
  export type SKUCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKUCountOutputType
     */
    select?: SKUCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SKUCountOutputType without action
   */
  export type SKUCountOutputTypeCountVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
  }

  /**
   * SKUCountOutputType without action
   */
  export type SKUCountOutputTypeCountCartItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartItemWhereInput
  }

  /**
   * SKUCountOutputType without action
   */
  export type SKUCountOutputTypeCountProductSKUSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSKUSnapshotWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    products: number
    brandTranslations: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | BrandCountOutputTypeCountProductsArgs
    brandTranslations?: boolean | BrandCountOutputTypeCountBrandTranslationsArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    items: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrderCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSKUSnapshotWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Language
   */

  export type AggregateLanguage = {
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  export type LanguageAvgAggregateOutputType = {
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type LanguageSumAggregateOutputType = {
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type LanguageMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LanguageMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LanguageCountAggregateOutputType = {
    id: number
    name: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type LanguageAvgAggregateInputType = {
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type LanguageSumAggregateInputType = {
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type LanguageMinAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LanguageMaxAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LanguageCountAggregateInputType = {
    id?: true
    name?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type LanguageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Language to aggregate.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Languages
    **/
    _count?: true | LanguageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LanguageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LanguageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LanguageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LanguageMaxAggregateInputType
  }

  export type GetLanguageAggregateType<T extends LanguageAggregateArgs> = {
        [P in keyof T & keyof AggregateLanguage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLanguage[P]>
      : GetScalarType<T[P], AggregateLanguage[P]>
  }




  export type LanguageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithAggregationInput | LanguageOrderByWithAggregationInput[]
    by: LanguageScalarFieldEnum[] | LanguageScalarFieldEnum
    having?: LanguageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LanguageCountAggregateInputType | true
    _avg?: LanguageAvgAggregateInputType
    _sum?: LanguageSumAggregateInputType
    _min?: LanguageMinAggregateInputType
    _max?: LanguageMaxAggregateInputType
  }

  export type LanguageGroupByOutputType = {
    id: string
    name: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: LanguageCountAggregateOutputType | null
    _avg: LanguageAvgAggregateOutputType | null
    _sum: LanguageSumAggregateOutputType | null
    _min: LanguageMinAggregateOutputType | null
    _max: LanguageMaxAggregateOutputType | null
  }

  type GetLanguageGroupByPayload<T extends LanguageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LanguageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LanguageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LanguageGroupByOutputType[P]>
            : GetScalarType<T[P], LanguageGroupByOutputType[P]>
        }
      >
    >


  export type LanguageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    userTranslations?: boolean | Language$userTranslationsArgs<ExtArgs>
    productTranslations?: boolean | Language$productTranslationsArgs<ExtArgs>
    categoryTranslations?: boolean | Language$categoryTranslationsArgs<ExtArgs>
    brandTranslations?: boolean | Language$brandTranslationsArgs<ExtArgs>
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["language"]>

  export type LanguageSelectScalar = {
    id?: boolean
    name?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type LanguageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["language"]>
  export type LanguageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    userTranslations?: boolean | Language$userTranslationsArgs<ExtArgs>
    productTranslations?: boolean | Language$productTranslationsArgs<ExtArgs>
    categoryTranslations?: boolean | Language$categoryTranslationsArgs<ExtArgs>
    brandTranslations?: boolean | Language$brandTranslationsArgs<ExtArgs>
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
    _count?: boolean | LanguageCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LanguageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
  }
  export type LanguageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Language$createdByArgs<ExtArgs>
    updatedBy?: boolean | Language$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Language$deletedByArgs<ExtArgs>
  }

  export type $LanguagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Language"
    objects: {
      userTranslations: Prisma.$UserTranslationPayload<ExtArgs>[]
      productTranslations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      categoryTranslations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      brandTranslations: Prisma.$BrandTranslationPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["language"]>
    composites: {}
  }

  type LanguageGetPayload<S extends boolean | null | undefined | LanguageDefaultArgs> = $Result.GetResult<Prisma.$LanguagePayload, S>

  type LanguageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LanguageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LanguageCountAggregateInputType | true
    }

  export interface LanguageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Language'], meta: { name: 'Language' } }
    /**
     * Find zero or one Language that matches the filter.
     * @param {LanguageFindUniqueArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LanguageFindUniqueArgs>(args: SelectSubset<T, LanguageFindUniqueArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Language that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LanguageFindUniqueOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LanguageFindUniqueOrThrowArgs>(args: SelectSubset<T, LanguageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LanguageFindFirstArgs>(args?: SelectSubset<T, LanguageFindFirstArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Language that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindFirstOrThrowArgs} args - Arguments to find a Language
     * @example
     * // Get one Language
     * const language = await prisma.language.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LanguageFindFirstOrThrowArgs>(args?: SelectSubset<T, LanguageFindFirstOrThrowArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Languages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Languages
     * const languages = await prisma.language.findMany()
     * 
     * // Get first 10 Languages
     * const languages = await prisma.language.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const languageWithIdOnly = await prisma.language.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LanguageFindManyArgs>(args?: SelectSubset<T, LanguageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Language.
     * @param {LanguageCreateArgs} args - Arguments to create a Language.
     * @example
     * // Create one Language
     * const Language = await prisma.language.create({
     *   data: {
     *     // ... data to create a Language
     *   }
     * })
     * 
     */
    create<T extends LanguageCreateArgs>(args: SelectSubset<T, LanguageCreateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Languages.
     * @param {LanguageCreateManyArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LanguageCreateManyArgs>(args?: SelectSubset<T, LanguageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Languages and returns the data saved in the database.
     * @param {LanguageCreateManyAndReturnArgs} args - Arguments to create many Languages.
     * @example
     * // Create many Languages
     * const language = await prisma.language.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LanguageCreateManyAndReturnArgs>(args?: SelectSubset<T, LanguageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Language.
     * @param {LanguageDeleteArgs} args - Arguments to delete one Language.
     * @example
     * // Delete one Language
     * const Language = await prisma.language.delete({
     *   where: {
     *     // ... filter to delete one Language
     *   }
     * })
     * 
     */
    delete<T extends LanguageDeleteArgs>(args: SelectSubset<T, LanguageDeleteArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Language.
     * @param {LanguageUpdateArgs} args - Arguments to update one Language.
     * @example
     * // Update one Language
     * const language = await prisma.language.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LanguageUpdateArgs>(args: SelectSubset<T, LanguageUpdateArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Languages.
     * @param {LanguageDeleteManyArgs} args - Arguments to filter Languages to delete.
     * @example
     * // Delete a few Languages
     * const { count } = await prisma.language.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LanguageDeleteManyArgs>(args?: SelectSubset<T, LanguageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LanguageUpdateManyArgs>(args: SelectSubset<T, LanguageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Languages and returns the data updated in the database.
     * @param {LanguageUpdateManyAndReturnArgs} args - Arguments to update many Languages.
     * @example
     * // Update many Languages
     * const language = await prisma.language.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Languages and only return the `id`
     * const languageWithIdOnly = await prisma.language.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LanguageUpdateManyAndReturnArgs>(args: SelectSubset<T, LanguageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Language.
     * @param {LanguageUpsertArgs} args - Arguments to update or create a Language.
     * @example
     * // Update or create a Language
     * const language = await prisma.language.upsert({
     *   create: {
     *     // ... data to create a Language
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Language we want to update
     *   }
     * })
     */
    upsert<T extends LanguageUpsertArgs>(args: SelectSubset<T, LanguageUpsertArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Languages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageCountArgs} args - Arguments to filter Languages to count.
     * @example
     * // Count the number of Languages
     * const count = await prisma.language.count({
     *   where: {
     *     // ... the filter for the Languages we want to count
     *   }
     * })
    **/
    count<T extends LanguageCountArgs>(
      args?: Subset<T, LanguageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LanguageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LanguageAggregateArgs>(args: Subset<T, LanguageAggregateArgs>): Prisma.PrismaPromise<GetLanguageAggregateType<T>>

    /**
     * Group by Language.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LanguageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LanguageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LanguageGroupByArgs['orderBy'] }
        : { orderBy?: LanguageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LanguageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLanguageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Language model
   */
  readonly fields: LanguageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Language.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LanguageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    userTranslations<T extends Language$userTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Language$userTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productTranslations<T extends Language$productTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Language$productTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categoryTranslations<T extends Language$categoryTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Language$categoryTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    brandTranslations<T extends Language$brandTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Language$brandTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Language$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Language$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Language$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Language$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Language$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Language$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Language model
   */
  interface LanguageFieldRefs {
    readonly id: FieldRef<"Language", 'String'>
    readonly name: FieldRef<"Language", 'String'>
    readonly createdById: FieldRef<"Language", 'Int'>
    readonly updatedById: FieldRef<"Language", 'Int'>
    readonly deletedById: FieldRef<"Language", 'Int'>
    readonly deletedAt: FieldRef<"Language", 'DateTime'>
    readonly createdAt: FieldRef<"Language", 'DateTime'>
    readonly updatedAt: FieldRef<"Language", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Language findUnique
   */
  export type LanguageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findUniqueOrThrow
   */
  export type LanguageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language findFirst
   */
  export type LanguageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findFirstOrThrow
   */
  export type LanguageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Language to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Languages.
     */
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language findMany
   */
  export type LanguageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter, which Languages to fetch.
     */
    where?: LanguageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Languages to fetch.
     */
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Languages.
     */
    cursor?: LanguageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Languages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Languages.
     */
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * Language create
   */
  export type LanguageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to create a Language.
     */
    data: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
  }

  /**
   * Language createMany
   */
  export type LanguageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Language createManyAndReturn
   */
  export type LanguageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to create many Languages.
     */
    data: LanguageCreateManyInput | LanguageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Language update
   */
  export type LanguageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The data needed to update a Language.
     */
    data: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
    /**
     * Choose, which Language to update.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language updateMany
   */
  export type LanguageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
  }

  /**
   * Language updateManyAndReturn
   */
  export type LanguageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * The data used to update Languages.
     */
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyInput>
    /**
     * Filter which Languages to update
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Language upsert
   */
  export type LanguageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * The filter to search for the Language to update in case it exists.
     */
    where: LanguageWhereUniqueInput
    /**
     * In case the Language found by the `where` argument doesn't exist, create a new Language with this data.
     */
    create: XOR<LanguageCreateInput, LanguageUncheckedCreateInput>
    /**
     * In case the Language was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LanguageUpdateInput, LanguageUncheckedUpdateInput>
  }

  /**
   * Language delete
   */
  export type LanguageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    /**
     * Filter which Language to delete.
     */
    where: LanguageWhereUniqueInput
  }

  /**
   * Language deleteMany
   */
  export type LanguageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Languages to delete
     */
    where?: LanguageWhereInput
    /**
     * Limit how many Languages to delete.
     */
    limit?: number
  }

  /**
   * Language.userTranslations
   */
  export type Language$userTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    cursor?: UserTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * Language.productTranslations
   */
  export type Language$productTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * Language.categoryTranslations
   */
  export type Language$categoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * Language.brandTranslations
   */
  export type Language$brandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    cursor?: BrandTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * Language.createdBy
   */
  export type Language$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language.updatedBy
   */
  export type Language$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language.deletedBy
   */
  export type Language$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Language without action
   */
  export type LanguageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    roleId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    name: string | null
    password: string | null
    phoneNumber: string | null
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus | null
    roleId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    name: string | null
    password: string | null
    phoneNumber: string | null
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus | null
    roleId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    password: number
    phoneNumber: number
    avatar: number
    totpSecret: number
    status: number
    roleId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    roleId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    roleId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    phoneNumber?: true
    avatar?: true
    totpSecret?: true
    status?: true
    roleId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    phoneNumber?: true
    avatar?: true
    totpSecret?: true
    status?: true
    roleId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    password?: true
    phoneNumber?: true
    avatar?: true
    totpSecret?: true
    status?: true
    roleId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar: string | null
    totpSecret: string | null
    status: $Enums.UserStatus
    roleId: number
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    phoneNumber?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    roleId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    devices?: boolean | User$devicesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    carts?: boolean | User$cartsArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    createdPermissions?: boolean | User$createdPermissionsArgs<ExtArgs>
    updatedPermissions?: boolean | User$updatedPermissionsArgs<ExtArgs>
    deletedPermissions?: boolean | User$deletedPermissionsArgs<ExtArgs>
    createdRoles?: boolean | User$createdRolesArgs<ExtArgs>
    updatedRoles?: boolean | User$updatedRolesArgs<ExtArgs>
    deletedRoles?: boolean | User$deletedRolesArgs<ExtArgs>
    createdProducts?: boolean | User$createdProductsArgs<ExtArgs>
    updatedProducts?: boolean | User$updatedProductsArgs<ExtArgs>
    deletedProducts?: boolean | User$deletedProductsArgs<ExtArgs>
    createdCategories?: boolean | User$createdCategoriesArgs<ExtArgs>
    updatedCategories?: boolean | User$updatedCategoriesArgs<ExtArgs>
    deletedCategories?: boolean | User$deletedCategoriesArgs<ExtArgs>
    createdVariants?: boolean | User$createdVariantsArgs<ExtArgs>
    updatedVariants?: boolean | User$updatedVariantsArgs<ExtArgs>
    deletedVariants?: boolean | User$deletedVariantsArgs<ExtArgs>
    createdVariantOptions?: boolean | User$createdVariantOptionsArgs<ExtArgs>
    updatedVariantOptions?: boolean | User$updatedVariantOptionsArgs<ExtArgs>
    deletedVariantOptions?: boolean | User$deletedVariantOptionsArgs<ExtArgs>
    createdSKUS?: boolean | User$createdSKUSArgs<ExtArgs>
    updatedSKUS?: boolean | User$updatedSKUSArgs<ExtArgs>
    deletedSKUS?: boolean | User$deletedSKUSArgs<ExtArgs>
    createdLanguages?: boolean | User$createdLanguagesArgs<ExtArgs>
    updatedLanguages?: boolean | User$updatedLanguagesArgs<ExtArgs>
    deletedLanguages?: boolean | User$deletedLanguagesArgs<ExtArgs>
    createdBrands?: boolean | User$createdBrandsArgs<ExtArgs>
    updatedBrands?: boolean | User$updatedBrandsArgs<ExtArgs>
    deletedBrands?: boolean | User$deletedBrandsArgs<ExtArgs>
    createdProductTranslations?: boolean | User$createdProductTranslationsArgs<ExtArgs>
    updatedProductTranslations?: boolean | User$updatedProductTranslationsArgs<ExtArgs>
    deletedProductTranslations?: boolean | User$deletedProductTranslationsArgs<ExtArgs>
    createdCategoryTranslations?: boolean | User$createdCategoryTranslationsArgs<ExtArgs>
    updatedCategoryTranslations?: boolean | User$updatedCategoryTranslationsArgs<ExtArgs>
    deletedCategoryTranslations?: boolean | User$deletedCategoryTranslationsArgs<ExtArgs>
    createdBrandTranslations?: boolean | User$createdBrandTranslationsArgs<ExtArgs>
    updatedBrandTranslations?: boolean | User$updatedBrandTranslationsArgs<ExtArgs>
    deletedBrandTranslations?: boolean | User$deletedBrandTranslationsArgs<ExtArgs>
    createdOrders?: boolean | User$createdOrdersArgs<ExtArgs>
    updatedOrders?: boolean | User$updatedOrdersArgs<ExtArgs>
    deletedOrders?: boolean | User$deletedOrdersArgs<ExtArgs>
    createdUserTranslations?: boolean | User$createdUserTranslationsArgs<ExtArgs>
    updatedUserTranslations?: boolean | User$updatedUserTranslationsArgs<ExtArgs>
    deletedUserTranslations?: boolean | User$deletedUserTranslationsArgs<ExtArgs>
    userTranslations?: boolean | User$userTranslationsArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    createdUsers?: boolean | User$createdUsersArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    updatedUsers?: boolean | User$updatedUsersArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
    deletedUsers?: boolean | User$deletedUsersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    phoneNumber?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    roleId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    phoneNumber?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    roleId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    name?: boolean
    password?: boolean
    phoneNumber?: boolean
    avatar?: boolean
    totpSecret?: boolean
    status?: boolean
    roleId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "name" | "password" | "phoneNumber" | "avatar" | "totpSecret" | "status" | "roleId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    devices?: boolean | User$devicesArgs<ExtArgs>
    refreshTokens?: boolean | User$refreshTokensArgs<ExtArgs>
    carts?: boolean | User$cartsArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    createdPermissions?: boolean | User$createdPermissionsArgs<ExtArgs>
    updatedPermissions?: boolean | User$updatedPermissionsArgs<ExtArgs>
    deletedPermissions?: boolean | User$deletedPermissionsArgs<ExtArgs>
    createdRoles?: boolean | User$createdRolesArgs<ExtArgs>
    updatedRoles?: boolean | User$updatedRolesArgs<ExtArgs>
    deletedRoles?: boolean | User$deletedRolesArgs<ExtArgs>
    createdProducts?: boolean | User$createdProductsArgs<ExtArgs>
    updatedProducts?: boolean | User$updatedProductsArgs<ExtArgs>
    deletedProducts?: boolean | User$deletedProductsArgs<ExtArgs>
    createdCategories?: boolean | User$createdCategoriesArgs<ExtArgs>
    updatedCategories?: boolean | User$updatedCategoriesArgs<ExtArgs>
    deletedCategories?: boolean | User$deletedCategoriesArgs<ExtArgs>
    createdVariants?: boolean | User$createdVariantsArgs<ExtArgs>
    updatedVariants?: boolean | User$updatedVariantsArgs<ExtArgs>
    deletedVariants?: boolean | User$deletedVariantsArgs<ExtArgs>
    createdVariantOptions?: boolean | User$createdVariantOptionsArgs<ExtArgs>
    updatedVariantOptions?: boolean | User$updatedVariantOptionsArgs<ExtArgs>
    deletedVariantOptions?: boolean | User$deletedVariantOptionsArgs<ExtArgs>
    createdSKUS?: boolean | User$createdSKUSArgs<ExtArgs>
    updatedSKUS?: boolean | User$updatedSKUSArgs<ExtArgs>
    deletedSKUS?: boolean | User$deletedSKUSArgs<ExtArgs>
    createdLanguages?: boolean | User$createdLanguagesArgs<ExtArgs>
    updatedLanguages?: boolean | User$updatedLanguagesArgs<ExtArgs>
    deletedLanguages?: boolean | User$deletedLanguagesArgs<ExtArgs>
    createdBrands?: boolean | User$createdBrandsArgs<ExtArgs>
    updatedBrands?: boolean | User$updatedBrandsArgs<ExtArgs>
    deletedBrands?: boolean | User$deletedBrandsArgs<ExtArgs>
    createdProductTranslations?: boolean | User$createdProductTranslationsArgs<ExtArgs>
    updatedProductTranslations?: boolean | User$updatedProductTranslationsArgs<ExtArgs>
    deletedProductTranslations?: boolean | User$deletedProductTranslationsArgs<ExtArgs>
    createdCategoryTranslations?: boolean | User$createdCategoryTranslationsArgs<ExtArgs>
    updatedCategoryTranslations?: boolean | User$updatedCategoryTranslationsArgs<ExtArgs>
    deletedCategoryTranslations?: boolean | User$deletedCategoryTranslationsArgs<ExtArgs>
    createdBrandTranslations?: boolean | User$createdBrandTranslationsArgs<ExtArgs>
    updatedBrandTranslations?: boolean | User$updatedBrandTranslationsArgs<ExtArgs>
    deletedBrandTranslations?: boolean | User$deletedBrandTranslationsArgs<ExtArgs>
    createdOrders?: boolean | User$createdOrdersArgs<ExtArgs>
    updatedOrders?: boolean | User$updatedOrdersArgs<ExtArgs>
    deletedOrders?: boolean | User$deletedOrdersArgs<ExtArgs>
    createdUserTranslations?: boolean | User$createdUserTranslationsArgs<ExtArgs>
    updatedUserTranslations?: boolean | User$updatedUserTranslationsArgs<ExtArgs>
    deletedUserTranslations?: boolean | User$deletedUserTranslationsArgs<ExtArgs>
    userTranslations?: boolean | User$userTranslationsArgs<ExtArgs>
    sentMessages?: boolean | User$sentMessagesArgs<ExtArgs>
    receivedMessages?: boolean | User$receivedMessagesArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    createdUsers?: boolean | User$createdUsersArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    updatedUsers?: boolean | User$updatedUsersArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
    deletedUsers?: boolean | User$deletedUsersArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
    createdBy?: boolean | User$createdByArgs<ExtArgs>
    updatedBy?: boolean | User$updatedByArgs<ExtArgs>
    deletedBy?: boolean | User$deletedByArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      role: Prisma.$RolePayload<ExtArgs>
      devices: Prisma.$DevicePayload<ExtArgs>[]
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
      carts: Prisma.$CartItemPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      createdPermissions: Prisma.$PermissionPayload<ExtArgs>[]
      updatedPermissions: Prisma.$PermissionPayload<ExtArgs>[]
      deletedPermissions: Prisma.$PermissionPayload<ExtArgs>[]
      createdRoles: Prisma.$RolePayload<ExtArgs>[]
      updatedRoles: Prisma.$RolePayload<ExtArgs>[]
      deletedRoles: Prisma.$RolePayload<ExtArgs>[]
      createdProducts: Prisma.$ProductPayload<ExtArgs>[]
      updatedProducts: Prisma.$ProductPayload<ExtArgs>[]
      deletedProducts: Prisma.$ProductPayload<ExtArgs>[]
      createdCategories: Prisma.$CategoryPayload<ExtArgs>[]
      updatedCategories: Prisma.$CategoryPayload<ExtArgs>[]
      deletedCategories: Prisma.$CategoryPayload<ExtArgs>[]
      createdVariants: Prisma.$VariantPayload<ExtArgs>[]
      updatedVariants: Prisma.$VariantPayload<ExtArgs>[]
      deletedVariants: Prisma.$VariantPayload<ExtArgs>[]
      createdVariantOptions: Prisma.$VariantOptionPayload<ExtArgs>[]
      updatedVariantOptions: Prisma.$VariantOptionPayload<ExtArgs>[]
      deletedVariantOptions: Prisma.$VariantOptionPayload<ExtArgs>[]
      createdSKUS: Prisma.$SKUPayload<ExtArgs>[]
      updatedSKUS: Prisma.$SKUPayload<ExtArgs>[]
      deletedSKUS: Prisma.$SKUPayload<ExtArgs>[]
      createdLanguages: Prisma.$LanguagePayload<ExtArgs>[]
      updatedLanguages: Prisma.$LanguagePayload<ExtArgs>[]
      deletedLanguages: Prisma.$LanguagePayload<ExtArgs>[]
      createdBrands: Prisma.$BrandPayload<ExtArgs>[]
      updatedBrands: Prisma.$BrandPayload<ExtArgs>[]
      deletedBrands: Prisma.$BrandPayload<ExtArgs>[]
      createdProductTranslations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      updatedProductTranslations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      deletedProductTranslations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      createdCategoryTranslations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      updatedCategoryTranslations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      deletedCategoryTranslations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      createdBrandTranslations: Prisma.$BrandTranslationPayload<ExtArgs>[]
      updatedBrandTranslations: Prisma.$BrandTranslationPayload<ExtArgs>[]
      deletedBrandTranslations: Prisma.$BrandTranslationPayload<ExtArgs>[]
      createdOrders: Prisma.$OrderPayload<ExtArgs>[]
      updatedOrders: Prisma.$OrderPayload<ExtArgs>[]
      deletedOrders: Prisma.$OrderPayload<ExtArgs>[]
      createdUserTranslations: Prisma.$UserTranslationPayload<ExtArgs>[]
      updatedUserTranslations: Prisma.$UserTranslationPayload<ExtArgs>[]
      deletedUserTranslations: Prisma.$UserTranslationPayload<ExtArgs>[]
      userTranslations: Prisma.$UserTranslationPayload<ExtArgs>[]
      sentMessages: Prisma.$MessagePayload<ExtArgs>[]
      receivedMessages: Prisma.$MessagePayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      createdUsers: Prisma.$UserPayload<ExtArgs>[]
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      updatedUsers: Prisma.$UserPayload<ExtArgs>[]
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedUsers: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      name: string
      password: string
      phoneNumber: string
      avatar: string | null
      totpSecret: string | null
      status: $Enums.UserStatus
      roleId: number
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    devices<T extends User$devicesArgs<ExtArgs> = {}>(args?: Subset<T, User$devicesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refreshTokens<T extends User$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, User$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    carts<T extends User$cartsArgs<ExtArgs> = {}>(args?: Subset<T, User$cartsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends User$ordersArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends User$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdPermissions<T extends User$createdPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedPermissions<T extends User$updatedPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedPermissions<T extends User$deletedPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdRoles<T extends User$createdRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedRoles<T extends User$updatedRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedRoles<T extends User$deletedRolesArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedRolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdProducts<T extends User$createdProductsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedProducts<T extends User$updatedProductsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedProducts<T extends User$deletedProductsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdCategories<T extends User$createdCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedCategories<T extends User$updatedCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedCategories<T extends User$deletedCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdVariants<T extends User$createdVariantsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdVariantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedVariants<T extends User$updatedVariantsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedVariantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedVariants<T extends User$deletedVariantsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedVariantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdVariantOptions<T extends User$createdVariantOptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdVariantOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedVariantOptions<T extends User$updatedVariantOptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedVariantOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedVariantOptions<T extends User$deletedVariantOptionsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedVariantOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdSKUS<T extends User$createdSKUSArgs<ExtArgs> = {}>(args?: Subset<T, User$createdSKUSArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedSKUS<T extends User$updatedSKUSArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedSKUSArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedSKUS<T extends User$deletedSKUSArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedSKUSArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdLanguages<T extends User$createdLanguagesArgs<ExtArgs> = {}>(args?: Subset<T, User$createdLanguagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedLanguages<T extends User$updatedLanguagesArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedLanguagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedLanguages<T extends User$deletedLanguagesArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedLanguagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBrands<T extends User$createdBrandsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdBrandsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedBrands<T extends User$updatedBrandsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedBrandsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedBrands<T extends User$deletedBrandsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedBrandsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdProductTranslations<T extends User$createdProductTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdProductTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedProductTranslations<T extends User$updatedProductTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedProductTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedProductTranslations<T extends User$deletedProductTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedProductTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdCategoryTranslations<T extends User$createdCategoryTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdCategoryTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedCategoryTranslations<T extends User$updatedCategoryTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedCategoryTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedCategoryTranslations<T extends User$deletedCategoryTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedCategoryTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBrandTranslations<T extends User$createdBrandTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdBrandTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedBrandTranslations<T extends User$updatedBrandTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedBrandTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedBrandTranslations<T extends User$deletedBrandTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedBrandTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdOrders<T extends User$createdOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$createdOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedOrders<T extends User$updatedOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedOrders<T extends User$deletedOrdersArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdUserTranslations<T extends User$createdUserTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$createdUserTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedUserTranslations<T extends User$updatedUserTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedUserTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedUserTranslations<T extends User$deletedUserTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedUserTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userTranslations<T extends User$userTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, User$userTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sentMessages<T extends User$sentMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$sentMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    receivedMessages<T extends User$receivedMessagesArgs<ExtArgs> = {}>(args?: Subset<T, User$receivedMessagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends User$createdByArgs<ExtArgs> = {}>(args?: Subset<T, User$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    createdUsers<T extends User$createdUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$createdUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    updatedBy<T extends User$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedUsers<T extends User$updatedUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$updatedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deletedBy<T extends User$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedUsers<T extends User$deletedUsersArgs<ExtArgs> = {}>(args?: Subset<T, User$deletedUsersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly phoneNumber: FieldRef<"User", 'String'>
    readonly avatar: FieldRef<"User", 'String'>
    readonly totpSecret: FieldRef<"User", 'String'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly roleId: FieldRef<"User", 'Int'>
    readonly createdById: FieldRef<"User", 'Int'>
    readonly updatedById: FieldRef<"User", 'Int'>
    readonly deletedById: FieldRef<"User", 'Int'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.devices
   */
  export type User$devicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    cursor?: DeviceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * User.refreshTokens
   */
  export type User$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User.carts
   */
  export type User$cartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    where?: CartItemWhereInput
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    cursor?: CartItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartItemScalarFieldEnum | CartItemScalarFieldEnum[]
  }

  /**
   * User.orders
   */
  export type User$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.reviews
   */
  export type User$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.createdPermissions
   */
  export type User$createdPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.updatedPermissions
   */
  export type User$updatedPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.deletedPermissions
   */
  export type User$deletedPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * User.createdRoles
   */
  export type User$createdRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.updatedRoles
   */
  export type User$updatedRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.deletedRoles
   */
  export type User$deletedRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * User.createdProducts
   */
  export type User$createdProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.updatedProducts
   */
  export type User$updatedProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.deletedProducts
   */
  export type User$deletedProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * User.createdCategories
   */
  export type User$createdCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.updatedCategories
   */
  export type User$updatedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.deletedCategories
   */
  export type User$deletedCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * User.createdVariants
   */
  export type User$createdVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    where?: VariantWhereInput
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    cursor?: VariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * User.updatedVariants
   */
  export type User$updatedVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    where?: VariantWhereInput
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    cursor?: VariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * User.deletedVariants
   */
  export type User$deletedVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    where?: VariantWhereInput
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    cursor?: VariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * User.createdVariantOptions
   */
  export type User$createdVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    cursor?: VariantOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * User.updatedVariantOptions
   */
  export type User$updatedVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    cursor?: VariantOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * User.deletedVariantOptions
   */
  export type User$deletedVariantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    cursor?: VariantOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * User.createdSKUS
   */
  export type User$createdSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    cursor?: SKUWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * User.updatedSKUS
   */
  export type User$updatedSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    cursor?: SKUWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * User.deletedSKUS
   */
  export type User$deletedSKUSArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    cursor?: SKUWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * User.createdLanguages
   */
  export type User$createdLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.updatedLanguages
   */
  export type User$updatedLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.deletedLanguages
   */
  export type User$deletedLanguagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Language
     */
    select?: LanguageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Language
     */
    omit?: LanguageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LanguageInclude<ExtArgs> | null
    where?: LanguageWhereInput
    orderBy?: LanguageOrderByWithRelationInput | LanguageOrderByWithRelationInput[]
    cursor?: LanguageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LanguageScalarFieldEnum | LanguageScalarFieldEnum[]
  }

  /**
   * User.createdBrands
   */
  export type User$createdBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * User.updatedBrands
   */
  export type User$updatedBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * User.deletedBrands
   */
  export type User$deletedBrandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    cursor?: BrandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * User.createdProductTranslations
   */
  export type User$createdProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * User.updatedProductTranslations
   */
  export type User$updatedProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * User.deletedProductTranslations
   */
  export type User$deletedProductTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * User.createdCategoryTranslations
   */
  export type User$createdCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * User.updatedCategoryTranslations
   */
  export type User$updatedCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * User.deletedCategoryTranslations
   */
  export type User$deletedCategoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * User.createdBrandTranslations
   */
  export type User$createdBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    cursor?: BrandTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * User.updatedBrandTranslations
   */
  export type User$updatedBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    cursor?: BrandTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * User.deletedBrandTranslations
   */
  export type User$deletedBrandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    cursor?: BrandTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * User.createdOrders
   */
  export type User$createdOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.updatedOrders
   */
  export type User$updatedOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.deletedOrders
   */
  export type User$deletedOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.createdUserTranslations
   */
  export type User$createdUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    cursor?: UserTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * User.updatedUserTranslations
   */
  export type User$updatedUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    cursor?: UserTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * User.deletedUserTranslations
   */
  export type User$deletedUserTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    cursor?: UserTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * User.userTranslations
   */
  export type User$userTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    cursor?: UserTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * User.sentMessages
   */
  export type User$sentMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.receivedMessages
   */
  export type User$receivedMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    cursor?: MessageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * User.createdBy
   */
  export type User$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.createdUsers
   */
  export type User$createdUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.updatedBy
   */
  export type User$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.updatedUsers
   */
  export type User$updatedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.deletedBy
   */
  export type User$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.deletedUsers
   */
  export type User$deletedUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserTranslation
   */

  export type AggregateUserTranslation = {
    _count: UserTranslationCountAggregateOutputType | null
    _avg: UserTranslationAvgAggregateOutputType | null
    _sum: UserTranslationSumAggregateOutputType | null
    _min: UserTranslationMinAggregateOutputType | null
    _max: UserTranslationMaxAggregateOutputType | null
  }

  export type UserTranslationAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserTranslationSumAggregateOutputType = {
    id: number | null
    userId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type UserTranslationMinAggregateOutputType = {
    id: number | null
    userId: number | null
    languageId: string | null
    address: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserTranslationMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    languageId: string | null
    address: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserTranslationCountAggregateOutputType = {
    id: number
    userId: number
    languageId: number
    address: number
    description: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserTranslationAvgAggregateInputType = {
    id?: true
    userId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserTranslationSumAggregateInputType = {
    id?: true
    userId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type UserTranslationMinAggregateInputType = {
    id?: true
    userId?: true
    languageId?: true
    address?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserTranslationMaxAggregateInputType = {
    id?: true
    userId?: true
    languageId?: true
    address?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserTranslationCountAggregateInputType = {
    id?: true
    userId?: true
    languageId?: true
    address?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserTranslation to aggregate.
     */
    where?: UserTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTranslations to fetch.
     */
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserTranslations
    **/
    _count?: true | UserTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserTranslationMaxAggregateInputType
  }

  export type GetUserTranslationAggregateType<T extends UserTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateUserTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserTranslation[P]>
      : GetScalarType<T[P], AggregateUserTranslation[P]>
  }




  export type UserTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserTranslationWhereInput
    orderBy?: UserTranslationOrderByWithAggregationInput | UserTranslationOrderByWithAggregationInput[]
    by: UserTranslationScalarFieldEnum[] | UserTranslationScalarFieldEnum
    having?: UserTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserTranslationCountAggregateInputType | true
    _avg?: UserTranslationAvgAggregateInputType
    _sum?: UserTranslationSumAggregateInputType
    _min?: UserTranslationMinAggregateInputType
    _max?: UserTranslationMaxAggregateInputType
  }

  export type UserTranslationGroupByOutputType = {
    id: number
    userId: number
    languageId: string
    address: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: UserTranslationCountAggregateOutputType | null
    _avg: UserTranslationAvgAggregateOutputType | null
    _sum: UserTranslationSumAggregateOutputType | null
    _min: UserTranslationMinAggregateOutputType | null
    _max: UserTranslationMaxAggregateOutputType | null
  }

  type GetUserTranslationGroupByPayload<T extends UserTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], UserTranslationGroupByOutputType[P]>
        }
      >
    >


  export type UserTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    languageId?: boolean
    address?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["userTranslation"]>

  export type UserTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    languageId?: boolean
    address?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["userTranslation"]>

  export type UserTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    languageId?: boolean
    address?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["userTranslation"]>

  export type UserTranslationSelectScalar = {
    id?: boolean
    userId?: boolean
    languageId?: boolean
    address?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "languageId" | "address" | "description" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["userTranslation"]>
  export type UserTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }
  export type UserTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }
  export type UserTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | UserTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | UserTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | UserTranslation$deletedByArgs<ExtArgs>
  }

  export type $UserTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserTranslation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      language: Prisma.$LanguagePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      languageId: string
      address: string | null
      description: string | null
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userTranslation"]>
    composites: {}
  }

  type UserTranslationGetPayload<S extends boolean | null | undefined | UserTranslationDefaultArgs> = $Result.GetResult<Prisma.$UserTranslationPayload, S>

  type UserTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserTranslationCountAggregateInputType | true
    }

  export interface UserTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserTranslation'], meta: { name: 'UserTranslation' } }
    /**
     * Find zero or one UserTranslation that matches the filter.
     * @param {UserTranslationFindUniqueArgs} args - Arguments to find a UserTranslation
     * @example
     * // Get one UserTranslation
     * const userTranslation = await prisma.userTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserTranslationFindUniqueArgs>(args: SelectSubset<T, UserTranslationFindUniqueArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserTranslationFindUniqueOrThrowArgs} args - Arguments to find a UserTranslation
     * @example
     * // Get one UserTranslation
     * const userTranslation = await prisma.userTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, UserTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationFindFirstArgs} args - Arguments to find a UserTranslation
     * @example
     * // Get one UserTranslation
     * const userTranslation = await prisma.userTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserTranslationFindFirstArgs>(args?: SelectSubset<T, UserTranslationFindFirstArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationFindFirstOrThrowArgs} args - Arguments to find a UserTranslation
     * @example
     * // Get one UserTranslation
     * const userTranslation = await prisma.userTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, UserTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserTranslations
     * const userTranslations = await prisma.userTranslation.findMany()
     * 
     * // Get first 10 UserTranslations
     * const userTranslations = await prisma.userTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userTranslationWithIdOnly = await prisma.userTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserTranslationFindManyArgs>(args?: SelectSubset<T, UserTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserTranslation.
     * @param {UserTranslationCreateArgs} args - Arguments to create a UserTranslation.
     * @example
     * // Create one UserTranslation
     * const UserTranslation = await prisma.userTranslation.create({
     *   data: {
     *     // ... data to create a UserTranslation
     *   }
     * })
     * 
     */
    create<T extends UserTranslationCreateArgs>(args: SelectSubset<T, UserTranslationCreateArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserTranslations.
     * @param {UserTranslationCreateManyArgs} args - Arguments to create many UserTranslations.
     * @example
     * // Create many UserTranslations
     * const userTranslation = await prisma.userTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserTranslationCreateManyArgs>(args?: SelectSubset<T, UserTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserTranslations and returns the data saved in the database.
     * @param {UserTranslationCreateManyAndReturnArgs} args - Arguments to create many UserTranslations.
     * @example
     * // Create many UserTranslations
     * const userTranslation = await prisma.userTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserTranslations and only return the `id`
     * const userTranslationWithIdOnly = await prisma.userTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, UserTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserTranslation.
     * @param {UserTranslationDeleteArgs} args - Arguments to delete one UserTranslation.
     * @example
     * // Delete one UserTranslation
     * const UserTranslation = await prisma.userTranslation.delete({
     *   where: {
     *     // ... filter to delete one UserTranslation
     *   }
     * })
     * 
     */
    delete<T extends UserTranslationDeleteArgs>(args: SelectSubset<T, UserTranslationDeleteArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserTranslation.
     * @param {UserTranslationUpdateArgs} args - Arguments to update one UserTranslation.
     * @example
     * // Update one UserTranslation
     * const userTranslation = await prisma.userTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserTranslationUpdateArgs>(args: SelectSubset<T, UserTranslationUpdateArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserTranslations.
     * @param {UserTranslationDeleteManyArgs} args - Arguments to filter UserTranslations to delete.
     * @example
     * // Delete a few UserTranslations
     * const { count } = await prisma.userTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserTranslationDeleteManyArgs>(args?: SelectSubset<T, UserTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserTranslations
     * const userTranslation = await prisma.userTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserTranslationUpdateManyArgs>(args: SelectSubset<T, UserTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserTranslations and returns the data updated in the database.
     * @param {UserTranslationUpdateManyAndReturnArgs} args - Arguments to update many UserTranslations.
     * @example
     * // Update many UserTranslations
     * const userTranslation = await prisma.userTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserTranslations and only return the `id`
     * const userTranslationWithIdOnly = await prisma.userTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, UserTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserTranslation.
     * @param {UserTranslationUpsertArgs} args - Arguments to update or create a UserTranslation.
     * @example
     * // Update or create a UserTranslation
     * const userTranslation = await prisma.userTranslation.upsert({
     *   create: {
     *     // ... data to create a UserTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserTranslation we want to update
     *   }
     * })
     */
    upsert<T extends UserTranslationUpsertArgs>(args: SelectSubset<T, UserTranslationUpsertArgs<ExtArgs>>): Prisma__UserTranslationClient<$Result.GetResult<Prisma.$UserTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationCountArgs} args - Arguments to filter UserTranslations to count.
     * @example
     * // Count the number of UserTranslations
     * const count = await prisma.userTranslation.count({
     *   where: {
     *     // ... the filter for the UserTranslations we want to count
     *   }
     * })
    **/
    count<T extends UserTranslationCountArgs>(
      args?: Subset<T, UserTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserTranslationAggregateArgs>(args: Subset<T, UserTranslationAggregateArgs>): Prisma.PrismaPromise<GetUserTranslationAggregateType<T>>

    /**
     * Group by UserTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserTranslationGroupByArgs['orderBy'] }
        : { orderBy?: UserTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserTranslation model
   */
  readonly fields: UserTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends UserTranslation$createdByArgs<ExtArgs> = {}>(args?: Subset<T, UserTranslation$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends UserTranslation$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, UserTranslation$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends UserTranslation$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, UserTranslation$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserTranslation model
   */
  interface UserTranslationFieldRefs {
    readonly id: FieldRef<"UserTranslation", 'Int'>
    readonly userId: FieldRef<"UserTranslation", 'Int'>
    readonly languageId: FieldRef<"UserTranslation", 'String'>
    readonly address: FieldRef<"UserTranslation", 'String'>
    readonly description: FieldRef<"UserTranslation", 'String'>
    readonly createdById: FieldRef<"UserTranslation", 'Int'>
    readonly updatedById: FieldRef<"UserTranslation", 'Int'>
    readonly deletedById: FieldRef<"UserTranslation", 'Int'>
    readonly deletedAt: FieldRef<"UserTranslation", 'DateTime'>
    readonly createdAt: FieldRef<"UserTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"UserTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserTranslation findUnique
   */
  export type UserTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter, which UserTranslation to fetch.
     */
    where: UserTranslationWhereUniqueInput
  }

  /**
   * UserTranslation findUniqueOrThrow
   */
  export type UserTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter, which UserTranslation to fetch.
     */
    where: UserTranslationWhereUniqueInput
  }

  /**
   * UserTranslation findFirst
   */
  export type UserTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter, which UserTranslation to fetch.
     */
    where?: UserTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTranslations to fetch.
     */
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserTranslations.
     */
    cursor?: UserTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserTranslations.
     */
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * UserTranslation findFirstOrThrow
   */
  export type UserTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter, which UserTranslation to fetch.
     */
    where?: UserTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTranslations to fetch.
     */
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserTranslations.
     */
    cursor?: UserTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserTranslations.
     */
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * UserTranslation findMany
   */
  export type UserTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter, which UserTranslations to fetch.
     */
    where?: UserTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTranslations to fetch.
     */
    orderBy?: UserTranslationOrderByWithRelationInput | UserTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserTranslations.
     */
    cursor?: UserTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTranslations.
     */
    skip?: number
    distinct?: UserTranslationScalarFieldEnum | UserTranslationScalarFieldEnum[]
  }

  /**
   * UserTranslation create
   */
  export type UserTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a UserTranslation.
     */
    data: XOR<UserTranslationCreateInput, UserTranslationUncheckedCreateInput>
  }

  /**
   * UserTranslation createMany
   */
  export type UserTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserTranslations.
     */
    data: UserTranslationCreateManyInput | UserTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserTranslation createManyAndReturn
   */
  export type UserTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many UserTranslations.
     */
    data: UserTranslationCreateManyInput | UserTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserTranslation update
   */
  export type UserTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a UserTranslation.
     */
    data: XOR<UserTranslationUpdateInput, UserTranslationUncheckedUpdateInput>
    /**
     * Choose, which UserTranslation to update.
     */
    where: UserTranslationWhereUniqueInput
  }

  /**
   * UserTranslation updateMany
   */
  export type UserTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserTranslations.
     */
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyInput>
    /**
     * Filter which UserTranslations to update
     */
    where?: UserTranslationWhereInput
    /**
     * Limit how many UserTranslations to update.
     */
    limit?: number
  }

  /**
   * UserTranslation updateManyAndReturn
   */
  export type UserTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * The data used to update UserTranslations.
     */
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyInput>
    /**
     * Filter which UserTranslations to update
     */
    where?: UserTranslationWhereInput
    /**
     * Limit how many UserTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserTranslation upsert
   */
  export type UserTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the UserTranslation to update in case it exists.
     */
    where: UserTranslationWhereUniqueInput
    /**
     * In case the UserTranslation found by the `where` argument doesn't exist, create a new UserTranslation with this data.
     */
    create: XOR<UserTranslationCreateInput, UserTranslationUncheckedCreateInput>
    /**
     * In case the UserTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserTranslationUpdateInput, UserTranslationUncheckedUpdateInput>
  }

  /**
   * UserTranslation delete
   */
  export type UserTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
    /**
     * Filter which UserTranslation to delete.
     */
    where: UserTranslationWhereUniqueInput
  }

  /**
   * UserTranslation deleteMany
   */
  export type UserTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserTranslations to delete
     */
    where?: UserTranslationWhereInput
    /**
     * Limit how many UserTranslations to delete.
     */
    limit?: number
  }

  /**
   * UserTranslation.createdBy
   */
  export type UserTranslation$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserTranslation.updatedBy
   */
  export type UserTranslation$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserTranslation.deletedBy
   */
  export type UserTranslation$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * UserTranslation without action
   */
  export type UserTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserTranslation
     */
    select?: UserTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserTranslation
     */
    omit?: UserTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserTranslationInclude<ExtArgs> | null
  }


  /**
   * Model VerificationCode
   */

  export type AggregateVerificationCode = {
    _count: VerificationCodeCountAggregateOutputType | null
    _avg: VerificationCodeAvgAggregateOutputType | null
    _sum: VerificationCodeSumAggregateOutputType | null
    _min: VerificationCodeMinAggregateOutputType | null
    _max: VerificationCodeMaxAggregateOutputType | null
  }

  export type VerificationCodeAvgAggregateOutputType = {
    id: number | null
  }

  export type VerificationCodeSumAggregateOutputType = {
    id: number | null
  }

  export type VerificationCodeMinAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    type: $Enums.VerificationCodeType | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type VerificationCodeMaxAggregateOutputType = {
    id: number | null
    email: string | null
    code: string | null
    type: $Enums.VerificationCodeType | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type VerificationCodeCountAggregateOutputType = {
    id: number
    email: number
    code: number
    type: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type VerificationCodeAvgAggregateInputType = {
    id?: true
  }

  export type VerificationCodeSumAggregateInputType = {
    id?: true
  }

  export type VerificationCodeMinAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
  }

  export type VerificationCodeMaxAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
  }

  export type VerificationCodeCountAggregateInputType = {
    id?: true
    email?: true
    code?: true
    type?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type VerificationCodeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationCode to aggregate.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationCodes
    **/
    _count?: true | VerificationCodeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VerificationCodeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VerificationCodeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationCodeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationCodeMaxAggregateInputType
  }

  export type GetVerificationCodeAggregateType<T extends VerificationCodeAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationCode]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationCode[P]>
      : GetScalarType<T[P], AggregateVerificationCode[P]>
  }




  export type VerificationCodeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationCodeWhereInput
    orderBy?: VerificationCodeOrderByWithAggregationInput | VerificationCodeOrderByWithAggregationInput[]
    by: VerificationCodeScalarFieldEnum[] | VerificationCodeScalarFieldEnum
    having?: VerificationCodeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationCodeCountAggregateInputType | true
    _avg?: VerificationCodeAvgAggregateInputType
    _sum?: VerificationCodeSumAggregateInputType
    _min?: VerificationCodeMinAggregateInputType
    _max?: VerificationCodeMaxAggregateInputType
  }

  export type VerificationCodeGroupByOutputType = {
    id: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date
    createdAt: Date
    _count: VerificationCodeCountAggregateOutputType | null
    _avg: VerificationCodeAvgAggregateOutputType | null
    _sum: VerificationCodeSumAggregateOutputType | null
    _min: VerificationCodeMinAggregateOutputType | null
    _max: VerificationCodeMaxAggregateOutputType | null
  }

  type GetVerificationCodeGroupByPayload<T extends VerificationCodeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationCodeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationCodeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationCodeGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationCodeGroupByOutputType[P]>
        }
      >
    >


  export type VerificationCodeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["verificationCode"]>

  export type VerificationCodeSelectScalar = {
    id?: boolean
    email?: boolean
    code?: boolean
    type?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type VerificationCodeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "code" | "type" | "expiresAt" | "createdAt", ExtArgs["result"]["verificationCode"]>

  export type $VerificationCodePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationCode"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      code: string
      type: $Enums.VerificationCodeType
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["verificationCode"]>
    composites: {}
  }

  type VerificationCodeGetPayload<S extends boolean | null | undefined | VerificationCodeDefaultArgs> = $Result.GetResult<Prisma.$VerificationCodePayload, S>

  type VerificationCodeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationCodeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationCodeCountAggregateInputType | true
    }

  export interface VerificationCodeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationCode'], meta: { name: 'VerificationCode' } }
    /**
     * Find zero or one VerificationCode that matches the filter.
     * @param {VerificationCodeFindUniqueArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationCodeFindUniqueArgs>(args: SelectSubset<T, VerificationCodeFindUniqueArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationCode that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationCodeFindUniqueOrThrowArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationCodeFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationCodeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationCode that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindFirstArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationCodeFindFirstArgs>(args?: SelectSubset<T, VerificationCodeFindFirstArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationCode that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindFirstOrThrowArgs} args - Arguments to find a VerificationCode
     * @example
     * // Get one VerificationCode
     * const verificationCode = await prisma.verificationCode.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationCodeFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationCodeFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationCodes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationCodes
     * const verificationCodes = await prisma.verificationCode.findMany()
     * 
     * // Get first 10 VerificationCodes
     * const verificationCodes = await prisma.verificationCode.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationCodeFindManyArgs>(args?: SelectSubset<T, VerificationCodeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationCode.
     * @param {VerificationCodeCreateArgs} args - Arguments to create a VerificationCode.
     * @example
     * // Create one VerificationCode
     * const VerificationCode = await prisma.verificationCode.create({
     *   data: {
     *     // ... data to create a VerificationCode
     *   }
     * })
     * 
     */
    create<T extends VerificationCodeCreateArgs>(args: SelectSubset<T, VerificationCodeCreateArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationCodes.
     * @param {VerificationCodeCreateManyArgs} args - Arguments to create many VerificationCodes.
     * @example
     * // Create many VerificationCodes
     * const verificationCode = await prisma.verificationCode.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationCodeCreateManyArgs>(args?: SelectSubset<T, VerificationCodeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationCodes and returns the data saved in the database.
     * @param {VerificationCodeCreateManyAndReturnArgs} args - Arguments to create many VerificationCodes.
     * @example
     * // Create many VerificationCodes
     * const verificationCode = await prisma.verificationCode.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationCodes and only return the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationCodeCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationCodeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationCode.
     * @param {VerificationCodeDeleteArgs} args - Arguments to delete one VerificationCode.
     * @example
     * // Delete one VerificationCode
     * const VerificationCode = await prisma.verificationCode.delete({
     *   where: {
     *     // ... filter to delete one VerificationCode
     *   }
     * })
     * 
     */
    delete<T extends VerificationCodeDeleteArgs>(args: SelectSubset<T, VerificationCodeDeleteArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationCode.
     * @param {VerificationCodeUpdateArgs} args - Arguments to update one VerificationCode.
     * @example
     * // Update one VerificationCode
     * const verificationCode = await prisma.verificationCode.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationCodeUpdateArgs>(args: SelectSubset<T, VerificationCodeUpdateArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationCodes.
     * @param {VerificationCodeDeleteManyArgs} args - Arguments to filter VerificationCodes to delete.
     * @example
     * // Delete a few VerificationCodes
     * const { count } = await prisma.verificationCode.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationCodeDeleteManyArgs>(args?: SelectSubset<T, VerificationCodeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationCodes
     * const verificationCode = await prisma.verificationCode.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationCodeUpdateManyArgs>(args: SelectSubset<T, VerificationCodeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationCodes and returns the data updated in the database.
     * @param {VerificationCodeUpdateManyAndReturnArgs} args - Arguments to update many VerificationCodes.
     * @example
     * // Update many VerificationCodes
     * const verificationCode = await prisma.verificationCode.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationCodes and only return the `id`
     * const verificationCodeWithIdOnly = await prisma.verificationCode.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationCodeUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationCodeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationCode.
     * @param {VerificationCodeUpsertArgs} args - Arguments to update or create a VerificationCode.
     * @example
     * // Update or create a VerificationCode
     * const verificationCode = await prisma.verificationCode.upsert({
     *   create: {
     *     // ... data to create a VerificationCode
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationCode we want to update
     *   }
     * })
     */
    upsert<T extends VerificationCodeUpsertArgs>(args: SelectSubset<T, VerificationCodeUpsertArgs<ExtArgs>>): Prisma__VerificationCodeClient<$Result.GetResult<Prisma.$VerificationCodePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationCodes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeCountArgs} args - Arguments to filter VerificationCodes to count.
     * @example
     * // Count the number of VerificationCodes
     * const count = await prisma.verificationCode.count({
     *   where: {
     *     // ... the filter for the VerificationCodes we want to count
     *   }
     * })
    **/
    count<T extends VerificationCodeCountArgs>(
      args?: Subset<T, VerificationCodeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationCodeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationCodeAggregateArgs>(args: Subset<T, VerificationCodeAggregateArgs>): Prisma.PrismaPromise<GetVerificationCodeAggregateType<T>>

    /**
     * Group by VerificationCode.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCodeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationCodeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationCodeGroupByArgs['orderBy'] }
        : { orderBy?: VerificationCodeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationCodeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationCodeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationCode model
   */
  readonly fields: VerificationCodeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationCode.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationCodeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationCode model
   */
  interface VerificationCodeFieldRefs {
    readonly id: FieldRef<"VerificationCode", 'Int'>
    readonly email: FieldRef<"VerificationCode", 'String'>
    readonly code: FieldRef<"VerificationCode", 'String'>
    readonly type: FieldRef<"VerificationCode", 'VerificationCodeType'>
    readonly expiresAt: FieldRef<"VerificationCode", 'DateTime'>
    readonly createdAt: FieldRef<"VerificationCode", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationCode findUnique
   */
  export type VerificationCodeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode findUniqueOrThrow
   */
  export type VerificationCodeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode findFirst
   */
  export type VerificationCodeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationCodes.
     */
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode findFirstOrThrow
   */
  export type VerificationCodeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCode to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationCodes.
     */
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode findMany
   */
  export type VerificationCodeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter, which VerificationCodes to fetch.
     */
    where?: VerificationCodeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationCodes to fetch.
     */
    orderBy?: VerificationCodeOrderByWithRelationInput | VerificationCodeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationCodes.
     */
    cursor?: VerificationCodeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationCodes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationCodes.
     */
    skip?: number
    distinct?: VerificationCodeScalarFieldEnum | VerificationCodeScalarFieldEnum[]
  }

  /**
   * VerificationCode create
   */
  export type VerificationCodeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationCode.
     */
    data: XOR<VerificationCodeCreateInput, VerificationCodeUncheckedCreateInput>
  }

  /**
   * VerificationCode createMany
   */
  export type VerificationCodeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationCodes.
     */
    data: VerificationCodeCreateManyInput | VerificationCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationCode createManyAndReturn
   */
  export type VerificationCodeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationCodes.
     */
    data: VerificationCodeCreateManyInput | VerificationCodeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationCode update
   */
  export type VerificationCodeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationCode.
     */
    data: XOR<VerificationCodeUpdateInput, VerificationCodeUncheckedUpdateInput>
    /**
     * Choose, which VerificationCode to update.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode updateMany
   */
  export type VerificationCodeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationCodes.
     */
    data: XOR<VerificationCodeUpdateManyMutationInput, VerificationCodeUncheckedUpdateManyInput>
    /**
     * Filter which VerificationCodes to update
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to update.
     */
    limit?: number
  }

  /**
   * VerificationCode updateManyAndReturn
   */
  export type VerificationCodeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The data used to update VerificationCodes.
     */
    data: XOR<VerificationCodeUpdateManyMutationInput, VerificationCodeUncheckedUpdateManyInput>
    /**
     * Filter which VerificationCodes to update
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to update.
     */
    limit?: number
  }

  /**
   * VerificationCode upsert
   */
  export type VerificationCodeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationCode to update in case it exists.
     */
    where: VerificationCodeWhereUniqueInput
    /**
     * In case the VerificationCode found by the `where` argument doesn't exist, create a new VerificationCode with this data.
     */
    create: XOR<VerificationCodeCreateInput, VerificationCodeUncheckedCreateInput>
    /**
     * In case the VerificationCode was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationCodeUpdateInput, VerificationCodeUncheckedUpdateInput>
  }

  /**
   * VerificationCode delete
   */
  export type VerificationCodeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
    /**
     * Filter which VerificationCode to delete.
     */
    where: VerificationCodeWhereUniqueInput
  }

  /**
   * VerificationCode deleteMany
   */
  export type VerificationCodeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationCodes to delete
     */
    where?: VerificationCodeWhereInput
    /**
     * Limit how many VerificationCodes to delete.
     */
    limit?: number
  }

  /**
   * VerificationCode without action
   */
  export type VerificationCodeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationCode
     */
    select?: VerificationCodeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationCode
     */
    omit?: VerificationCodeOmit<ExtArgs> | null
  }


  /**
   * Model Device
   */

  export type AggregateDevice = {
    _count: DeviceCountAggregateOutputType | null
    _avg: DeviceAvgAggregateOutputType | null
    _sum: DeviceSumAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  export type DeviceAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type DeviceSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type DeviceMinAggregateOutputType = {
    id: number | null
    userId: number | null
    userAgent: string | null
    ip: string | null
    lastActive: Date | null
    createdAt: Date | null
    isActive: boolean | null
  }

  export type DeviceMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    userAgent: string | null
    ip: string | null
    lastActive: Date | null
    createdAt: Date | null
    isActive: boolean | null
  }

  export type DeviceCountAggregateOutputType = {
    id: number
    userId: number
    userAgent: number
    ip: number
    lastActive: number
    createdAt: number
    isActive: number
    _all: number
  }


  export type DeviceAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type DeviceSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type DeviceMinAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
  }

  export type DeviceMaxAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
  }

  export type DeviceCountAggregateInputType = {
    id?: true
    userId?: true
    userAgent?: true
    ip?: true
    lastActive?: true
    createdAt?: true
    isActive?: true
    _all?: true
  }

  export type DeviceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Device to aggregate.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Devices
    **/
    _count?: true | DeviceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeviceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeviceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeviceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeviceMaxAggregateInputType
  }

  export type GetDeviceAggregateType<T extends DeviceAggregateArgs> = {
        [P in keyof T & keyof AggregateDevice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDevice[P]>
      : GetScalarType<T[P], AggregateDevice[P]>
  }




  export type DeviceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DeviceWhereInput
    orderBy?: DeviceOrderByWithAggregationInput | DeviceOrderByWithAggregationInput[]
    by: DeviceScalarFieldEnum[] | DeviceScalarFieldEnum
    having?: DeviceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeviceCountAggregateInputType | true
    _avg?: DeviceAvgAggregateInputType
    _sum?: DeviceSumAggregateInputType
    _min?: DeviceMinAggregateInputType
    _max?: DeviceMaxAggregateInputType
  }

  export type DeviceGroupByOutputType = {
    id: number
    userId: number
    userAgent: string
    ip: string
    lastActive: Date
    createdAt: Date
    isActive: boolean
    _count: DeviceCountAggregateOutputType | null
    _avg: DeviceAvgAggregateOutputType | null
    _sum: DeviceSumAggregateOutputType | null
    _min: DeviceMinAggregateOutputType | null
    _max: DeviceMaxAggregateOutputType | null
  }

  type GetDeviceGroupByPayload<T extends DeviceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeviceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeviceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeviceGroupByOutputType[P]>
            : GetScalarType<T[P], DeviceGroupByOutputType[P]>
        }
      >
    >


  export type DeviceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    refreshTokens?: boolean | Device$refreshTokensArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["device"]>

  export type DeviceSelectScalar = {
    id?: boolean
    userId?: boolean
    userAgent?: boolean
    ip?: boolean
    lastActive?: boolean
    createdAt?: boolean
    isActive?: boolean
  }

  export type DeviceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "userAgent" | "ip" | "lastActive" | "createdAt" | "isActive", ExtArgs["result"]["device"]>
  export type DeviceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    refreshTokens?: boolean | Device$refreshTokensArgs<ExtArgs>
    _count?: boolean | DeviceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type DeviceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $DevicePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Device"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      refreshTokens: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      userAgent: string
      ip: string
      lastActive: Date
      createdAt: Date
      isActive: boolean
    }, ExtArgs["result"]["device"]>
    composites: {}
  }

  type DeviceGetPayload<S extends boolean | null | undefined | DeviceDefaultArgs> = $Result.GetResult<Prisma.$DevicePayload, S>

  type DeviceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DeviceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeviceCountAggregateInputType | true
    }

  export interface DeviceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Device'], meta: { name: 'Device' } }
    /**
     * Find zero or one Device that matches the filter.
     * @param {DeviceFindUniqueArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DeviceFindUniqueArgs>(args: SelectSubset<T, DeviceFindUniqueArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Device that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DeviceFindUniqueOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DeviceFindUniqueOrThrowArgs>(args: SelectSubset<T, DeviceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DeviceFindFirstArgs>(args?: SelectSubset<T, DeviceFindFirstArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Device that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindFirstOrThrowArgs} args - Arguments to find a Device
     * @example
     * // Get one Device
     * const device = await prisma.device.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DeviceFindFirstOrThrowArgs>(args?: SelectSubset<T, DeviceFindFirstOrThrowArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Devices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Devices
     * const devices = await prisma.device.findMany()
     * 
     * // Get first 10 Devices
     * const devices = await prisma.device.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deviceWithIdOnly = await prisma.device.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DeviceFindManyArgs>(args?: SelectSubset<T, DeviceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Device.
     * @param {DeviceCreateArgs} args - Arguments to create a Device.
     * @example
     * // Create one Device
     * const Device = await prisma.device.create({
     *   data: {
     *     // ... data to create a Device
     *   }
     * })
     * 
     */
    create<T extends DeviceCreateArgs>(args: SelectSubset<T, DeviceCreateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Devices.
     * @param {DeviceCreateManyArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DeviceCreateManyArgs>(args?: SelectSubset<T, DeviceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Devices and returns the data saved in the database.
     * @param {DeviceCreateManyAndReturnArgs} args - Arguments to create many Devices.
     * @example
     * // Create many Devices
     * const device = await prisma.device.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DeviceCreateManyAndReturnArgs>(args?: SelectSubset<T, DeviceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Device.
     * @param {DeviceDeleteArgs} args - Arguments to delete one Device.
     * @example
     * // Delete one Device
     * const Device = await prisma.device.delete({
     *   where: {
     *     // ... filter to delete one Device
     *   }
     * })
     * 
     */
    delete<T extends DeviceDeleteArgs>(args: SelectSubset<T, DeviceDeleteArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Device.
     * @param {DeviceUpdateArgs} args - Arguments to update one Device.
     * @example
     * // Update one Device
     * const device = await prisma.device.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DeviceUpdateArgs>(args: SelectSubset<T, DeviceUpdateArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Devices.
     * @param {DeviceDeleteManyArgs} args - Arguments to filter Devices to delete.
     * @example
     * // Delete a few Devices
     * const { count } = await prisma.device.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DeviceDeleteManyArgs>(args?: SelectSubset<T, DeviceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DeviceUpdateManyArgs>(args: SelectSubset<T, DeviceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Devices and returns the data updated in the database.
     * @param {DeviceUpdateManyAndReturnArgs} args - Arguments to update many Devices.
     * @example
     * // Update many Devices
     * const device = await prisma.device.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Devices and only return the `id`
     * const deviceWithIdOnly = await prisma.device.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DeviceUpdateManyAndReturnArgs>(args: SelectSubset<T, DeviceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Device.
     * @param {DeviceUpsertArgs} args - Arguments to update or create a Device.
     * @example
     * // Update or create a Device
     * const device = await prisma.device.upsert({
     *   create: {
     *     // ... data to create a Device
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Device we want to update
     *   }
     * })
     */
    upsert<T extends DeviceUpsertArgs>(args: SelectSubset<T, DeviceUpsertArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Devices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceCountArgs} args - Arguments to filter Devices to count.
     * @example
     * // Count the number of Devices
     * const count = await prisma.device.count({
     *   where: {
     *     // ... the filter for the Devices we want to count
     *   }
     * })
    **/
    count<T extends DeviceCountArgs>(
      args?: Subset<T, DeviceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeviceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeviceAggregateArgs>(args: Subset<T, DeviceAggregateArgs>): Prisma.PrismaPromise<GetDeviceAggregateType<T>>

    /**
     * Group by Device.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeviceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DeviceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DeviceGroupByArgs['orderBy'] }
        : { orderBy?: DeviceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DeviceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeviceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Device model
   */
  readonly fields: DeviceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Device.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DeviceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    refreshTokens<T extends Device$refreshTokensArgs<ExtArgs> = {}>(args?: Subset<T, Device$refreshTokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Device model
   */
  interface DeviceFieldRefs {
    readonly id: FieldRef<"Device", 'Int'>
    readonly userId: FieldRef<"Device", 'Int'>
    readonly userAgent: FieldRef<"Device", 'String'>
    readonly ip: FieldRef<"Device", 'String'>
    readonly lastActive: FieldRef<"Device", 'DateTime'>
    readonly createdAt: FieldRef<"Device", 'DateTime'>
    readonly isActive: FieldRef<"Device", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Device findUnique
   */
  export type DeviceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findUniqueOrThrow
   */
  export type DeviceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device findFirst
   */
  export type DeviceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findFirstOrThrow
   */
  export type DeviceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Device to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Devices.
     */
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device findMany
   */
  export type DeviceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter, which Devices to fetch.
     */
    where?: DeviceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Devices to fetch.
     */
    orderBy?: DeviceOrderByWithRelationInput | DeviceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Devices.
     */
    cursor?: DeviceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Devices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Devices.
     */
    skip?: number
    distinct?: DeviceScalarFieldEnum | DeviceScalarFieldEnum[]
  }

  /**
   * Device create
   */
  export type DeviceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to create a Device.
     */
    data: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
  }

  /**
   * Device createMany
   */
  export type DeviceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Device createManyAndReturn
   */
  export type DeviceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to create many Devices.
     */
    data: DeviceCreateManyInput | DeviceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device update
   */
  export type DeviceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The data needed to update a Device.
     */
    data: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
    /**
     * Choose, which Device to update.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device updateMany
   */
  export type DeviceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
  }

  /**
   * Device updateManyAndReturn
   */
  export type DeviceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * The data used to update Devices.
     */
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyInput>
    /**
     * Filter which Devices to update
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Device upsert
   */
  export type DeviceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * The filter to search for the Device to update in case it exists.
     */
    where: DeviceWhereUniqueInput
    /**
     * In case the Device found by the `where` argument doesn't exist, create a new Device with this data.
     */
    create: XOR<DeviceCreateInput, DeviceUncheckedCreateInput>
    /**
     * In case the Device was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DeviceUpdateInput, DeviceUncheckedUpdateInput>
  }

  /**
   * Device delete
   */
  export type DeviceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
    /**
     * Filter which Device to delete.
     */
    where: DeviceWhereUniqueInput
  }

  /**
   * Device deleteMany
   */
  export type DeviceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Devices to delete
     */
    where?: DeviceWhereInput
    /**
     * Limit how many Devices to delete.
     */
    limit?: number
  }

  /**
   * Device.refreshTokens
   */
  export type Device$refreshTokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * Device without action
   */
  export type DeviceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Device
     */
    select?: DeviceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Device
     */
    omit?: DeviceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DeviceInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenAvgAggregateOutputType = {
    userId: number | null
    deviceId: number | null
  }

  export type RefreshTokenSumAggregateOutputType = {
    userId: number | null
    deviceId: number | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    token: string | null
    userId: number | null
    deviceId: number | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    token: string | null
    userId: number | null
    deviceId: number | null
    expiresAt: Date | null
    createdAt: Date | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    token: number
    userId: number
    deviceId: number
    expiresAt: number
    createdAt: number
    _all: number
  }


  export type RefreshTokenAvgAggregateInputType = {
    userId?: true
    deviceId?: true
  }

  export type RefreshTokenSumAggregateInputType = {
    userId?: true
    deviceId?: true
  }

  export type RefreshTokenMinAggregateInputType = {
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    token?: true
    userId?: true
    deviceId?: true
    expiresAt?: true
    createdAt?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RefreshTokenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RefreshTokenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _avg?: RefreshTokenAvgAggregateInputType
    _sum?: RefreshTokenSumAggregateInputType
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    token: string
    userId: number
    deviceId: number
    expiresAt: Date
    createdAt: Date
    _count: RefreshTokenCountAggregateOutputType | null
    _avg: RefreshTokenAvgAggregateOutputType | null
    _sum: RefreshTokenSumAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>

  export type RefreshTokenSelectScalar = {
    token?: boolean
    userId?: boolean
    deviceId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
  }

  export type RefreshTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"token" | "userId" | "deviceId" | "expiresAt" | "createdAt", ExtArgs["result"]["refreshToken"]>
  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }
  export type RefreshTokenIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    device?: boolean | DeviceDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      device: Prisma.$DevicePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      token: string
      userId: number
      deviceId: number
      expiresAt: Date
      createdAt: Date
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `token`
     * const refreshTokenWithTokenOnly = await prisma.refreshToken.findMany({ select: { token: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many RefreshTokens and returns the data saved in the database.
     * @param {RefreshTokenCreateManyAndReturnArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many RefreshTokens and only return the `token`
     * const refreshTokenWithTokenOnly = await prisma.refreshToken.createManyAndReturn({
     *   select: { token: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RefreshTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, RefreshTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens and returns the data updated in the database.
     * @param {RefreshTokenUpdateManyAndReturnArgs} args - Arguments to update many RefreshTokens.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more RefreshTokens and only return the `token`
     * const refreshTokenWithTokenOnly = await prisma.refreshToken.updateManyAndReturn({
     *   select: { token: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RefreshTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, RefreshTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    device<T extends DeviceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DeviceDefaultArgs<ExtArgs>>): Prisma__DeviceClient<$Result.GetResult<Prisma.$DevicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */
  interface RefreshTokenFieldRefs {
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'Int'>
    readonly deviceId: FieldRef<"RefreshToken", 'Int'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken createManyAndReturn
   */
  export type RefreshTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
  }

  /**
   * RefreshToken updateManyAndReturn
   */
  export type RefreshTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
    /**
     * Limit how many RefreshTokens to delete.
     */
    limit?: number
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RefreshToken
     */
    omit?: RefreshTokenOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model Permission
   */

  export type AggregatePermission = {
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  export type PermissionAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type PermissionSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type PermissionMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    path: string | null
    method: $Enums.HTTPMethod | null
    module: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    path: string | null
    method: $Enums.HTTPMethod | null
    module: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PermissionCountAggregateOutputType = {
    id: number
    name: number
    description: number
    path: number
    method: number
    module: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PermissionAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type PermissionSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type PermissionMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PermissionCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    path?: true
    method?: true
    module?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permission to aggregate.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Permissions
    **/
    _count?: true | PermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionMaxAggregateInputType
  }

  export type GetPermissionAggregateType<T extends PermissionAggregateArgs> = {
        [P in keyof T & keyof AggregatePermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermission[P]>
      : GetScalarType<T[P], AggregatePermission[P]>
  }




  export type PermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithAggregationInput | PermissionOrderByWithAggregationInput[]
    by: PermissionScalarFieldEnum[] | PermissionScalarFieldEnum
    having?: PermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionCountAggregateInputType | true
    _avg?: PermissionAvgAggregateInputType
    _sum?: PermissionSumAggregateInputType
    _min?: PermissionMinAggregateInputType
    _max?: PermissionMaxAggregateInputType
  }

  export type PermissionGroupByOutputType = {
    id: number
    name: string
    description: string
    path: string
    method: $Enums.HTTPMethod
    module: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: PermissionCountAggregateOutputType | null
    _avg: PermissionAvgAggregateOutputType | null
    _sum: PermissionSumAggregateOutputType | null
    _min: PermissionMinAggregateOutputType | null
    _max: PermissionMaxAggregateOutputType | null
  }

  type GetPermissionGroupByPayload<T extends PermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionGroupByOutputType[P]>
        }
      >
    >


  export type PermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    roles?: boolean | Permission$rolesArgs<ExtArgs>
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["permission"]>

  export type PermissionSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    path?: boolean
    method?: boolean
    module?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PermissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "path" | "method" | "module" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["permission"]>
  export type PermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | Permission$rolesArgs<ExtArgs>
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
    _count?: boolean | PermissionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PermissionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
  }
  export type PermissionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Permission$createdByArgs<ExtArgs>
    updatedBy?: boolean | Permission$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Permission$deletedByArgs<ExtArgs>
  }

  export type $PermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Permission"
    objects: {
      roles: Prisma.$RolePayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      path: string
      method: $Enums.HTTPMethod
      module: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["permission"]>
    composites: {}
  }

  type PermissionGetPayload<S extends boolean | null | undefined | PermissionDefaultArgs> = $Result.GetResult<Prisma.$PermissionPayload, S>

  type PermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PermissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionCountAggregateInputType | true
    }

  export interface PermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Permission'], meta: { name: 'Permission' } }
    /**
     * Find zero or one Permission that matches the filter.
     * @param {PermissionFindUniqueArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PermissionFindUniqueArgs>(args: SelectSubset<T, PermissionFindUniqueArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PermissionFindUniqueOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, PermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PermissionFindFirstArgs>(args?: SelectSubset<T, PermissionFindFirstArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindFirstOrThrowArgs} args - Arguments to find a Permission
     * @example
     * // Get one Permission
     * const permission = await prisma.permission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, PermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permission.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionWithIdOnly = await prisma.permission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PermissionFindManyArgs>(args?: SelectSubset<T, PermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permission.
     * @param {PermissionCreateArgs} args - Arguments to create a Permission.
     * @example
     * // Create one Permission
     * const Permission = await prisma.permission.create({
     *   data: {
     *     // ... data to create a Permission
     *   }
     * })
     * 
     */
    create<T extends PermissionCreateArgs>(args: SelectSubset<T, PermissionCreateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {PermissionCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PermissionCreateManyArgs>(args?: SelectSubset<T, PermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Permissions and returns the data saved in the database.
     * @param {PermissionCreateManyAndReturnArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permission = await prisma.permission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PermissionCreateManyAndReturnArgs>(args?: SelectSubset<T, PermissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Permission.
     * @param {PermissionDeleteArgs} args - Arguments to delete one Permission.
     * @example
     * // Delete one Permission
     * const Permission = await prisma.permission.delete({
     *   where: {
     *     // ... filter to delete one Permission
     *   }
     * })
     * 
     */
    delete<T extends PermissionDeleteArgs>(args: SelectSubset<T, PermissionDeleteArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permission.
     * @param {PermissionUpdateArgs} args - Arguments to update one Permission.
     * @example
     * // Update one Permission
     * const permission = await prisma.permission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PermissionUpdateArgs>(args: SelectSubset<T, PermissionUpdateArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {PermissionDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PermissionDeleteManyArgs>(args?: SelectSubset<T, PermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PermissionUpdateManyArgs>(args: SelectSubset<T, PermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions and returns the data updated in the database.
     * @param {PermissionUpdateManyAndReturnArgs} args - Arguments to update many Permissions.
     * @example
     * // Update many Permissions
     * const permission = await prisma.permission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Permissions and only return the `id`
     * const permissionWithIdOnly = await prisma.permission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PermissionUpdateManyAndReturnArgs>(args: SelectSubset<T, PermissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Permission.
     * @param {PermissionUpsertArgs} args - Arguments to update or create a Permission.
     * @example
     * // Update or create a Permission
     * const permission = await prisma.permission.upsert({
     *   create: {
     *     // ... data to create a Permission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permission we want to update
     *   }
     * })
     */
    upsert<T extends PermissionUpsertArgs>(args: SelectSubset<T, PermissionUpsertArgs<ExtArgs>>): Prisma__PermissionClient<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permission.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends PermissionCountArgs>(
      args?: Subset<T, PermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionAggregateArgs>(args: Subset<T, PermissionAggregateArgs>): Prisma.PrismaPromise<GetPermissionAggregateType<T>>

    /**
     * Group by Permission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PermissionGroupByArgs['orderBy'] }
        : { orderBy?: PermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Permission model
   */
  readonly fields: PermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Permission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles<T extends Permission$rolesArgs<ExtArgs> = {}>(args?: Subset<T, Permission$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Permission$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Permission$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Permission$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Permission$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Permission$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Permission$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Permission model
   */
  interface PermissionFieldRefs {
    readonly id: FieldRef<"Permission", 'Int'>
    readonly name: FieldRef<"Permission", 'String'>
    readonly description: FieldRef<"Permission", 'String'>
    readonly path: FieldRef<"Permission", 'String'>
    readonly method: FieldRef<"Permission", 'HTTPMethod'>
    readonly module: FieldRef<"Permission", 'String'>
    readonly createdById: FieldRef<"Permission", 'Int'>
    readonly updatedById: FieldRef<"Permission", 'Int'>
    readonly deletedById: FieldRef<"Permission", 'Int'>
    readonly deletedAt: FieldRef<"Permission", 'DateTime'>
    readonly createdAt: FieldRef<"Permission", 'DateTime'>
    readonly updatedAt: FieldRef<"Permission", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Permission findUnique
   */
  export type PermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findUniqueOrThrow
   */
  export type PermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission findFirst
   */
  export type PermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findFirstOrThrow
   */
  export type PermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permission to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Permissions.
     */
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission findMany
   */
  export type PermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter, which Permissions to fetch.
     */
    where?: PermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Permissions to fetch.
     */
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Permissions.
     */
    cursor?: PermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Permissions.
     */
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Permission create
   */
  export type PermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a Permission.
     */
    data: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
  }

  /**
   * Permission createMany
   */
  export type PermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Permission createManyAndReturn
   */
  export type PermissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to create many Permissions.
     */
    data: PermissionCreateManyInput | PermissionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permission update
   */
  export type PermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a Permission.
     */
    data: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
    /**
     * Choose, which Permission to update.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission updateMany
   */
  export type PermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
  }

  /**
   * Permission updateManyAndReturn
   */
  export type PermissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * The data used to update Permissions.
     */
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyInput>
    /**
     * Filter which Permissions to update
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Permission upsert
   */
  export type PermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the Permission to update in case it exists.
     */
    where: PermissionWhereUniqueInput
    /**
     * In case the Permission found by the `where` argument doesn't exist, create a new Permission with this data.
     */
    create: XOR<PermissionCreateInput, PermissionUncheckedCreateInput>
    /**
     * In case the Permission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PermissionUpdateInput, PermissionUncheckedUpdateInput>
  }

  /**
   * Permission delete
   */
  export type PermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    /**
     * Filter which Permission to delete.
     */
    where: PermissionWhereUniqueInput
  }

  /**
   * Permission deleteMany
   */
  export type PermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Permissions to delete
     */
    where?: PermissionWhereInput
    /**
     * Limit how many Permissions to delete.
     */
    limit?: number
  }

  /**
   * Permission.roles
   */
  export type Permission$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    cursor?: RoleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Permission.createdBy
   */
  export type Permission$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission.updatedBy
   */
  export type Permission$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission.deletedBy
   */
  export type Permission$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Permission without action
   */
  export type PermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    isActive: boolean | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    isActive: boolean | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    isActive: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    isActive?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    description: string
    isActive: boolean
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    permissions?: boolean | Role$permissionsArgs<ExtArgs>
    users?: boolean | Role$usersArgs<ExtArgs>
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    isActive?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type RoleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "isActive" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["role"]>
  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    permissions?: boolean | Role$permissionsArgs<ExtArgs>
    users?: boolean | Role$usersArgs<ExtArgs>
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
  }
  export type RoleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Role$createdByArgs<ExtArgs>
    updatedBy?: boolean | Role$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Role$deletedByArgs<ExtArgs>
  }

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      permissions: Prisma.$PermissionPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      isActive: boolean
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {RoleUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends RoleUpdateManyAndReturnArgs>(args: SelectSubset<T, RoleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    permissions<T extends Role$permissionsArgs<ExtArgs> = {}>(args?: Subset<T, Role$permissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PermissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends Role$usersArgs<ExtArgs> = {}>(args?: Subset<T, Role$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Role$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Role$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Role$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Role$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Role$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Role$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
    readonly description: FieldRef<"Role", 'String'>
    readonly isActive: FieldRef<"Role", 'Boolean'>
    readonly createdById: FieldRef<"Role", 'Int'>
    readonly updatedById: FieldRef<"Role", 'Int'>
    readonly deletedById: FieldRef<"Role", 'Int'>
    readonly deletedAt: FieldRef<"Role", 'DateTime'>
    readonly createdAt: FieldRef<"Role", 'DateTime'>
    readonly updatedAt: FieldRef<"Role", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
  }

  /**
   * Role updateManyAndReturn
   */
  export type RoleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
    /**
     * Limit how many Roles to delete.
     */
    limit?: number
  }

  /**
   * Role.permissions
   */
  export type Role$permissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Permission
     */
    select?: PermissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Permission
     */
    omit?: PermissionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PermissionInclude<ExtArgs> | null
    where?: PermissionWhereInput
    orderBy?: PermissionOrderByWithRelationInput | PermissionOrderByWithRelationInput[]
    cursor?: PermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PermissionScalarFieldEnum | PermissionScalarFieldEnum[]
  }

  /**
   * Role.users
   */
  export type Role$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Role.createdBy
   */
  export type Role$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role.updatedBy
   */
  export type Role$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role.deletedBy
   */
  export type Role$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Role
     */
    omit?: RoleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    id: number | null
    base_price: number | null
    virtual_price: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type ProductSumAggregateOutputType = {
    id: number | null
    base_price: number | null
    virtual_price: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: number | null
    base_price: number | null
    virtual_price: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductMaxAggregateOutputType = {
    id: number | null
    base_price: number | null
    virtual_price: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    base_price: number
    virtual_price: number
    brandId: number
    images: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    id?: true
    base_price?: true
    virtual_price?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type ProductSumAggregateInputType = {
    id?: true
    base_price?: true
    virtual_price?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    base_price?: true
    virtual_price?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    base_price?: true
    virtual_price?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    base_price?: true
    virtual_price?: true
    brandId?: true
    images?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: number
    base_price: number
    virtual_price: number
    brandId: number
    images: string[]
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    base_price?: boolean
    virtual_price?: boolean
    brandId?: boolean
    images?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    skus?: boolean | Product$skusArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    productTranslations?: boolean | Product$productTranslationsArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    base_price?: boolean
    virtual_price?: boolean
    brandId?: boolean
    images?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    base_price?: boolean
    virtual_price?: boolean
    brandId?: boolean
    images?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    base_price?: boolean
    virtual_price?: boolean
    brandId?: boolean
    images?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "base_price" | "virtual_price" | "brandId" | "images" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    skus?: boolean | Product$skusArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    productTranslations?: boolean | Product$productTranslationsArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    createdBy?: boolean | Product$createdByArgs<ExtArgs>
    updatedBy?: boolean | Product$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Product$deletedByArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      brand: Prisma.$BrandPayload<ExtArgs>
      categories: Prisma.$CategoryPayload<ExtArgs>[]
      variants: Prisma.$VariantPayload<ExtArgs>[]
      skus: Prisma.$SKUPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      productTranslations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      base_price: number
      virtual_price: number
      brandId: number
      images: string[]
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    brand<T extends BrandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BrandDefaultArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    categories<T extends Product$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variants<T extends Product$variantsArgs<ExtArgs> = {}>(args?: Subset<T, Product$variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    skus<T extends Product$skusArgs<ExtArgs> = {}>(args?: Subset<T, Product$skusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reviews<T extends Product$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Product$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productTranslations<T extends Product$productTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Product$productTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Product$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Product$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Product$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Product$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Product$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Product$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'Int'>
    readonly base_price: FieldRef<"Product", 'Float'>
    readonly virtual_price: FieldRef<"Product", 'Float'>
    readonly brandId: FieldRef<"Product", 'Int'>
    readonly images: FieldRef<"Product", 'String[]'>
    readonly createdById: FieldRef<"Product", 'Int'>
    readonly updatedById: FieldRef<"Product", 'Int'>
    readonly deletedById: FieldRef<"Product", 'Int'>
    readonly deletedAt: FieldRef<"Product", 'DateTime'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.categories
   */
  export type Product$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Product.variants
   */
  export type Product$variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    where?: VariantWhereInput
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    cursor?: VariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * Product.skus
   */
  export type Product$skusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    cursor?: SKUWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * Product.reviews
   */
  export type Product$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Product.productTranslations
   */
  export type Product$productTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * Product.createdBy
   */
  export type Product$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product.updatedBy
   */
  export type Product$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product.deletedBy
   */
  export type Product$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductTranslation
   */

  export type AggregateProductTranslation = {
    _count: ProductTranslationCountAggregateOutputType | null
    _avg: ProductTranslationAvgAggregateOutputType | null
    _sum: ProductTranslationSumAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  export type ProductTranslationAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type ProductTranslationSumAggregateOutputType = {
    id: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type ProductTranslationMinAggregateOutputType = {
    id: number | null
    productId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductTranslationMaxAggregateOutputType = {
    id: number | null
    productId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductTranslationCountAggregateOutputType = {
    id: number
    productId: number
    languageId: number
    name: number
    description: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductTranslationAvgAggregateInputType = {
    id?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type ProductTranslationSumAggregateInputType = {
    id?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type ProductTranslationMinAggregateInputType = {
    id?: true
    productId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductTranslationMaxAggregateInputType = {
    id?: true
    productId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductTranslationCountAggregateInputType = {
    id?: true
    productId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslation to aggregate.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductTranslations
    **/
    _count?: true | ProductTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type GetProductTranslationAggregateType<T extends ProductTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductTranslation[P]>
      : GetScalarType<T[P], AggregateProductTranslation[P]>
  }




  export type ProductTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithAggregationInput | ProductTranslationOrderByWithAggregationInput[]
    by: ProductTranslationScalarFieldEnum[] | ProductTranslationScalarFieldEnum
    having?: ProductTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductTranslationCountAggregateInputType | true
    _avg?: ProductTranslationAvgAggregateInputType
    _sum?: ProductTranslationSumAggregateInputType
    _min?: ProductTranslationMinAggregateInputType
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type ProductTranslationGroupByOutputType = {
    id: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: ProductTranslationCountAggregateOutputType | null
    _avg: ProductTranslationAvgAggregateOutputType | null
    _sum: ProductTranslationSumAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  type GetProductTranslationGroupByPayload<T extends ProductTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ProductTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectScalar = {
    id?: boolean
    productId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "languageId" | "name" | "description" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["productTranslation"]>
  export type ProductTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }
  export type ProductTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }
  export type ProductTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | ProductTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | ProductTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | ProductTranslation$deletedByArgs<ExtArgs>
  }

  export type $ProductTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductTranslation"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      language: Prisma.$LanguagePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: number
      languageId: string
      name: string
      description: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productTranslation"]>
    composites: {}
  }

  type ProductTranslationGetPayload<S extends boolean | null | undefined | ProductTranslationDefaultArgs> = $Result.GetResult<Prisma.$ProductTranslationPayload, S>

  type ProductTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductTranslationCountAggregateInputType | true
    }

  export interface ProductTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductTranslation'], meta: { name: 'ProductTranslation' } }
    /**
     * Find zero or one ProductTranslation that matches the filter.
     * @param {ProductTranslationFindUniqueArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductTranslationFindUniqueArgs>(args: SelectSubset<T, ProductTranslationFindUniqueArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductTranslationFindUniqueOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductTranslationFindFirstArgs>(args?: SelectSubset<T, ProductTranslationFindFirstArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany()
     * 
     * // Get first 10 ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductTranslationFindManyArgs>(args?: SelectSubset<T, ProductTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductTranslation.
     * @param {ProductTranslationCreateArgs} args - Arguments to create a ProductTranslation.
     * @example
     * // Create one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.create({
     *   data: {
     *     // ... data to create a ProductTranslation
     *   }
     * })
     * 
     */
    create<T extends ProductTranslationCreateArgs>(args: SelectSubset<T, ProductTranslationCreateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductTranslations.
     * @param {ProductTranslationCreateManyArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductTranslationCreateManyArgs>(args?: SelectSubset<T, ProductTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductTranslations and returns the data saved in the database.
     * @param {ProductTranslationCreateManyAndReturnArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductTranslation.
     * @param {ProductTranslationDeleteArgs} args - Arguments to delete one ProductTranslation.
     * @example
     * // Delete one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.delete({
     *   where: {
     *     // ... filter to delete one ProductTranslation
     *   }
     * })
     * 
     */
    delete<T extends ProductTranslationDeleteArgs>(args: SelectSubset<T, ProductTranslationDeleteArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductTranslation.
     * @param {ProductTranslationUpdateArgs} args - Arguments to update one ProductTranslation.
     * @example
     * // Update one ProductTranslation
     * const productTranslation = await prisma.productTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductTranslationUpdateArgs>(args: SelectSubset<T, ProductTranslationUpdateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductTranslations.
     * @param {ProductTranslationDeleteManyArgs} args - Arguments to filter ProductTranslations to delete.
     * @example
     * // Delete a few ProductTranslations
     * const { count } = await prisma.productTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductTranslationDeleteManyArgs>(args?: SelectSubset<T, ProductTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductTranslationUpdateManyArgs>(args: SelectSubset<T, ProductTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations and returns the data updated in the database.
     * @param {ProductTranslationUpdateManyAndReturnArgs} args - Arguments to update many ProductTranslations.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductTranslation.
     * @param {ProductTranslationUpsertArgs} args - Arguments to update or create a ProductTranslation.
     * @example
     * // Update or create a ProductTranslation
     * const productTranslation = await prisma.productTranslation.upsert({
     *   create: {
     *     // ... data to create a ProductTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ProductTranslationUpsertArgs>(args: SelectSubset<T, ProductTranslationUpsertArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationCountArgs} args - Arguments to filter ProductTranslations to count.
     * @example
     * // Count the number of ProductTranslations
     * const count = await prisma.productTranslation.count({
     *   where: {
     *     // ... the filter for the ProductTranslations we want to count
     *   }
     * })
    **/
    count<T extends ProductTranslationCountArgs>(
      args?: Subset<T, ProductTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductTranslationAggregateArgs>(args: Subset<T, ProductTranslationAggregateArgs>): Prisma.PrismaPromise<GetProductTranslationAggregateType<T>>

    /**
     * Group by ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ProductTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductTranslation model
   */
  readonly fields: ProductTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends ProductTranslation$createdByArgs<ExtArgs> = {}>(args?: Subset<T, ProductTranslation$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends ProductTranslation$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, ProductTranslation$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends ProductTranslation$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, ProductTranslation$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductTranslation model
   */
  interface ProductTranslationFieldRefs {
    readonly id: FieldRef<"ProductTranslation", 'Int'>
    readonly productId: FieldRef<"ProductTranslation", 'Int'>
    readonly languageId: FieldRef<"ProductTranslation", 'String'>
    readonly name: FieldRef<"ProductTranslation", 'String'>
    readonly description: FieldRef<"ProductTranslation", 'String'>
    readonly createdById: FieldRef<"ProductTranslation", 'Int'>
    readonly updatedById: FieldRef<"ProductTranslation", 'Int'>
    readonly deletedById: FieldRef<"ProductTranslation", 'Int'>
    readonly deletedAt: FieldRef<"ProductTranslation", 'DateTime'>
    readonly createdAt: FieldRef<"ProductTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductTranslation findUnique
   */
  export type ProductTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findUniqueOrThrow
   */
  export type ProductTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findFirst
   */
  export type ProductTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findFirstOrThrow
   */
  export type ProductTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findMany
   */
  export type ProductTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslations to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation create
   */
  export type ProductTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductTranslation.
     */
    data: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
  }

  /**
   * ProductTranslation createMany
   */
  export type ProductTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductTranslation createManyAndReturn
   */
  export type ProductTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation update
   */
  export type ProductTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductTranslation.
     */
    data: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
    /**
     * Choose, which ProductTranslation to update.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation updateMany
   */
  export type ProductTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
  }

  /**
   * ProductTranslation updateManyAndReturn
   */
  export type ProductTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation upsert
   */
  export type ProductTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductTranslation to update in case it exists.
     */
    where: ProductTranslationWhereUniqueInput
    /**
     * In case the ProductTranslation found by the `where` argument doesn't exist, create a new ProductTranslation with this data.
     */
    create: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
    /**
     * In case the ProductTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
  }

  /**
   * ProductTranslation delete
   */
  export type ProductTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter which ProductTranslation to delete.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation deleteMany
   */
  export type ProductTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslations to delete
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to delete.
     */
    limit?: number
  }

  /**
   * ProductTranslation.createdBy
   */
  export type ProductTranslation$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ProductTranslation.updatedBy
   */
  export type ProductTranslation$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ProductTranslation.deletedBy
   */
  export type ProductTranslation$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * ProductTranslation without action
   */
  export type ProductTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategorySumAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: number | null
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    parentCategoryId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategorySumAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    parentCategoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: number
    parentCategoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    products?: boolean | Category$productsArgs<ExtArgs>
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    childrenCategories?: boolean | Category$childrenCategoriesArgs<ExtArgs>
    categoryTranslations?: boolean | Category$categoryTranslationsArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>

  export type CategorySelectScalar = {
    id?: boolean
    parentCategoryId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "parentCategoryId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["category"]>
  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Category$productsArgs<ExtArgs>
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    childrenCategories?: boolean | Category$childrenCategoriesArgs<ExtArgs>
    categoryTranslations?: boolean | Category$categoryTranslationsArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
  }
  export type CategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parentCategory?: boolean | Category$parentCategoryArgs<ExtArgs>
    createdBy?: boolean | Category$createdByArgs<ExtArgs>
    updatedBy?: boolean | Category$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Category$deletedByArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      parentCategory: Prisma.$CategoryPayload<ExtArgs> | null
      childrenCategories: Prisma.$CategoryPayload<ExtArgs>[]
      categoryTranslations: Prisma.$CategoryTranslationPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      parentCategoryId: number | null
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {CategoryCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {CategoryUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoryWithIdOnly = await prisma.category.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Category$productsArgs<ExtArgs> = {}>(args?: Subset<T, Category$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    parentCategory<T extends Category$parentCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Category$parentCategoryArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    childrenCategories<T extends Category$childrenCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Category$childrenCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categoryTranslations<T extends Category$categoryTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Category$categoryTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Category$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Category$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Category$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Category$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Category$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Category$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'Int'>
    readonly parentCategoryId: FieldRef<"Category", 'Int'>
    readonly createdById: FieldRef<"Category", 'Int'>
    readonly updatedById: FieldRef<"Category", 'Int'>
    readonly deletedById: FieldRef<"Category", 'Int'>
    readonly deletedAt: FieldRef<"Category", 'DateTime'>
    readonly createdAt: FieldRef<"Category", 'DateTime'>
    readonly updatedAt: FieldRef<"Category", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category createManyAndReturn
   */
  export type CategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
  }

  /**
   * Category updateManyAndReturn
   */
  export type CategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
    /**
     * Limit how many Categories to delete.
     */
    limit?: number
  }

  /**
   * Category.products
   */
  export type Category$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category.parentCategory
   */
  export type Category$parentCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
  }

  /**
   * Category.childrenCategories
   */
  export type Category$childrenCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    cursor?: CategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category.categoryTranslations
   */
  export type Category$categoryTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    cursor?: CategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * Category.createdBy
   */
  export type Category$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.updatedBy
   */
  export type Category$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category.deletedBy
   */
  export type Category$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the Category
     */
    omit?: CategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model CategoryTranslation
   */

  export type AggregateCategoryTranslation = {
    _count: CategoryTranslationCountAggregateOutputType | null
    _avg: CategoryTranslationAvgAggregateOutputType | null
    _sum: CategoryTranslationSumAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  export type CategoryTranslationAvgAggregateOutputType = {
    id: number | null
    categoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategoryTranslationSumAggregateOutputType = {
    id: number | null
    categoryId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type CategoryTranslationMinAggregateOutputType = {
    id: number | null
    categoryId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryTranslationMaxAggregateOutputType = {
    id: number | null
    categoryId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CategoryTranslationCountAggregateOutputType = {
    id: number
    categoryId: number
    languageId: number
    name: number
    description: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CategoryTranslationAvgAggregateInputType = {
    id?: true
    categoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategoryTranslationSumAggregateInputType = {
    id?: true
    categoryId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type CategoryTranslationMinAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryTranslationMaxAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CategoryTranslationCountAggregateInputType = {
    id?: true
    categoryId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CategoryTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslation to aggregate.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CategoryTranslations
    **/
    _count?: true | CategoryTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoryTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type GetCategoryTranslationAggregateType<T extends CategoryTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoryTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoryTranslation[P]>
      : GetScalarType<T[P], AggregateCategoryTranslation[P]>
  }




  export type CategoryTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryTranslationWhereInput
    orderBy?: CategoryTranslationOrderByWithAggregationInput | CategoryTranslationOrderByWithAggregationInput[]
    by: CategoryTranslationScalarFieldEnum[] | CategoryTranslationScalarFieldEnum
    having?: CategoryTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryTranslationCountAggregateInputType | true
    _avg?: CategoryTranslationAvgAggregateInputType
    _sum?: CategoryTranslationSumAggregateInputType
    _min?: CategoryTranslationMinAggregateInputType
    _max?: CategoryTranslationMaxAggregateInputType
  }

  export type CategoryTranslationGroupByOutputType = {
    id: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: CategoryTranslationCountAggregateOutputType | null
    _avg: CategoryTranslationAvgAggregateOutputType | null
    _sum: CategoryTranslationSumAggregateOutputType | null
    _min: CategoryTranslationMinAggregateOutputType | null
    _max: CategoryTranslationMaxAggregateOutputType | null
  }

  type GetCategoryTranslationGroupByPayload<T extends CategoryTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryTranslationGroupByOutputType[P]>
        }
      >
    >


  export type CategoryTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["categoryTranslation"]>

  export type CategoryTranslationSelectScalar = {
    id?: boolean
    categoryId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CategoryTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "categoryId" | "languageId" | "name" | "description" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["categoryTranslation"]>
  export type CategoryTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }
  export type CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | CategoryTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | CategoryTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | CategoryTranslation$deletedByArgs<ExtArgs>
  }

  export type $CategoryTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CategoryTranslation"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      language: Prisma.$LanguagePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      categoryId: number
      languageId: string
      name: string
      description: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["categoryTranslation"]>
    composites: {}
  }

  type CategoryTranslationGetPayload<S extends boolean | null | undefined | CategoryTranslationDefaultArgs> = $Result.GetResult<Prisma.$CategoryTranslationPayload, S>

  type CategoryTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CategoryTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoryTranslationCountAggregateInputType | true
    }

  export interface CategoryTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CategoryTranslation'], meta: { name: 'CategoryTranslation' } }
    /**
     * Find zero or one CategoryTranslation that matches the filter.
     * @param {CategoryTranslationFindUniqueArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryTranslationFindUniqueArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CategoryTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CategoryTranslationFindUniqueOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryTranslationFindFirstArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CategoryTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindFirstOrThrowArgs} args - Arguments to find a CategoryTranslation
     * @example
     * // Get one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CategoryTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany()
     * 
     * // Get first 10 CategoryTranslations
     * const categoryTranslations = await prisma.categoryTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryTranslationFindManyArgs>(args?: SelectSubset<T, CategoryTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CategoryTranslation.
     * @param {CategoryTranslationCreateArgs} args - Arguments to create a CategoryTranslation.
     * @example
     * // Create one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.create({
     *   data: {
     *     // ... data to create a CategoryTranslation
     *   }
     * })
     * 
     */
    create<T extends CategoryTranslationCreateArgs>(args: SelectSubset<T, CategoryTranslationCreateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CategoryTranslations.
     * @param {CategoryTranslationCreateManyArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryTranslationCreateManyArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CategoryTranslations and returns the data saved in the database.
     * @param {CategoryTranslationCreateManyAndReturnArgs} args - Arguments to create many CategoryTranslations.
     * @example
     * // Create many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CategoryTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, CategoryTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CategoryTranslation.
     * @param {CategoryTranslationDeleteArgs} args - Arguments to delete one CategoryTranslation.
     * @example
     * // Delete one CategoryTranslation
     * const CategoryTranslation = await prisma.categoryTranslation.delete({
     *   where: {
     *     // ... filter to delete one CategoryTranslation
     *   }
     * })
     * 
     */
    delete<T extends CategoryTranslationDeleteArgs>(args: SelectSubset<T, CategoryTranslationDeleteArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CategoryTranslation.
     * @param {CategoryTranslationUpdateArgs} args - Arguments to update one CategoryTranslation.
     * @example
     * // Update one CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryTranslationUpdateArgs>(args: SelectSubset<T, CategoryTranslationUpdateArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CategoryTranslations.
     * @param {CategoryTranslationDeleteManyArgs} args - Arguments to filter CategoryTranslations to delete.
     * @example
     * // Delete a few CategoryTranslations
     * const { count } = await prisma.categoryTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryTranslationDeleteManyArgs>(args?: SelectSubset<T, CategoryTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryTranslationUpdateManyArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CategoryTranslations and returns the data updated in the database.
     * @param {CategoryTranslationUpdateManyAndReturnArgs} args - Arguments to update many CategoryTranslations.
     * @example
     * // Update many CategoryTranslations
     * const categoryTranslation = await prisma.categoryTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CategoryTranslations and only return the `id`
     * const categoryTranslationWithIdOnly = await prisma.categoryTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CategoryTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, CategoryTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CategoryTranslation.
     * @param {CategoryTranslationUpsertArgs} args - Arguments to update or create a CategoryTranslation.
     * @example
     * // Update or create a CategoryTranslation
     * const categoryTranslation = await prisma.categoryTranslation.upsert({
     *   create: {
     *     // ... data to create a CategoryTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CategoryTranslation we want to update
     *   }
     * })
     */
    upsert<T extends CategoryTranslationUpsertArgs>(args: SelectSubset<T, CategoryTranslationUpsertArgs<ExtArgs>>): Prisma__CategoryTranslationClient<$Result.GetResult<Prisma.$CategoryTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationCountArgs} args - Arguments to filter CategoryTranslations to count.
     * @example
     * // Count the number of CategoryTranslations
     * const count = await prisma.categoryTranslation.count({
     *   where: {
     *     // ... the filter for the CategoryTranslations we want to count
     *   }
     * })
    **/
    count<T extends CategoryTranslationCountArgs>(
      args?: Subset<T, CategoryTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryTranslationAggregateArgs>(args: Subset<T, CategoryTranslationAggregateArgs>): Prisma.PrismaPromise<GetCategoryTranslationAggregateType<T>>

    /**
     * Group by CategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryTranslationGroupByArgs['orderBy'] }
        : { orderBy?: CategoryTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CategoryTranslation model
   */
  readonly fields: CategoryTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CategoryTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends CategoryTranslation$createdByArgs<ExtArgs> = {}>(args?: Subset<T, CategoryTranslation$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends CategoryTranslation$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, CategoryTranslation$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends CategoryTranslation$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, CategoryTranslation$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CategoryTranslation model
   */
  interface CategoryTranslationFieldRefs {
    readonly id: FieldRef<"CategoryTranslation", 'Int'>
    readonly categoryId: FieldRef<"CategoryTranslation", 'Int'>
    readonly languageId: FieldRef<"CategoryTranslation", 'String'>
    readonly name: FieldRef<"CategoryTranslation", 'String'>
    readonly description: FieldRef<"CategoryTranslation", 'String'>
    readonly createdById: FieldRef<"CategoryTranslation", 'Int'>
    readonly updatedById: FieldRef<"CategoryTranslation", 'Int'>
    readonly deletedById: FieldRef<"CategoryTranslation", 'Int'>
    readonly deletedAt: FieldRef<"CategoryTranslation", 'DateTime'>
    readonly createdAt: FieldRef<"CategoryTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"CategoryTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CategoryTranslation findUnique
   */
  export type CategoryTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findUniqueOrThrow
   */
  export type CategoryTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation findFirst
   */
  export type CategoryTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findFirstOrThrow
   */
  export type CategoryTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslation to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CategoryTranslations.
     */
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation findMany
   */
  export type CategoryTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which CategoryTranslations to fetch.
     */
    where?: CategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CategoryTranslations to fetch.
     */
    orderBy?: CategoryTranslationOrderByWithRelationInput | CategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CategoryTranslations.
     */
    cursor?: CategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CategoryTranslations.
     */
    skip?: number
    distinct?: CategoryTranslationScalarFieldEnum | CategoryTranslationScalarFieldEnum[]
  }

  /**
   * CategoryTranslation create
   */
  export type CategoryTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a CategoryTranslation.
     */
    data: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
  }

  /**
   * CategoryTranslation createMany
   */
  export type CategoryTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CategoryTranslation createManyAndReturn
   */
  export type CategoryTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many CategoryTranslations.
     */
    data: CategoryTranslationCreateManyInput | CategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation update
   */
  export type CategoryTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a CategoryTranslation.
     */
    data: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
    /**
     * Choose, which CategoryTranslation to update.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation updateMany
   */
  export type CategoryTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
  }

  /**
   * CategoryTranslation updateManyAndReturn
   */
  export type CategoryTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to update CategoryTranslations.
     */
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which CategoryTranslations to update
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CategoryTranslation upsert
   */
  export type CategoryTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the CategoryTranslation to update in case it exists.
     */
    where: CategoryTranslationWhereUniqueInput
    /**
     * In case the CategoryTranslation found by the `where` argument doesn't exist, create a new CategoryTranslation with this data.
     */
    create: XOR<CategoryTranslationCreateInput, CategoryTranslationUncheckedCreateInput>
    /**
     * In case the CategoryTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryTranslationUpdateInput, CategoryTranslationUncheckedUpdateInput>
  }

  /**
   * CategoryTranslation delete
   */
  export type CategoryTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter which CategoryTranslation to delete.
     */
    where: CategoryTranslationWhereUniqueInput
  }

  /**
   * CategoryTranslation deleteMany
   */
  export type CategoryTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CategoryTranslations to delete
     */
    where?: CategoryTranslationWhereInput
    /**
     * Limit how many CategoryTranslations to delete.
     */
    limit?: number
  }

  /**
   * CategoryTranslation.createdBy
   */
  export type CategoryTranslation$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CategoryTranslation.updatedBy
   */
  export type CategoryTranslation$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CategoryTranslation.deletedBy
   */
  export type CategoryTranslation$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * CategoryTranslation without action
   */
  export type CategoryTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryTranslation
     */
    select?: CategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CategoryTranslation
     */
    omit?: CategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Variant
   */

  export type AggregateVariant = {
    _count: VariantCountAggregateOutputType | null
    _avg: VariantAvgAggregateOutputType | null
    _sum: VariantSumAggregateOutputType | null
    _min: VariantMinAggregateOutputType | null
    _max: VariantMaxAggregateOutputType | null
  }

  export type VariantAvgAggregateOutputType = {
    id: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type VariantSumAggregateOutputType = {
    id: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type VariantMinAggregateOutputType = {
    id: number | null
    name: string | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VariantMaxAggregateOutputType = {
    id: number | null
    name: string | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VariantCountAggregateOutputType = {
    id: number
    name: number
    productId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VariantAvgAggregateInputType = {
    id?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type VariantSumAggregateInputType = {
    id?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type VariantMinAggregateInputType = {
    id?: true
    name?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VariantMaxAggregateInputType = {
    id?: true
    name?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VariantCountAggregateInputType = {
    id?: true
    name?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VariantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Variant to aggregate.
     */
    where?: VariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variants to fetch.
     */
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Variants
    **/
    _count?: true | VariantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VariantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VariantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VariantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VariantMaxAggregateInputType
  }

  export type GetVariantAggregateType<T extends VariantAggregateArgs> = {
        [P in keyof T & keyof AggregateVariant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariant[P]>
      : GetScalarType<T[P], AggregateVariant[P]>
  }




  export type VariantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantWhereInput
    orderBy?: VariantOrderByWithAggregationInput | VariantOrderByWithAggregationInput[]
    by: VariantScalarFieldEnum[] | VariantScalarFieldEnum
    having?: VariantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VariantCountAggregateInputType | true
    _avg?: VariantAvgAggregateInputType
    _sum?: VariantSumAggregateInputType
    _min?: VariantMinAggregateInputType
    _max?: VariantMaxAggregateInputType
  }

  export type VariantGroupByOutputType = {
    id: number
    name: string
    productId: number
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: VariantCountAggregateOutputType | null
    _avg: VariantAvgAggregateOutputType | null
    _sum: VariantSumAggregateOutputType | null
    _min: VariantMinAggregateOutputType | null
    _max: VariantMaxAggregateOutputType | null
  }

  type GetVariantGroupByPayload<T extends VariantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VariantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VariantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VariantGroupByOutputType[P]>
            : GetScalarType<T[P], VariantGroupByOutputType[P]>
        }
      >
    >


  export type VariantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variantOptions?: boolean | Variant$variantOptionsArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
    _count?: boolean | VariantCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant"]>

  export type VariantSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["variant"]>

  export type VariantSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["variant"]>

  export type VariantSelectScalar = {
    id?: boolean
    name?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VariantOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "productId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["variant"]>
  export type VariantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variantOptions?: boolean | Variant$variantOptionsArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
    _count?: boolean | VariantCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VariantIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
  }
  export type VariantIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | Variant$createdByArgs<ExtArgs>
    updatedBy?: boolean | Variant$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Variant$deletedByArgs<ExtArgs>
  }

  export type $VariantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Variant"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      variantOptions: Prisma.$VariantOptionPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      productId: number
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["variant"]>
    composites: {}
  }

  type VariantGetPayload<S extends boolean | null | undefined | VariantDefaultArgs> = $Result.GetResult<Prisma.$VariantPayload, S>

  type VariantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VariantFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VariantCountAggregateInputType | true
    }

  export interface VariantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Variant'], meta: { name: 'Variant' } }
    /**
     * Find zero or one Variant that matches the filter.
     * @param {VariantFindUniqueArgs} args - Arguments to find a Variant
     * @example
     * // Get one Variant
     * const variant = await prisma.variant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VariantFindUniqueArgs>(args: SelectSubset<T, VariantFindUniqueArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variant that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VariantFindUniqueOrThrowArgs} args - Arguments to find a Variant
     * @example
     * // Get one Variant
     * const variant = await prisma.variant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VariantFindUniqueOrThrowArgs>(args: SelectSubset<T, VariantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantFindFirstArgs} args - Arguments to find a Variant
     * @example
     * // Get one Variant
     * const variant = await prisma.variant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VariantFindFirstArgs>(args?: SelectSubset<T, VariantFindFirstArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantFindFirstOrThrowArgs} args - Arguments to find a Variant
     * @example
     * // Get one Variant
     * const variant = await prisma.variant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VariantFindFirstOrThrowArgs>(args?: SelectSubset<T, VariantFindFirstOrThrowArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variants
     * const variants = await prisma.variant.findMany()
     * 
     * // Get first 10 Variants
     * const variants = await prisma.variant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variantWithIdOnly = await prisma.variant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VariantFindManyArgs>(args?: SelectSubset<T, VariantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variant.
     * @param {VariantCreateArgs} args - Arguments to create a Variant.
     * @example
     * // Create one Variant
     * const Variant = await prisma.variant.create({
     *   data: {
     *     // ... data to create a Variant
     *   }
     * })
     * 
     */
    create<T extends VariantCreateArgs>(args: SelectSubset<T, VariantCreateArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variants.
     * @param {VariantCreateManyArgs} args - Arguments to create many Variants.
     * @example
     * // Create many Variants
     * const variant = await prisma.variant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VariantCreateManyArgs>(args?: SelectSubset<T, VariantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Variants and returns the data saved in the database.
     * @param {VariantCreateManyAndReturnArgs} args - Arguments to create many Variants.
     * @example
     * // Create many Variants
     * const variant = await prisma.variant.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Variants and only return the `id`
     * const variantWithIdOnly = await prisma.variant.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VariantCreateManyAndReturnArgs>(args?: SelectSubset<T, VariantCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Variant.
     * @param {VariantDeleteArgs} args - Arguments to delete one Variant.
     * @example
     * // Delete one Variant
     * const Variant = await prisma.variant.delete({
     *   where: {
     *     // ... filter to delete one Variant
     *   }
     * })
     * 
     */
    delete<T extends VariantDeleteArgs>(args: SelectSubset<T, VariantDeleteArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variant.
     * @param {VariantUpdateArgs} args - Arguments to update one Variant.
     * @example
     * // Update one Variant
     * const variant = await prisma.variant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VariantUpdateArgs>(args: SelectSubset<T, VariantUpdateArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variants.
     * @param {VariantDeleteManyArgs} args - Arguments to filter Variants to delete.
     * @example
     * // Delete a few Variants
     * const { count } = await prisma.variant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VariantDeleteManyArgs>(args?: SelectSubset<T, VariantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variants
     * const variant = await prisma.variant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VariantUpdateManyArgs>(args: SelectSubset<T, VariantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variants and returns the data updated in the database.
     * @param {VariantUpdateManyAndReturnArgs} args - Arguments to update many Variants.
     * @example
     * // Update many Variants
     * const variant = await prisma.variant.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Variants and only return the `id`
     * const variantWithIdOnly = await prisma.variant.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VariantUpdateManyAndReturnArgs>(args: SelectSubset<T, VariantUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Variant.
     * @param {VariantUpsertArgs} args - Arguments to update or create a Variant.
     * @example
     * // Update or create a Variant
     * const variant = await prisma.variant.upsert({
     *   create: {
     *     // ... data to create a Variant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variant we want to update
     *   }
     * })
     */
    upsert<T extends VariantUpsertArgs>(args: SelectSubset<T, VariantUpsertArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantCountArgs} args - Arguments to filter Variants to count.
     * @example
     * // Count the number of Variants
     * const count = await prisma.variant.count({
     *   where: {
     *     // ... the filter for the Variants we want to count
     *   }
     * })
    **/
    count<T extends VariantCountArgs>(
      args?: Subset<T, VariantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VariantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VariantAggregateArgs>(args: Subset<T, VariantAggregateArgs>): Prisma.PrismaPromise<GetVariantAggregateType<T>>

    /**
     * Group by Variant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VariantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VariantGroupByArgs['orderBy'] }
        : { orderBy?: VariantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VariantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Variant model
   */
  readonly fields: VariantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Variant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VariantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variantOptions<T extends Variant$variantOptionsArgs<ExtArgs> = {}>(args?: Subset<T, Variant$variantOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Variant$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Variant$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Variant$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Variant$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Variant$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Variant$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Variant model
   */
  interface VariantFieldRefs {
    readonly id: FieldRef<"Variant", 'Int'>
    readonly name: FieldRef<"Variant", 'String'>
    readonly productId: FieldRef<"Variant", 'Int'>
    readonly createdById: FieldRef<"Variant", 'Int'>
    readonly updatedById: FieldRef<"Variant", 'Int'>
    readonly deletedById: FieldRef<"Variant", 'Int'>
    readonly deletedAt: FieldRef<"Variant", 'DateTime'>
    readonly createdAt: FieldRef<"Variant", 'DateTime'>
    readonly updatedAt: FieldRef<"Variant", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Variant findUnique
   */
  export type VariantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter, which Variant to fetch.
     */
    where: VariantWhereUniqueInput
  }

  /**
   * Variant findUniqueOrThrow
   */
  export type VariantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter, which Variant to fetch.
     */
    where: VariantWhereUniqueInput
  }

  /**
   * Variant findFirst
   */
  export type VariantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter, which Variant to fetch.
     */
    where?: VariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variants to fetch.
     */
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Variants.
     */
    cursor?: VariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Variants.
     */
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * Variant findFirstOrThrow
   */
  export type VariantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter, which Variant to fetch.
     */
    where?: VariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variants to fetch.
     */
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Variants.
     */
    cursor?: VariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Variants.
     */
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * Variant findMany
   */
  export type VariantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter, which Variants to fetch.
     */
    where?: VariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Variants to fetch.
     */
    orderBy?: VariantOrderByWithRelationInput | VariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Variants.
     */
    cursor?: VariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Variants.
     */
    skip?: number
    distinct?: VariantScalarFieldEnum | VariantScalarFieldEnum[]
  }

  /**
   * Variant create
   */
  export type VariantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * The data needed to create a Variant.
     */
    data: XOR<VariantCreateInput, VariantUncheckedCreateInput>
  }

  /**
   * Variant createMany
   */
  export type VariantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Variants.
     */
    data: VariantCreateManyInput | VariantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Variant createManyAndReturn
   */
  export type VariantCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * The data used to create many Variants.
     */
    data: VariantCreateManyInput | VariantCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Variant update
   */
  export type VariantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * The data needed to update a Variant.
     */
    data: XOR<VariantUpdateInput, VariantUncheckedUpdateInput>
    /**
     * Choose, which Variant to update.
     */
    where: VariantWhereUniqueInput
  }

  /**
   * Variant updateMany
   */
  export type VariantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Variants.
     */
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyInput>
    /**
     * Filter which Variants to update
     */
    where?: VariantWhereInput
    /**
     * Limit how many Variants to update.
     */
    limit?: number
  }

  /**
   * Variant updateManyAndReturn
   */
  export type VariantUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * The data used to update Variants.
     */
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyInput>
    /**
     * Filter which Variants to update
     */
    where?: VariantWhereInput
    /**
     * Limit how many Variants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Variant upsert
   */
  export type VariantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * The filter to search for the Variant to update in case it exists.
     */
    where: VariantWhereUniqueInput
    /**
     * In case the Variant found by the `where` argument doesn't exist, create a new Variant with this data.
     */
    create: XOR<VariantCreateInput, VariantUncheckedCreateInput>
    /**
     * In case the Variant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VariantUpdateInput, VariantUncheckedUpdateInput>
  }

  /**
   * Variant delete
   */
  export type VariantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
    /**
     * Filter which Variant to delete.
     */
    where: VariantWhereUniqueInput
  }

  /**
   * Variant deleteMany
   */
  export type VariantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Variants to delete
     */
    where?: VariantWhereInput
    /**
     * Limit how many Variants to delete.
     */
    limit?: number
  }

  /**
   * Variant.variantOptions
   */
  export type Variant$variantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    cursor?: VariantOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * Variant.createdBy
   */
  export type Variant$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Variant.updatedBy
   */
  export type Variant$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Variant.deletedBy
   */
  export type Variant$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Variant without action
   */
  export type VariantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant
     */
    select?: VariantSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Variant
     */
    omit?: VariantOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantInclude<ExtArgs> | null
  }


  /**
   * Model VariantOption
   */

  export type AggregateVariantOption = {
    _count: VariantOptionCountAggregateOutputType | null
    _avg: VariantOptionAvgAggregateOutputType | null
    _sum: VariantOptionSumAggregateOutputType | null
    _min: VariantOptionMinAggregateOutputType | null
    _max: VariantOptionMaxAggregateOutputType | null
  }

  export type VariantOptionAvgAggregateOutputType = {
    id: number | null
    variantId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type VariantOptionSumAggregateOutputType = {
    id: number | null
    variantId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type VariantOptionMinAggregateOutputType = {
    id: number | null
    value: string | null
    variantId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VariantOptionMaxAggregateOutputType = {
    id: number | null
    value: string | null
    variantId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VariantOptionCountAggregateOutputType = {
    id: number
    value: number
    variantId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VariantOptionAvgAggregateInputType = {
    id?: true
    variantId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type VariantOptionSumAggregateInputType = {
    id?: true
    variantId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type VariantOptionMinAggregateInputType = {
    id?: true
    value?: true
    variantId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VariantOptionMaxAggregateInputType = {
    id?: true
    value?: true
    variantId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VariantOptionCountAggregateInputType = {
    id?: true
    value?: true
    variantId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VariantOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VariantOption to aggregate.
     */
    where?: VariantOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VariantOptions to fetch.
     */
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VariantOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VariantOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VariantOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VariantOptions
    **/
    _count?: true | VariantOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VariantOptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VariantOptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VariantOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VariantOptionMaxAggregateInputType
  }

  export type GetVariantOptionAggregateType<T extends VariantOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateVariantOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariantOption[P]>
      : GetScalarType<T[P], AggregateVariantOption[P]>
  }




  export type VariantOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithAggregationInput | VariantOptionOrderByWithAggregationInput[]
    by: VariantOptionScalarFieldEnum[] | VariantOptionScalarFieldEnum
    having?: VariantOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VariantOptionCountAggregateInputType | true
    _avg?: VariantOptionAvgAggregateInputType
    _sum?: VariantOptionSumAggregateInputType
    _min?: VariantOptionMinAggregateInputType
    _max?: VariantOptionMaxAggregateInputType
  }

  export type VariantOptionGroupByOutputType = {
    id: number
    value: string
    variantId: number
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: VariantOptionCountAggregateOutputType | null
    _avg: VariantOptionAvgAggregateOutputType | null
    _sum: VariantOptionSumAggregateOutputType | null
    _min: VariantOptionMinAggregateOutputType | null
    _max: VariantOptionMaxAggregateOutputType | null
  }

  type GetVariantOptionGroupByPayload<T extends VariantOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VariantOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VariantOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VariantOptionGroupByOutputType[P]>
            : GetScalarType<T[P], VariantOptionGroupByOutputType[P]>
        }
      >
    >


  export type VariantOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    variantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    skus?: boolean | VariantOption$skusArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
    _count?: boolean | VariantOptionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variantOption"]>

  export type VariantOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    variantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["variantOption"]>

  export type VariantOptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    variantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["variantOption"]>

  export type VariantOptionSelectScalar = {
    id?: boolean
    value?: boolean
    variantId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VariantOptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "value" | "variantId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["variantOption"]>
  export type VariantOptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    skus?: boolean | VariantOption$skusArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
    _count?: boolean | VariantOptionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type VariantOptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
  }
  export type VariantOptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variant?: boolean | VariantDefaultArgs<ExtArgs>
    createdBy?: boolean | VariantOption$createdByArgs<ExtArgs>
    updatedBy?: boolean | VariantOption$updatedByArgs<ExtArgs>
    deletedBy?: boolean | VariantOption$deletedByArgs<ExtArgs>
  }

  export type $VariantOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VariantOption"
    objects: {
      variant: Prisma.$VariantPayload<ExtArgs>
      skus: Prisma.$SKUPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      value: string
      variantId: number
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["variantOption"]>
    composites: {}
  }

  type VariantOptionGetPayload<S extends boolean | null | undefined | VariantOptionDefaultArgs> = $Result.GetResult<Prisma.$VariantOptionPayload, S>

  type VariantOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VariantOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VariantOptionCountAggregateInputType | true
    }

  export interface VariantOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VariantOption'], meta: { name: 'VariantOption' } }
    /**
     * Find zero or one VariantOption that matches the filter.
     * @param {VariantOptionFindUniqueArgs} args - Arguments to find a VariantOption
     * @example
     * // Get one VariantOption
     * const variantOption = await prisma.variantOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VariantOptionFindUniqueArgs>(args: SelectSubset<T, VariantOptionFindUniqueArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VariantOption that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VariantOptionFindUniqueOrThrowArgs} args - Arguments to find a VariantOption
     * @example
     * // Get one VariantOption
     * const variantOption = await prisma.variantOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VariantOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, VariantOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VariantOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionFindFirstArgs} args - Arguments to find a VariantOption
     * @example
     * // Get one VariantOption
     * const variantOption = await prisma.variantOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VariantOptionFindFirstArgs>(args?: SelectSubset<T, VariantOptionFindFirstArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VariantOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionFindFirstOrThrowArgs} args - Arguments to find a VariantOption
     * @example
     * // Get one VariantOption
     * const variantOption = await prisma.variantOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VariantOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, VariantOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VariantOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VariantOptions
     * const variantOptions = await prisma.variantOption.findMany()
     * 
     * // Get first 10 VariantOptions
     * const variantOptions = await prisma.variantOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variantOptionWithIdOnly = await prisma.variantOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VariantOptionFindManyArgs>(args?: SelectSubset<T, VariantOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VariantOption.
     * @param {VariantOptionCreateArgs} args - Arguments to create a VariantOption.
     * @example
     * // Create one VariantOption
     * const VariantOption = await prisma.variantOption.create({
     *   data: {
     *     // ... data to create a VariantOption
     *   }
     * })
     * 
     */
    create<T extends VariantOptionCreateArgs>(args: SelectSubset<T, VariantOptionCreateArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VariantOptions.
     * @param {VariantOptionCreateManyArgs} args - Arguments to create many VariantOptions.
     * @example
     * // Create many VariantOptions
     * const variantOption = await prisma.variantOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VariantOptionCreateManyArgs>(args?: SelectSubset<T, VariantOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VariantOptions and returns the data saved in the database.
     * @param {VariantOptionCreateManyAndReturnArgs} args - Arguments to create many VariantOptions.
     * @example
     * // Create many VariantOptions
     * const variantOption = await prisma.variantOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VariantOptions and only return the `id`
     * const variantOptionWithIdOnly = await prisma.variantOption.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VariantOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, VariantOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VariantOption.
     * @param {VariantOptionDeleteArgs} args - Arguments to delete one VariantOption.
     * @example
     * // Delete one VariantOption
     * const VariantOption = await prisma.variantOption.delete({
     *   where: {
     *     // ... filter to delete one VariantOption
     *   }
     * })
     * 
     */
    delete<T extends VariantOptionDeleteArgs>(args: SelectSubset<T, VariantOptionDeleteArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VariantOption.
     * @param {VariantOptionUpdateArgs} args - Arguments to update one VariantOption.
     * @example
     * // Update one VariantOption
     * const variantOption = await prisma.variantOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VariantOptionUpdateArgs>(args: SelectSubset<T, VariantOptionUpdateArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VariantOptions.
     * @param {VariantOptionDeleteManyArgs} args - Arguments to filter VariantOptions to delete.
     * @example
     * // Delete a few VariantOptions
     * const { count } = await prisma.variantOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VariantOptionDeleteManyArgs>(args?: SelectSubset<T, VariantOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VariantOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VariantOptions
     * const variantOption = await prisma.variantOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VariantOptionUpdateManyArgs>(args: SelectSubset<T, VariantOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VariantOptions and returns the data updated in the database.
     * @param {VariantOptionUpdateManyAndReturnArgs} args - Arguments to update many VariantOptions.
     * @example
     * // Update many VariantOptions
     * const variantOption = await prisma.variantOption.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VariantOptions and only return the `id`
     * const variantOptionWithIdOnly = await prisma.variantOption.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VariantOptionUpdateManyAndReturnArgs>(args: SelectSubset<T, VariantOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VariantOption.
     * @param {VariantOptionUpsertArgs} args - Arguments to update or create a VariantOption.
     * @example
     * // Update or create a VariantOption
     * const variantOption = await prisma.variantOption.upsert({
     *   create: {
     *     // ... data to create a VariantOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VariantOption we want to update
     *   }
     * })
     */
    upsert<T extends VariantOptionUpsertArgs>(args: SelectSubset<T, VariantOptionUpsertArgs<ExtArgs>>): Prisma__VariantOptionClient<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VariantOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionCountArgs} args - Arguments to filter VariantOptions to count.
     * @example
     * // Count the number of VariantOptions
     * const count = await prisma.variantOption.count({
     *   where: {
     *     // ... the filter for the VariantOptions we want to count
     *   }
     * })
    **/
    count<T extends VariantOptionCountArgs>(
      args?: Subset<T, VariantOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VariantOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VariantOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VariantOptionAggregateArgs>(args: Subset<T, VariantOptionAggregateArgs>): Prisma.PrismaPromise<GetVariantOptionAggregateType<T>>

    /**
     * Group by VariantOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VariantOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VariantOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VariantOptionGroupByArgs['orderBy'] }
        : { orderBy?: VariantOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VariantOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariantOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VariantOption model
   */
  readonly fields: VariantOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VariantOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VariantOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    variant<T extends VariantDefaultArgs<ExtArgs> = {}>(args?: Subset<T, VariantDefaultArgs<ExtArgs>>): Prisma__VariantClient<$Result.GetResult<Prisma.$VariantPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    skus<T extends VariantOption$skusArgs<ExtArgs> = {}>(args?: Subset<T, VariantOption$skusArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends VariantOption$createdByArgs<ExtArgs> = {}>(args?: Subset<T, VariantOption$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends VariantOption$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, VariantOption$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends VariantOption$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, VariantOption$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VariantOption model
   */
  interface VariantOptionFieldRefs {
    readonly id: FieldRef<"VariantOption", 'Int'>
    readonly value: FieldRef<"VariantOption", 'String'>
    readonly variantId: FieldRef<"VariantOption", 'Int'>
    readonly createdById: FieldRef<"VariantOption", 'Int'>
    readonly updatedById: FieldRef<"VariantOption", 'Int'>
    readonly deletedById: FieldRef<"VariantOption", 'Int'>
    readonly deletedAt: FieldRef<"VariantOption", 'DateTime'>
    readonly createdAt: FieldRef<"VariantOption", 'DateTime'>
    readonly updatedAt: FieldRef<"VariantOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VariantOption findUnique
   */
  export type VariantOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter, which VariantOption to fetch.
     */
    where: VariantOptionWhereUniqueInput
  }

  /**
   * VariantOption findUniqueOrThrow
   */
  export type VariantOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter, which VariantOption to fetch.
     */
    where: VariantOptionWhereUniqueInput
  }

  /**
   * VariantOption findFirst
   */
  export type VariantOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter, which VariantOption to fetch.
     */
    where?: VariantOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VariantOptions to fetch.
     */
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VariantOptions.
     */
    cursor?: VariantOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VariantOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VariantOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VariantOptions.
     */
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * VariantOption findFirstOrThrow
   */
  export type VariantOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter, which VariantOption to fetch.
     */
    where?: VariantOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VariantOptions to fetch.
     */
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VariantOptions.
     */
    cursor?: VariantOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VariantOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VariantOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VariantOptions.
     */
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * VariantOption findMany
   */
  export type VariantOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter, which VariantOptions to fetch.
     */
    where?: VariantOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VariantOptions to fetch.
     */
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VariantOptions.
     */
    cursor?: VariantOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VariantOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VariantOptions.
     */
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * VariantOption create
   */
  export type VariantOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * The data needed to create a VariantOption.
     */
    data: XOR<VariantOptionCreateInput, VariantOptionUncheckedCreateInput>
  }

  /**
   * VariantOption createMany
   */
  export type VariantOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VariantOptions.
     */
    data: VariantOptionCreateManyInput | VariantOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VariantOption createManyAndReturn
   */
  export type VariantOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * The data used to create many VariantOptions.
     */
    data: VariantOptionCreateManyInput | VariantOptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VariantOption update
   */
  export type VariantOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * The data needed to update a VariantOption.
     */
    data: XOR<VariantOptionUpdateInput, VariantOptionUncheckedUpdateInput>
    /**
     * Choose, which VariantOption to update.
     */
    where: VariantOptionWhereUniqueInput
  }

  /**
   * VariantOption updateMany
   */
  export type VariantOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VariantOptions.
     */
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyInput>
    /**
     * Filter which VariantOptions to update
     */
    where?: VariantOptionWhereInput
    /**
     * Limit how many VariantOptions to update.
     */
    limit?: number
  }

  /**
   * VariantOption updateManyAndReturn
   */
  export type VariantOptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * The data used to update VariantOptions.
     */
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyInput>
    /**
     * Filter which VariantOptions to update
     */
    where?: VariantOptionWhereInput
    /**
     * Limit how many VariantOptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VariantOption upsert
   */
  export type VariantOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * The filter to search for the VariantOption to update in case it exists.
     */
    where: VariantOptionWhereUniqueInput
    /**
     * In case the VariantOption found by the `where` argument doesn't exist, create a new VariantOption with this data.
     */
    create: XOR<VariantOptionCreateInput, VariantOptionUncheckedCreateInput>
    /**
     * In case the VariantOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VariantOptionUpdateInput, VariantOptionUncheckedUpdateInput>
  }

  /**
   * VariantOption delete
   */
  export type VariantOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    /**
     * Filter which VariantOption to delete.
     */
    where: VariantOptionWhereUniqueInput
  }

  /**
   * VariantOption deleteMany
   */
  export type VariantOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VariantOptions to delete
     */
    where?: VariantOptionWhereInput
    /**
     * Limit how many VariantOptions to delete.
     */
    limit?: number
  }

  /**
   * VariantOption.skus
   */
  export type VariantOption$skusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    cursor?: SKUWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * VariantOption.createdBy
   */
  export type VariantOption$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * VariantOption.updatedBy
   */
  export type VariantOption$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * VariantOption.deletedBy
   */
  export type VariantOption$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * VariantOption without action
   */
  export type VariantOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
  }


  /**
   * Model SKU
   */

  export type AggregateSKU = {
    _count: SKUCountAggregateOutputType | null
    _avg: SKUAvgAggregateOutputType | null
    _sum: SKUSumAggregateOutputType | null
    _min: SKUMinAggregateOutputType | null
    _max: SKUMaxAggregateOutputType | null
  }

  export type SKUAvgAggregateOutputType = {
    id: number | null
    price: number | null
    stock: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type SKUSumAggregateOutputType = {
    id: number | null
    price: number | null
    stock: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type SKUMinAggregateOutputType = {
    id: number | null
    value: string | null
    price: number | null
    stock: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SKUMaxAggregateOutputType = {
    id: number | null
    value: string | null
    price: number | null
    stock: number | null
    productId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SKUCountAggregateOutputType = {
    id: number
    value: number
    price: number
    stock: number
    images: number
    productId: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SKUAvgAggregateInputType = {
    id?: true
    price?: true
    stock?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type SKUSumAggregateInputType = {
    id?: true
    price?: true
    stock?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type SKUMinAggregateInputType = {
    id?: true
    value?: true
    price?: true
    stock?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SKUMaxAggregateInputType = {
    id?: true
    value?: true
    price?: true
    stock?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SKUCountAggregateInputType = {
    id?: true
    value?: true
    price?: true
    stock?: true
    images?: true
    productId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SKUAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SKU to aggregate.
     */
    where?: SKUWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SKUS to fetch.
     */
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SKUWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SKUS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SKUS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SKUS
    **/
    _count?: true | SKUCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SKUAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SKUSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SKUMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SKUMaxAggregateInputType
  }

  export type GetSKUAggregateType<T extends SKUAggregateArgs> = {
        [P in keyof T & keyof AggregateSKU]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSKU[P]>
      : GetScalarType<T[P], AggregateSKU[P]>
  }




  export type SKUGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SKUWhereInput
    orderBy?: SKUOrderByWithAggregationInput | SKUOrderByWithAggregationInput[]
    by: SKUScalarFieldEnum[] | SKUScalarFieldEnum
    having?: SKUScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SKUCountAggregateInputType | true
    _avg?: SKUAvgAggregateInputType
    _sum?: SKUSumAggregateInputType
    _min?: SKUMinAggregateInputType
    _max?: SKUMaxAggregateInputType
  }

  export type SKUGroupByOutputType = {
    id: number
    value: string
    price: number
    stock: number
    images: string[]
    productId: number
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: SKUCountAggregateOutputType | null
    _avg: SKUAvgAggregateOutputType | null
    _sum: SKUSumAggregateOutputType | null
    _min: SKUMinAggregateOutputType | null
    _max: SKUMaxAggregateOutputType | null
  }

  type GetSKUGroupByPayload<T extends SKUGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SKUGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SKUGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SKUGroupByOutputType[P]>
            : GetScalarType<T[P], SKUGroupByOutputType[P]>
        }
      >
    >


  export type SKUSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    price?: boolean
    stock?: boolean
    images?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variantOptions?: boolean | SKU$variantOptionsArgs<ExtArgs>
    cartItems?: boolean | SKU$cartItemsArgs<ExtArgs>
    productSKUSnapshots?: boolean | SKU$productSKUSnapshotsArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
    _count?: boolean | SKUCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sKU"]>

  export type SKUSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    price?: boolean
    stock?: boolean
    images?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["sKU"]>

  export type SKUSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    price?: boolean
    stock?: boolean
    images?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["sKU"]>

  export type SKUSelectScalar = {
    id?: boolean
    value?: boolean
    price?: boolean
    stock?: boolean
    images?: boolean
    productId?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SKUOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "value" | "price" | "stock" | "images" | "productId" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["sKU"]>
  export type SKUInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    variantOptions?: boolean | SKU$variantOptionsArgs<ExtArgs>
    cartItems?: boolean | SKU$cartItemsArgs<ExtArgs>
    productSKUSnapshots?: boolean | SKU$productSKUSnapshotsArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
    _count?: boolean | SKUCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SKUIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
  }
  export type SKUIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    createdBy?: boolean | SKU$createdByArgs<ExtArgs>
    updatedBy?: boolean | SKU$updatedByArgs<ExtArgs>
    deletedBy?: boolean | SKU$deletedByArgs<ExtArgs>
  }

  export type $SKUPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SKU"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      variantOptions: Prisma.$VariantOptionPayload<ExtArgs>[]
      cartItems: Prisma.$CartItemPayload<ExtArgs>[]
      productSKUSnapshots: Prisma.$ProductSKUSnapshotPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      value: string
      price: number
      stock: number
      images: string[]
      productId: number
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["sKU"]>
    composites: {}
  }

  type SKUGetPayload<S extends boolean | null | undefined | SKUDefaultArgs> = $Result.GetResult<Prisma.$SKUPayload, S>

  type SKUCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SKUFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SKUCountAggregateInputType | true
    }

  export interface SKUDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SKU'], meta: { name: 'SKU' } }
    /**
     * Find zero or one SKU that matches the filter.
     * @param {SKUFindUniqueArgs} args - Arguments to find a SKU
     * @example
     * // Get one SKU
     * const sKU = await prisma.sKU.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SKUFindUniqueArgs>(args: SelectSubset<T, SKUFindUniqueArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SKU that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SKUFindUniqueOrThrowArgs} args - Arguments to find a SKU
     * @example
     * // Get one SKU
     * const sKU = await prisma.sKU.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SKUFindUniqueOrThrowArgs>(args: SelectSubset<T, SKUFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SKU that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUFindFirstArgs} args - Arguments to find a SKU
     * @example
     * // Get one SKU
     * const sKU = await prisma.sKU.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SKUFindFirstArgs>(args?: SelectSubset<T, SKUFindFirstArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SKU that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUFindFirstOrThrowArgs} args - Arguments to find a SKU
     * @example
     * // Get one SKU
     * const sKU = await prisma.sKU.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SKUFindFirstOrThrowArgs>(args?: SelectSubset<T, SKUFindFirstOrThrowArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SKUS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SKUS
     * const sKUS = await prisma.sKU.findMany()
     * 
     * // Get first 10 SKUS
     * const sKUS = await prisma.sKU.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sKUWithIdOnly = await prisma.sKU.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SKUFindManyArgs>(args?: SelectSubset<T, SKUFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SKU.
     * @param {SKUCreateArgs} args - Arguments to create a SKU.
     * @example
     * // Create one SKU
     * const SKU = await prisma.sKU.create({
     *   data: {
     *     // ... data to create a SKU
     *   }
     * })
     * 
     */
    create<T extends SKUCreateArgs>(args: SelectSubset<T, SKUCreateArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SKUS.
     * @param {SKUCreateManyArgs} args - Arguments to create many SKUS.
     * @example
     * // Create many SKUS
     * const sKU = await prisma.sKU.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SKUCreateManyArgs>(args?: SelectSubset<T, SKUCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SKUS and returns the data saved in the database.
     * @param {SKUCreateManyAndReturnArgs} args - Arguments to create many SKUS.
     * @example
     * // Create many SKUS
     * const sKU = await prisma.sKU.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SKUS and only return the `id`
     * const sKUWithIdOnly = await prisma.sKU.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SKUCreateManyAndReturnArgs>(args?: SelectSubset<T, SKUCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a SKU.
     * @param {SKUDeleteArgs} args - Arguments to delete one SKU.
     * @example
     * // Delete one SKU
     * const SKU = await prisma.sKU.delete({
     *   where: {
     *     // ... filter to delete one SKU
     *   }
     * })
     * 
     */
    delete<T extends SKUDeleteArgs>(args: SelectSubset<T, SKUDeleteArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SKU.
     * @param {SKUUpdateArgs} args - Arguments to update one SKU.
     * @example
     * // Update one SKU
     * const sKU = await prisma.sKU.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SKUUpdateArgs>(args: SelectSubset<T, SKUUpdateArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SKUS.
     * @param {SKUDeleteManyArgs} args - Arguments to filter SKUS to delete.
     * @example
     * // Delete a few SKUS
     * const { count } = await prisma.sKU.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SKUDeleteManyArgs>(args?: SelectSubset<T, SKUDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SKUS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SKUS
     * const sKU = await prisma.sKU.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SKUUpdateManyArgs>(args: SelectSubset<T, SKUUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SKUS and returns the data updated in the database.
     * @param {SKUUpdateManyAndReturnArgs} args - Arguments to update many SKUS.
     * @example
     * // Update many SKUS
     * const sKU = await prisma.sKU.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more SKUS and only return the `id`
     * const sKUWithIdOnly = await prisma.sKU.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SKUUpdateManyAndReturnArgs>(args: SelectSubset<T, SKUUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one SKU.
     * @param {SKUUpsertArgs} args - Arguments to update or create a SKU.
     * @example
     * // Update or create a SKU
     * const sKU = await prisma.sKU.upsert({
     *   create: {
     *     // ... data to create a SKU
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SKU we want to update
     *   }
     * })
     */
    upsert<T extends SKUUpsertArgs>(args: SelectSubset<T, SKUUpsertArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SKUS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUCountArgs} args - Arguments to filter SKUS to count.
     * @example
     * // Count the number of SKUS
     * const count = await prisma.sKU.count({
     *   where: {
     *     // ... the filter for the SKUS we want to count
     *   }
     * })
    **/
    count<T extends SKUCountArgs>(
      args?: Subset<T, SKUCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SKUCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SKU.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SKUAggregateArgs>(args: Subset<T, SKUAggregateArgs>): Prisma.PrismaPromise<GetSKUAggregateType<T>>

    /**
     * Group by SKU.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SKUGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SKUGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SKUGroupByArgs['orderBy'] }
        : { orderBy?: SKUGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SKUGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSKUGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SKU model
   */
  readonly fields: SKUFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SKU.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SKUClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variantOptions<T extends SKU$variantOptionsArgs<ExtArgs> = {}>(args?: Subset<T, SKU$variantOptionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VariantOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cartItems<T extends SKU$cartItemsArgs<ExtArgs> = {}>(args?: Subset<T, SKU$cartItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productSKUSnapshots<T extends SKU$productSKUSnapshotsArgs<ExtArgs> = {}>(args?: Subset<T, SKU$productSKUSnapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends SKU$createdByArgs<ExtArgs> = {}>(args?: Subset<T, SKU$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends SKU$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, SKU$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends SKU$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, SKU$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SKU model
   */
  interface SKUFieldRefs {
    readonly id: FieldRef<"SKU", 'Int'>
    readonly value: FieldRef<"SKU", 'String'>
    readonly price: FieldRef<"SKU", 'Float'>
    readonly stock: FieldRef<"SKU", 'Int'>
    readonly images: FieldRef<"SKU", 'String[]'>
    readonly productId: FieldRef<"SKU", 'Int'>
    readonly createdById: FieldRef<"SKU", 'Int'>
    readonly updatedById: FieldRef<"SKU", 'Int'>
    readonly deletedById: FieldRef<"SKU", 'Int'>
    readonly deletedAt: FieldRef<"SKU", 'DateTime'>
    readonly createdAt: FieldRef<"SKU", 'DateTime'>
    readonly updatedAt: FieldRef<"SKU", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * SKU findUnique
   */
  export type SKUFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter, which SKU to fetch.
     */
    where: SKUWhereUniqueInput
  }

  /**
   * SKU findUniqueOrThrow
   */
  export type SKUFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter, which SKU to fetch.
     */
    where: SKUWhereUniqueInput
  }

  /**
   * SKU findFirst
   */
  export type SKUFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter, which SKU to fetch.
     */
    where?: SKUWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SKUS to fetch.
     */
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SKUS.
     */
    cursor?: SKUWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SKUS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SKUS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SKUS.
     */
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * SKU findFirstOrThrow
   */
  export type SKUFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter, which SKU to fetch.
     */
    where?: SKUWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SKUS to fetch.
     */
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SKUS.
     */
    cursor?: SKUWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SKUS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SKUS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SKUS.
     */
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * SKU findMany
   */
  export type SKUFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter, which SKUS to fetch.
     */
    where?: SKUWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SKUS to fetch.
     */
    orderBy?: SKUOrderByWithRelationInput | SKUOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SKUS.
     */
    cursor?: SKUWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SKUS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SKUS.
     */
    skip?: number
    distinct?: SKUScalarFieldEnum | SKUScalarFieldEnum[]
  }

  /**
   * SKU create
   */
  export type SKUCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * The data needed to create a SKU.
     */
    data: XOR<SKUCreateInput, SKUUncheckedCreateInput>
  }

  /**
   * SKU createMany
   */
  export type SKUCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SKUS.
     */
    data: SKUCreateManyInput | SKUCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SKU createManyAndReturn
   */
  export type SKUCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * The data used to create many SKUS.
     */
    data: SKUCreateManyInput | SKUCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SKU update
   */
  export type SKUUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * The data needed to update a SKU.
     */
    data: XOR<SKUUpdateInput, SKUUncheckedUpdateInput>
    /**
     * Choose, which SKU to update.
     */
    where: SKUWhereUniqueInput
  }

  /**
   * SKU updateMany
   */
  export type SKUUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SKUS.
     */
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyInput>
    /**
     * Filter which SKUS to update
     */
    where?: SKUWhereInput
    /**
     * Limit how many SKUS to update.
     */
    limit?: number
  }

  /**
   * SKU updateManyAndReturn
   */
  export type SKUUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * The data used to update SKUS.
     */
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyInput>
    /**
     * Filter which SKUS to update
     */
    where?: SKUWhereInput
    /**
     * Limit how many SKUS to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * SKU upsert
   */
  export type SKUUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * The filter to search for the SKU to update in case it exists.
     */
    where: SKUWhereUniqueInput
    /**
     * In case the SKU found by the `where` argument doesn't exist, create a new SKU with this data.
     */
    create: XOR<SKUCreateInput, SKUUncheckedCreateInput>
    /**
     * In case the SKU was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SKUUpdateInput, SKUUncheckedUpdateInput>
  }

  /**
   * SKU delete
   */
  export type SKUDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    /**
     * Filter which SKU to delete.
     */
    where: SKUWhereUniqueInput
  }

  /**
   * SKU deleteMany
   */
  export type SKUDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SKUS to delete
     */
    where?: SKUWhereInput
    /**
     * Limit how many SKUS to delete.
     */
    limit?: number
  }

  /**
   * SKU.variantOptions
   */
  export type SKU$variantOptionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VariantOption
     */
    select?: VariantOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VariantOption
     */
    omit?: VariantOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VariantOptionInclude<ExtArgs> | null
    where?: VariantOptionWhereInput
    orderBy?: VariantOptionOrderByWithRelationInput | VariantOptionOrderByWithRelationInput[]
    cursor?: VariantOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VariantOptionScalarFieldEnum | VariantOptionScalarFieldEnum[]
  }

  /**
   * SKU.cartItems
   */
  export type SKU$cartItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    where?: CartItemWhereInput
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    cursor?: CartItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartItemScalarFieldEnum | CartItemScalarFieldEnum[]
  }

  /**
   * SKU.productSKUSnapshots
   */
  export type SKU$productSKUSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    where?: ProductSKUSnapshotWhereInput
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    cursor?: ProductSKUSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductSKUSnapshotScalarFieldEnum | ProductSKUSnapshotScalarFieldEnum[]
  }

  /**
   * SKU.createdBy
   */
  export type SKU$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * SKU.updatedBy
   */
  export type SKU$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * SKU.deletedBy
   */
  export type SKU$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * SKU without action
   */
  export type SKUDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
  }


  /**
   * Model Brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandAvgAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type BrandSumAggregateOutputType = {
    id: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type BrandMinAggregateOutputType = {
    id: number | null
    logo: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandMaxAggregateOutputType = {
    id: number | null
    logo: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    logo: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BrandAvgAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type BrandSumAggregateInputType = {
    id?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type BrandMinAggregateInputType = {
    id?: true
    logo?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    logo?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    logo?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brand to aggregate.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BrandAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BrandSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type BrandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithAggregationInput | BrandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: BrandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _avg?: BrandAvgAggregateInputType
    _sum?: BrandSumAggregateInputType
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: number
    logo: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: BrandCountAggregateOutputType | null
    _avg: BrandAvgAggregateOutputType | null
    _sum: BrandSumAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends BrandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type BrandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    logo?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    products?: boolean | Brand$productsArgs<ExtArgs>
    brandTranslations?: boolean | Brand$brandTranslationsArgs<ExtArgs>
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    logo?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    logo?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>

  export type BrandSelectScalar = {
    id?: boolean
    logo?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BrandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "logo" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["brand"]>
  export type BrandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Brand$productsArgs<ExtArgs>
    brandTranslations?: boolean | Brand$brandTranslationsArgs<ExtArgs>
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BrandIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
  }
  export type BrandIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdBy?: boolean | Brand$createdByArgs<ExtArgs>
    updatedBy?: boolean | Brand$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Brand$deletedByArgs<ExtArgs>
  }

  export type $BrandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Brand"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      brandTranslations: Prisma.$BrandTranslationPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      logo: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type BrandGetPayload<S extends boolean | null | undefined | BrandDefaultArgs> = $Result.GetResult<Prisma.$BrandPayload, S>

  type BrandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BrandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface BrandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Brand'], meta: { name: 'Brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {BrandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandFindUniqueArgs>(args: SelectSubset<T, BrandFindUniqueArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BrandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandFindFirstArgs>(args?: SelectSubset<T, BrandFindFirstArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandFindManyArgs>(args?: SelectSubset<T, BrandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brand.
     * @param {BrandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends BrandCreateArgs>(args: SelectSubset<T, BrandCreateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {BrandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandCreateManyArgs>(args?: SelectSubset<T, BrandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Brands and returns the data saved in the database.
     * @param {BrandCreateManyAndReturnArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BrandCreateManyAndReturnArgs>(args?: SelectSubset<T, BrandCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Brand.
     * @param {BrandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends BrandDeleteArgs>(args: SelectSubset<T, BrandDeleteArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brand.
     * @param {BrandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandUpdateArgs>(args: SelectSubset<T, BrandUpdateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {BrandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandDeleteManyArgs>(args?: SelectSubset<T, BrandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandUpdateManyArgs>(args: SelectSubset<T, BrandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands and returns the data updated in the database.
     * @param {BrandUpdateManyAndReturnArgs} args - Arguments to update many Brands.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Brands and only return the `id`
     * const brandWithIdOnly = await prisma.brand.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BrandUpdateManyAndReturnArgs>(args: SelectSubset<T, BrandUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Brand.
     * @param {BrandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends BrandUpsertArgs>(args: SelectSubset<T, BrandUpsertArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends BrandCountArgs>(
      args?: Subset<T, BrandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandGroupByArgs['orderBy'] }
        : { orderBy?: BrandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Brand model
   */
  readonly fields: BrandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Brand$productsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    brandTranslations<T extends Brand$brandTranslationsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$brandTranslationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Brand$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Brand$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Brand$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Brand$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Brand$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Brand$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Brand model
   */
  interface BrandFieldRefs {
    readonly id: FieldRef<"Brand", 'Int'>
    readonly logo: FieldRef<"Brand", 'String'>
    readonly createdById: FieldRef<"Brand", 'Int'>
    readonly updatedById: FieldRef<"Brand", 'Int'>
    readonly deletedById: FieldRef<"Brand", 'Int'>
    readonly deletedAt: FieldRef<"Brand", 'DateTime'>
    readonly createdAt: FieldRef<"Brand", 'DateTime'>
    readonly updatedAt: FieldRef<"Brand", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Brand findUnique
   */
  export type BrandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findUniqueOrThrow
   */
  export type BrandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findFirst
   */
  export type BrandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findFirstOrThrow
   */
  export type BrandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findMany
   */
  export type BrandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brands to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand create
   */
  export type BrandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to create a Brand.
     */
    data: XOR<BrandCreateInput, BrandUncheckedCreateInput>
  }

  /**
   * Brand createMany
   */
  export type BrandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand createManyAndReturn
   */
  export type BrandCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Brand update
   */
  export type BrandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to update a Brand.
     */
    data: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
    /**
     * Choose, which Brand to update.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand updateMany
   */
  export type BrandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
  }

  /**
   * Brand updateManyAndReturn
   */
  export type BrandUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Brand upsert
   */
  export type BrandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The filter to search for the Brand to update in case it exists.
     */
    where: BrandWhereUniqueInput
    /**
     * In case the Brand found by the `where` argument doesn't exist, create a new Brand with this data.
     */
    create: XOR<BrandCreateInput, BrandUncheckedCreateInput>
    /**
     * In case the Brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
  }

  /**
   * Brand delete
   */
  export type BrandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter which Brand to delete.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand deleteMany
   */
  export type BrandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brands to delete
     */
    where?: BrandWhereInput
    /**
     * Limit how many Brands to delete.
     */
    limit?: number
  }

  /**
   * Brand.products
   */
  export type Brand$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Brand.brandTranslations
   */
  export type Brand$brandTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    cursor?: BrandTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * Brand.createdBy
   */
  export type Brand$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Brand.updatedBy
   */
  export type Brand$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Brand.deletedBy
   */
  export type Brand$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Brand without action
   */
  export type BrandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Brand
     */
    omit?: BrandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
  }


  /**
   * Model BrandTranslation
   */

  export type AggregateBrandTranslation = {
    _count: BrandTranslationCountAggregateOutputType | null
    _avg: BrandTranslationAvgAggregateOutputType | null
    _sum: BrandTranslationSumAggregateOutputType | null
    _min: BrandTranslationMinAggregateOutputType | null
    _max: BrandTranslationMaxAggregateOutputType | null
  }

  export type BrandTranslationAvgAggregateOutputType = {
    id: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type BrandTranslationSumAggregateOutputType = {
    id: number | null
    brandId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type BrandTranslationMinAggregateOutputType = {
    id: number | null
    brandId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandTranslationMaxAggregateOutputType = {
    id: number | null
    brandId: number | null
    languageId: string | null
    name: string | null
    description: string | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BrandTranslationCountAggregateOutputType = {
    id: number
    brandId: number
    languageId: number
    name: number
    description: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BrandTranslationAvgAggregateInputType = {
    id?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type BrandTranslationSumAggregateInputType = {
    id?: true
    brandId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type BrandTranslationMinAggregateInputType = {
    id?: true
    brandId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandTranslationMaxAggregateInputType = {
    id?: true
    brandId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BrandTranslationCountAggregateInputType = {
    id?: true
    brandId?: true
    languageId?: true
    name?: true
    description?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BrandTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BrandTranslation to aggregate.
     */
    where?: BrandTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BrandTranslations to fetch.
     */
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BrandTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BrandTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BrandTranslations
    **/
    _count?: true | BrandTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BrandTranslationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BrandTranslationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandTranslationMaxAggregateInputType
  }

  export type GetBrandTranslationAggregateType<T extends BrandTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateBrandTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrandTranslation[P]>
      : GetScalarType<T[P], AggregateBrandTranslation[P]>
  }




  export type BrandTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandTranslationWhereInput
    orderBy?: BrandTranslationOrderByWithAggregationInput | BrandTranslationOrderByWithAggregationInput[]
    by: BrandTranslationScalarFieldEnum[] | BrandTranslationScalarFieldEnum
    having?: BrandTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandTranslationCountAggregateInputType | true
    _avg?: BrandTranslationAvgAggregateInputType
    _sum?: BrandTranslationSumAggregateInputType
    _min?: BrandTranslationMinAggregateInputType
    _max?: BrandTranslationMaxAggregateInputType
  }

  export type BrandTranslationGroupByOutputType = {
    id: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: BrandTranslationCountAggregateOutputType | null
    _avg: BrandTranslationAvgAggregateOutputType | null
    _sum: BrandTranslationSumAggregateOutputType | null
    _min: BrandTranslationMinAggregateOutputType | null
    _max: BrandTranslationMaxAggregateOutputType | null
  }

  type GetBrandTranslationGroupByPayload<T extends BrandTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], BrandTranslationGroupByOutputType[P]>
        }
      >
    >


  export type BrandTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    brandId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["brandTranslation"]>

  export type BrandTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    brandId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["brandTranslation"]>

  export type BrandTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    brandId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["brandTranslation"]>

  export type BrandTranslationSelectScalar = {
    id?: boolean
    brandId?: boolean
    languageId?: boolean
    name?: boolean
    description?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BrandTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "brandId" | "languageId" | "name" | "description" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["brandTranslation"]>
  export type BrandTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }
  export type BrandTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }
  export type BrandTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    language?: boolean | LanguageDefaultArgs<ExtArgs>
    createdBy?: boolean | BrandTranslation$createdByArgs<ExtArgs>
    updatedBy?: boolean | BrandTranslation$updatedByArgs<ExtArgs>
    deletedBy?: boolean | BrandTranslation$deletedByArgs<ExtArgs>
  }

  export type $BrandTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BrandTranslation"
    objects: {
      brand: Prisma.$BrandPayload<ExtArgs>
      language: Prisma.$LanguagePayload<ExtArgs>
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      brandId: number
      languageId: string
      name: string
      description: string
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["brandTranslation"]>
    composites: {}
  }

  type BrandTranslationGetPayload<S extends boolean | null | undefined | BrandTranslationDefaultArgs> = $Result.GetResult<Prisma.$BrandTranslationPayload, S>

  type BrandTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<BrandTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandTranslationCountAggregateInputType | true
    }

  export interface BrandTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BrandTranslation'], meta: { name: 'BrandTranslation' } }
    /**
     * Find zero or one BrandTranslation that matches the filter.
     * @param {BrandTranslationFindUniqueArgs} args - Arguments to find a BrandTranslation
     * @example
     * // Get one BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandTranslationFindUniqueArgs>(args: SelectSubset<T, BrandTranslationFindUniqueArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one BrandTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {BrandTranslationFindUniqueOrThrowArgs} args - Arguments to find a BrandTranslation
     * @example
     * // Get one BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BrandTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationFindFirstArgs} args - Arguments to find a BrandTranslation
     * @example
     * // Get one BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandTranslationFindFirstArgs>(args?: SelectSubset<T, BrandTranslationFindFirstArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first BrandTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationFindFirstOrThrowArgs} args - Arguments to find a BrandTranslation
     * @example
     * // Get one BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more BrandTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BrandTranslations
     * const brandTranslations = await prisma.brandTranslation.findMany()
     * 
     * // Get first 10 BrandTranslations
     * const brandTranslations = await prisma.brandTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandTranslationWithIdOnly = await prisma.brandTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandTranslationFindManyArgs>(args?: SelectSubset<T, BrandTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a BrandTranslation.
     * @param {BrandTranslationCreateArgs} args - Arguments to create a BrandTranslation.
     * @example
     * // Create one BrandTranslation
     * const BrandTranslation = await prisma.brandTranslation.create({
     *   data: {
     *     // ... data to create a BrandTranslation
     *   }
     * })
     * 
     */
    create<T extends BrandTranslationCreateArgs>(args: SelectSubset<T, BrandTranslationCreateArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many BrandTranslations.
     * @param {BrandTranslationCreateManyArgs} args - Arguments to create many BrandTranslations.
     * @example
     * // Create many BrandTranslations
     * const brandTranslation = await prisma.brandTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandTranslationCreateManyArgs>(args?: SelectSubset<T, BrandTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BrandTranslations and returns the data saved in the database.
     * @param {BrandTranslationCreateManyAndReturnArgs} args - Arguments to create many BrandTranslations.
     * @example
     * // Create many BrandTranslations
     * const brandTranslation = await prisma.brandTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BrandTranslations and only return the `id`
     * const brandTranslationWithIdOnly = await prisma.brandTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BrandTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, BrandTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a BrandTranslation.
     * @param {BrandTranslationDeleteArgs} args - Arguments to delete one BrandTranslation.
     * @example
     * // Delete one BrandTranslation
     * const BrandTranslation = await prisma.brandTranslation.delete({
     *   where: {
     *     // ... filter to delete one BrandTranslation
     *   }
     * })
     * 
     */
    delete<T extends BrandTranslationDeleteArgs>(args: SelectSubset<T, BrandTranslationDeleteArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one BrandTranslation.
     * @param {BrandTranslationUpdateArgs} args - Arguments to update one BrandTranslation.
     * @example
     * // Update one BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandTranslationUpdateArgs>(args: SelectSubset<T, BrandTranslationUpdateArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more BrandTranslations.
     * @param {BrandTranslationDeleteManyArgs} args - Arguments to filter BrandTranslations to delete.
     * @example
     * // Delete a few BrandTranslations
     * const { count } = await prisma.brandTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandTranslationDeleteManyArgs>(args?: SelectSubset<T, BrandTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BrandTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BrandTranslations
     * const brandTranslation = await prisma.brandTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandTranslationUpdateManyArgs>(args: SelectSubset<T, BrandTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BrandTranslations and returns the data updated in the database.
     * @param {BrandTranslationUpdateManyAndReturnArgs} args - Arguments to update many BrandTranslations.
     * @example
     * // Update many BrandTranslations
     * const brandTranslation = await prisma.brandTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more BrandTranslations and only return the `id`
     * const brandTranslationWithIdOnly = await prisma.brandTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends BrandTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, BrandTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one BrandTranslation.
     * @param {BrandTranslationUpsertArgs} args - Arguments to update or create a BrandTranslation.
     * @example
     * // Update or create a BrandTranslation
     * const brandTranslation = await prisma.brandTranslation.upsert({
     *   create: {
     *     // ... data to create a BrandTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BrandTranslation we want to update
     *   }
     * })
     */
    upsert<T extends BrandTranslationUpsertArgs>(args: SelectSubset<T, BrandTranslationUpsertArgs<ExtArgs>>): Prisma__BrandTranslationClient<$Result.GetResult<Prisma.$BrandTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of BrandTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationCountArgs} args - Arguments to filter BrandTranslations to count.
     * @example
     * // Count the number of BrandTranslations
     * const count = await prisma.brandTranslation.count({
     *   where: {
     *     // ... the filter for the BrandTranslations we want to count
     *   }
     * })
    **/
    count<T extends BrandTranslationCountArgs>(
      args?: Subset<T, BrandTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BrandTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandTranslationAggregateArgs>(args: Subset<T, BrandTranslationAggregateArgs>): Prisma.PrismaPromise<GetBrandTranslationAggregateType<T>>

    /**
     * Group by BrandTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandTranslationGroupByArgs['orderBy'] }
        : { orderBy?: BrandTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BrandTranslation model
   */
  readonly fields: BrandTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BrandTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    brand<T extends BrandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BrandDefaultArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    language<T extends LanguageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, LanguageDefaultArgs<ExtArgs>>): Prisma__LanguageClient<$Result.GetResult<Prisma.$LanguagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    createdBy<T extends BrandTranslation$createdByArgs<ExtArgs> = {}>(args?: Subset<T, BrandTranslation$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends BrandTranslation$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, BrandTranslation$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends BrandTranslation$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, BrandTranslation$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BrandTranslation model
   */
  interface BrandTranslationFieldRefs {
    readonly id: FieldRef<"BrandTranslation", 'Int'>
    readonly brandId: FieldRef<"BrandTranslation", 'Int'>
    readonly languageId: FieldRef<"BrandTranslation", 'String'>
    readonly name: FieldRef<"BrandTranslation", 'String'>
    readonly description: FieldRef<"BrandTranslation", 'String'>
    readonly createdById: FieldRef<"BrandTranslation", 'Int'>
    readonly updatedById: FieldRef<"BrandTranslation", 'Int'>
    readonly deletedById: FieldRef<"BrandTranslation", 'Int'>
    readonly deletedAt: FieldRef<"BrandTranslation", 'DateTime'>
    readonly createdAt: FieldRef<"BrandTranslation", 'DateTime'>
    readonly updatedAt: FieldRef<"BrandTranslation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BrandTranslation findUnique
   */
  export type BrandTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter, which BrandTranslation to fetch.
     */
    where: BrandTranslationWhereUniqueInput
  }

  /**
   * BrandTranslation findUniqueOrThrow
   */
  export type BrandTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter, which BrandTranslation to fetch.
     */
    where: BrandTranslationWhereUniqueInput
  }

  /**
   * BrandTranslation findFirst
   */
  export type BrandTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter, which BrandTranslation to fetch.
     */
    where?: BrandTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BrandTranslations to fetch.
     */
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BrandTranslations.
     */
    cursor?: BrandTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BrandTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BrandTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BrandTranslations.
     */
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * BrandTranslation findFirstOrThrow
   */
  export type BrandTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter, which BrandTranslation to fetch.
     */
    where?: BrandTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BrandTranslations to fetch.
     */
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BrandTranslations.
     */
    cursor?: BrandTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BrandTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BrandTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BrandTranslations.
     */
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * BrandTranslation findMany
   */
  export type BrandTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter, which BrandTranslations to fetch.
     */
    where?: BrandTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BrandTranslations to fetch.
     */
    orderBy?: BrandTranslationOrderByWithRelationInput | BrandTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BrandTranslations.
     */
    cursor?: BrandTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BrandTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BrandTranslations.
     */
    skip?: number
    distinct?: BrandTranslationScalarFieldEnum | BrandTranslationScalarFieldEnum[]
  }

  /**
   * BrandTranslation create
   */
  export type BrandTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a BrandTranslation.
     */
    data: XOR<BrandTranslationCreateInput, BrandTranslationUncheckedCreateInput>
  }

  /**
   * BrandTranslation createMany
   */
  export type BrandTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BrandTranslations.
     */
    data: BrandTranslationCreateManyInput | BrandTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BrandTranslation createManyAndReturn
   */
  export type BrandTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many BrandTranslations.
     */
    data: BrandTranslationCreateManyInput | BrandTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BrandTranslation update
   */
  export type BrandTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a BrandTranslation.
     */
    data: XOR<BrandTranslationUpdateInput, BrandTranslationUncheckedUpdateInput>
    /**
     * Choose, which BrandTranslation to update.
     */
    where: BrandTranslationWhereUniqueInput
  }

  /**
   * BrandTranslation updateMany
   */
  export type BrandTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BrandTranslations.
     */
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyInput>
    /**
     * Filter which BrandTranslations to update
     */
    where?: BrandTranslationWhereInput
    /**
     * Limit how many BrandTranslations to update.
     */
    limit?: number
  }

  /**
   * BrandTranslation updateManyAndReturn
   */
  export type BrandTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * The data used to update BrandTranslations.
     */
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyInput>
    /**
     * Filter which BrandTranslations to update
     */
    where?: BrandTranslationWhereInput
    /**
     * Limit how many BrandTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * BrandTranslation upsert
   */
  export type BrandTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the BrandTranslation to update in case it exists.
     */
    where: BrandTranslationWhereUniqueInput
    /**
     * In case the BrandTranslation found by the `where` argument doesn't exist, create a new BrandTranslation with this data.
     */
    create: XOR<BrandTranslationCreateInput, BrandTranslationUncheckedCreateInput>
    /**
     * In case the BrandTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandTranslationUpdateInput, BrandTranslationUncheckedUpdateInput>
  }

  /**
   * BrandTranslation delete
   */
  export type BrandTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
    /**
     * Filter which BrandTranslation to delete.
     */
    where: BrandTranslationWhereUniqueInput
  }

  /**
   * BrandTranslation deleteMany
   */
  export type BrandTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BrandTranslations to delete
     */
    where?: BrandTranslationWhereInput
    /**
     * Limit how many BrandTranslations to delete.
     */
    limit?: number
  }

  /**
   * BrandTranslation.createdBy
   */
  export type BrandTranslation$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * BrandTranslation.updatedBy
   */
  export type BrandTranslation$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * BrandTranslation.deletedBy
   */
  export type BrandTranslation$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * BrandTranslation without action
   */
  export type BrandTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandTranslation
     */
    select?: BrandTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the BrandTranslation
     */
    omit?: BrandTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandTranslationInclude<ExtArgs> | null
  }


  /**
   * Model CartItem
   */

  export type AggregateCartItem = {
    _count: CartItemCountAggregateOutputType | null
    _avg: CartItemAvgAggregateOutputType | null
    _sum: CartItemSumAggregateOutputType | null
    _min: CartItemMinAggregateOutputType | null
    _max: CartItemMaxAggregateOutputType | null
  }

  export type CartItemAvgAggregateOutputType = {
    id: number | null
    quantity: number | null
    skuId: number | null
    userId: number | null
  }

  export type CartItemSumAggregateOutputType = {
    id: number | null
    quantity: number | null
    skuId: number | null
    userId: number | null
  }

  export type CartItemMinAggregateOutputType = {
    id: number | null
    quantity: number | null
    skuId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CartItemMaxAggregateOutputType = {
    id: number | null
    quantity: number | null
    skuId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CartItemCountAggregateOutputType = {
    id: number
    quantity: number
    skuId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CartItemAvgAggregateInputType = {
    id?: true
    quantity?: true
    skuId?: true
    userId?: true
  }

  export type CartItemSumAggregateInputType = {
    id?: true
    quantity?: true
    skuId?: true
    userId?: true
  }

  export type CartItemMinAggregateInputType = {
    id?: true
    quantity?: true
    skuId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CartItemMaxAggregateInputType = {
    id?: true
    quantity?: true
    skuId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CartItemCountAggregateInputType = {
    id?: true
    quantity?: true
    skuId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CartItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CartItem to aggregate.
     */
    where?: CartItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartItems to fetch.
     */
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CartItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CartItems
    **/
    _count?: true | CartItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartItemMaxAggregateInputType
  }

  export type GetCartItemAggregateType<T extends CartItemAggregateArgs> = {
        [P in keyof T & keyof AggregateCartItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCartItem[P]>
      : GetScalarType<T[P], AggregateCartItem[P]>
  }




  export type CartItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CartItemWhereInput
    orderBy?: CartItemOrderByWithAggregationInput | CartItemOrderByWithAggregationInput[]
    by: CartItemScalarFieldEnum[] | CartItemScalarFieldEnum
    having?: CartItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartItemCountAggregateInputType | true
    _avg?: CartItemAvgAggregateInputType
    _sum?: CartItemSumAggregateInputType
    _min?: CartItemMinAggregateInputType
    _max?: CartItemMaxAggregateInputType
  }

  export type CartItemGroupByOutputType = {
    id: number
    quantity: number
    skuId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: CartItemCountAggregateOutputType | null
    _avg: CartItemAvgAggregateOutputType | null
    _sum: CartItemSumAggregateOutputType | null
    _min: CartItemMinAggregateOutputType | null
    _max: CartItemMaxAggregateOutputType | null
  }

  type GetCartItemGroupByPayload<T extends CartItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartItemGroupByOutputType[P]>
            : GetScalarType<T[P], CartItemGroupByOutputType[P]>
        }
      >
    >


  export type CartItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    skuId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartItem"]>

  export type CartItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    skuId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartItem"]>

  export type CartItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    skuId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cartItem"]>

  export type CartItemSelectScalar = {
    id?: boolean
    quantity?: boolean
    skuId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CartItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "quantity" | "skuId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["cartItem"]>
  export type CartItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CartItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type CartItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | SKUDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $CartItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CartItem"
    objects: {
      sku: Prisma.$SKUPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      quantity: number
      skuId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cartItem"]>
    composites: {}
  }

  type CartItemGetPayload<S extends boolean | null | undefined | CartItemDefaultArgs> = $Result.GetResult<Prisma.$CartItemPayload, S>

  type CartItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CartItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartItemCountAggregateInputType | true
    }

  export interface CartItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CartItem'], meta: { name: 'CartItem' } }
    /**
     * Find zero or one CartItem that matches the filter.
     * @param {CartItemFindUniqueArgs} args - Arguments to find a CartItem
     * @example
     * // Get one CartItem
     * const cartItem = await prisma.cartItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CartItemFindUniqueArgs>(args: SelectSubset<T, CartItemFindUniqueArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CartItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CartItemFindUniqueOrThrowArgs} args - Arguments to find a CartItem
     * @example
     * // Get one CartItem
     * const cartItem = await prisma.cartItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CartItemFindUniqueOrThrowArgs>(args: SelectSubset<T, CartItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CartItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemFindFirstArgs} args - Arguments to find a CartItem
     * @example
     * // Get one CartItem
     * const cartItem = await prisma.cartItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CartItemFindFirstArgs>(args?: SelectSubset<T, CartItemFindFirstArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CartItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemFindFirstOrThrowArgs} args - Arguments to find a CartItem
     * @example
     * // Get one CartItem
     * const cartItem = await prisma.cartItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CartItemFindFirstOrThrowArgs>(args?: SelectSubset<T, CartItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CartItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CartItems
     * const cartItems = await prisma.cartItem.findMany()
     * 
     * // Get first 10 CartItems
     * const cartItems = await prisma.cartItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cartItemWithIdOnly = await prisma.cartItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CartItemFindManyArgs>(args?: SelectSubset<T, CartItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CartItem.
     * @param {CartItemCreateArgs} args - Arguments to create a CartItem.
     * @example
     * // Create one CartItem
     * const CartItem = await prisma.cartItem.create({
     *   data: {
     *     // ... data to create a CartItem
     *   }
     * })
     * 
     */
    create<T extends CartItemCreateArgs>(args: SelectSubset<T, CartItemCreateArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CartItems.
     * @param {CartItemCreateManyArgs} args - Arguments to create many CartItems.
     * @example
     * // Create many CartItems
     * const cartItem = await prisma.cartItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CartItemCreateManyArgs>(args?: SelectSubset<T, CartItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CartItems and returns the data saved in the database.
     * @param {CartItemCreateManyAndReturnArgs} args - Arguments to create many CartItems.
     * @example
     * // Create many CartItems
     * const cartItem = await prisma.cartItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CartItems and only return the `id`
     * const cartItemWithIdOnly = await prisma.cartItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CartItemCreateManyAndReturnArgs>(args?: SelectSubset<T, CartItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CartItem.
     * @param {CartItemDeleteArgs} args - Arguments to delete one CartItem.
     * @example
     * // Delete one CartItem
     * const CartItem = await prisma.cartItem.delete({
     *   where: {
     *     // ... filter to delete one CartItem
     *   }
     * })
     * 
     */
    delete<T extends CartItemDeleteArgs>(args: SelectSubset<T, CartItemDeleteArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CartItem.
     * @param {CartItemUpdateArgs} args - Arguments to update one CartItem.
     * @example
     * // Update one CartItem
     * const cartItem = await prisma.cartItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CartItemUpdateArgs>(args: SelectSubset<T, CartItemUpdateArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CartItems.
     * @param {CartItemDeleteManyArgs} args - Arguments to filter CartItems to delete.
     * @example
     * // Delete a few CartItems
     * const { count } = await prisma.cartItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CartItemDeleteManyArgs>(args?: SelectSubset<T, CartItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CartItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CartItems
     * const cartItem = await prisma.cartItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CartItemUpdateManyArgs>(args: SelectSubset<T, CartItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CartItems and returns the data updated in the database.
     * @param {CartItemUpdateManyAndReturnArgs} args - Arguments to update many CartItems.
     * @example
     * // Update many CartItems
     * const cartItem = await prisma.cartItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CartItems and only return the `id`
     * const cartItemWithIdOnly = await prisma.cartItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CartItemUpdateManyAndReturnArgs>(args: SelectSubset<T, CartItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CartItem.
     * @param {CartItemUpsertArgs} args - Arguments to update or create a CartItem.
     * @example
     * // Update or create a CartItem
     * const cartItem = await prisma.cartItem.upsert({
     *   create: {
     *     // ... data to create a CartItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CartItem we want to update
     *   }
     * })
     */
    upsert<T extends CartItemUpsertArgs>(args: SelectSubset<T, CartItemUpsertArgs<ExtArgs>>): Prisma__CartItemClient<$Result.GetResult<Prisma.$CartItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CartItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemCountArgs} args - Arguments to filter CartItems to count.
     * @example
     * // Count the number of CartItems
     * const count = await prisma.cartItem.count({
     *   where: {
     *     // ... the filter for the CartItems we want to count
     *   }
     * })
    **/
    count<T extends CartItemCountArgs>(
      args?: Subset<T, CartItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CartItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartItemAggregateArgs>(args: Subset<T, CartItemAggregateArgs>): Prisma.PrismaPromise<GetCartItemAggregateType<T>>

    /**
     * Group by CartItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CartItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CartItemGroupByArgs['orderBy'] }
        : { orderBy?: CartItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CartItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CartItem model
   */
  readonly fields: CartItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CartItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CartItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sku<T extends SKUDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SKUDefaultArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CartItem model
   */
  interface CartItemFieldRefs {
    readonly id: FieldRef<"CartItem", 'Int'>
    readonly quantity: FieldRef<"CartItem", 'Int'>
    readonly skuId: FieldRef<"CartItem", 'Int'>
    readonly userId: FieldRef<"CartItem", 'Int'>
    readonly createdAt: FieldRef<"CartItem", 'DateTime'>
    readonly updatedAt: FieldRef<"CartItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CartItem findUnique
   */
  export type CartItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter, which CartItem to fetch.
     */
    where: CartItemWhereUniqueInput
  }

  /**
   * CartItem findUniqueOrThrow
   */
  export type CartItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter, which CartItem to fetch.
     */
    where: CartItemWhereUniqueInput
  }

  /**
   * CartItem findFirst
   */
  export type CartItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter, which CartItem to fetch.
     */
    where?: CartItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartItems to fetch.
     */
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CartItems.
     */
    cursor?: CartItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CartItems.
     */
    distinct?: CartItemScalarFieldEnum | CartItemScalarFieldEnum[]
  }

  /**
   * CartItem findFirstOrThrow
   */
  export type CartItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter, which CartItem to fetch.
     */
    where?: CartItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartItems to fetch.
     */
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CartItems.
     */
    cursor?: CartItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CartItems.
     */
    distinct?: CartItemScalarFieldEnum | CartItemScalarFieldEnum[]
  }

  /**
   * CartItem findMany
   */
  export type CartItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter, which CartItems to fetch.
     */
    where?: CartItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CartItems to fetch.
     */
    orderBy?: CartItemOrderByWithRelationInput | CartItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CartItems.
     */
    cursor?: CartItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CartItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CartItems.
     */
    skip?: number
    distinct?: CartItemScalarFieldEnum | CartItemScalarFieldEnum[]
  }

  /**
   * CartItem create
   */
  export type CartItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * The data needed to create a CartItem.
     */
    data: XOR<CartItemCreateInput, CartItemUncheckedCreateInput>
  }

  /**
   * CartItem createMany
   */
  export type CartItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CartItems.
     */
    data: CartItemCreateManyInput | CartItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CartItem createManyAndReturn
   */
  export type CartItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * The data used to create many CartItems.
     */
    data: CartItemCreateManyInput | CartItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CartItem update
   */
  export type CartItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * The data needed to update a CartItem.
     */
    data: XOR<CartItemUpdateInput, CartItemUncheckedUpdateInput>
    /**
     * Choose, which CartItem to update.
     */
    where: CartItemWhereUniqueInput
  }

  /**
   * CartItem updateMany
   */
  export type CartItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CartItems.
     */
    data: XOR<CartItemUpdateManyMutationInput, CartItemUncheckedUpdateManyInput>
    /**
     * Filter which CartItems to update
     */
    where?: CartItemWhereInput
    /**
     * Limit how many CartItems to update.
     */
    limit?: number
  }

  /**
   * CartItem updateManyAndReturn
   */
  export type CartItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * The data used to update CartItems.
     */
    data: XOR<CartItemUpdateManyMutationInput, CartItemUncheckedUpdateManyInput>
    /**
     * Filter which CartItems to update
     */
    where?: CartItemWhereInput
    /**
     * Limit how many CartItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CartItem upsert
   */
  export type CartItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * The filter to search for the CartItem to update in case it exists.
     */
    where: CartItemWhereUniqueInput
    /**
     * In case the CartItem found by the `where` argument doesn't exist, create a new CartItem with this data.
     */
    create: XOR<CartItemCreateInput, CartItemUncheckedCreateInput>
    /**
     * In case the CartItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CartItemUpdateInput, CartItemUncheckedUpdateInput>
  }

  /**
   * CartItem delete
   */
  export type CartItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
    /**
     * Filter which CartItem to delete.
     */
    where: CartItemWhereUniqueInput
  }

  /**
   * CartItem deleteMany
   */
  export type CartItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CartItems to delete
     */
    where?: CartItemWhereInput
    /**
     * Limit how many CartItems to delete.
     */
    limit?: number
  }

  /**
   * CartItem without action
   */
  export type CartItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartItem
     */
    select?: CartItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CartItem
     */
    omit?: CartItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CartItemInclude<ExtArgs> | null
  }


  /**
   * Model ProductSKUSnapshot
   */

  export type AggregateProductSKUSnapshot = {
    _count: ProductSKUSnapshotCountAggregateOutputType | null
    _avg: ProductSKUSnapshotAvgAggregateOutputType | null
    _sum: ProductSKUSnapshotSumAggregateOutputType | null
    _min: ProductSKUSnapshotMinAggregateOutputType | null
    _max: ProductSKUSnapshotMaxAggregateOutputType | null
  }

  export type ProductSKUSnapshotAvgAggregateOutputType = {
    id: number | null
    price: number | null
    skuId: number | null
    orderId: number | null
  }

  export type ProductSKUSnapshotSumAggregateOutputType = {
    id: number | null
    price: number | null
    skuId: number | null
    orderId: number | null
  }

  export type ProductSKUSnapshotMinAggregateOutputType = {
    id: number | null
    productName: string | null
    price: number | null
    skuValue: string | null
    skuId: number | null
    orderId: number | null
    createdAt: Date | null
  }

  export type ProductSKUSnapshotMaxAggregateOutputType = {
    id: number | null
    productName: string | null
    price: number | null
    skuValue: string | null
    skuId: number | null
    orderId: number | null
    createdAt: Date | null
  }

  export type ProductSKUSnapshotCountAggregateOutputType = {
    id: number
    productName: number
    price: number
    images: number
    skuValue: number
    skuId: number
    orderId: number
    createdAt: number
    _all: number
  }


  export type ProductSKUSnapshotAvgAggregateInputType = {
    id?: true
    price?: true
    skuId?: true
    orderId?: true
  }

  export type ProductSKUSnapshotSumAggregateInputType = {
    id?: true
    price?: true
    skuId?: true
    orderId?: true
  }

  export type ProductSKUSnapshotMinAggregateInputType = {
    id?: true
    productName?: true
    price?: true
    skuValue?: true
    skuId?: true
    orderId?: true
    createdAt?: true
  }

  export type ProductSKUSnapshotMaxAggregateInputType = {
    id?: true
    productName?: true
    price?: true
    skuValue?: true
    skuId?: true
    orderId?: true
    createdAt?: true
  }

  export type ProductSKUSnapshotCountAggregateInputType = {
    id?: true
    productName?: true
    price?: true
    images?: true
    skuValue?: true
    skuId?: true
    orderId?: true
    createdAt?: true
    _all?: true
  }

  export type ProductSKUSnapshotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSKUSnapshot to aggregate.
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSKUSnapshots to fetch.
     */
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductSKUSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSKUSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSKUSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductSKUSnapshots
    **/
    _count?: true | ProductSKUSnapshotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductSKUSnapshotAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSKUSnapshotSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductSKUSnapshotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductSKUSnapshotMaxAggregateInputType
  }

  export type GetProductSKUSnapshotAggregateType<T extends ProductSKUSnapshotAggregateArgs> = {
        [P in keyof T & keyof AggregateProductSKUSnapshot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductSKUSnapshot[P]>
      : GetScalarType<T[P], AggregateProductSKUSnapshot[P]>
  }




  export type ProductSKUSnapshotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSKUSnapshotWhereInput
    orderBy?: ProductSKUSnapshotOrderByWithAggregationInput | ProductSKUSnapshotOrderByWithAggregationInput[]
    by: ProductSKUSnapshotScalarFieldEnum[] | ProductSKUSnapshotScalarFieldEnum
    having?: ProductSKUSnapshotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductSKUSnapshotCountAggregateInputType | true
    _avg?: ProductSKUSnapshotAvgAggregateInputType
    _sum?: ProductSKUSnapshotSumAggregateInputType
    _min?: ProductSKUSnapshotMinAggregateInputType
    _max?: ProductSKUSnapshotMaxAggregateInputType
  }

  export type ProductSKUSnapshotGroupByOutputType = {
    id: number
    productName: string
    price: number
    images: string[]
    skuValue: string
    skuId: number | null
    orderId: number | null
    createdAt: Date
    _count: ProductSKUSnapshotCountAggregateOutputType | null
    _avg: ProductSKUSnapshotAvgAggregateOutputType | null
    _sum: ProductSKUSnapshotSumAggregateOutputType | null
    _min: ProductSKUSnapshotMinAggregateOutputType | null
    _max: ProductSKUSnapshotMaxAggregateOutputType | null
  }

  type GetProductSKUSnapshotGroupByPayload<T extends ProductSKUSnapshotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductSKUSnapshotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductSKUSnapshotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductSKUSnapshotGroupByOutputType[P]>
            : GetScalarType<T[P], ProductSKUSnapshotGroupByOutputType[P]>
        }
      >
    >


  export type ProductSKUSnapshotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productName?: boolean
    price?: boolean
    images?: boolean
    skuValue?: boolean
    skuId?: boolean
    orderId?: boolean
    createdAt?: boolean
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }, ExtArgs["result"]["productSKUSnapshot"]>

  export type ProductSKUSnapshotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productName?: boolean
    price?: boolean
    images?: boolean
    skuValue?: boolean
    skuId?: boolean
    orderId?: boolean
    createdAt?: boolean
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }, ExtArgs["result"]["productSKUSnapshot"]>

  export type ProductSKUSnapshotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productName?: boolean
    price?: boolean
    images?: boolean
    skuValue?: boolean
    skuId?: boolean
    orderId?: boolean
    createdAt?: boolean
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }, ExtArgs["result"]["productSKUSnapshot"]>

  export type ProductSKUSnapshotSelectScalar = {
    id?: boolean
    productName?: boolean
    price?: boolean
    images?: boolean
    skuValue?: boolean
    skuId?: boolean
    orderId?: boolean
    createdAt?: boolean
  }

  export type ProductSKUSnapshotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productName" | "price" | "images" | "skuValue" | "skuId" | "orderId" | "createdAt", ExtArgs["result"]["productSKUSnapshot"]>
  export type ProductSKUSnapshotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }
  export type ProductSKUSnapshotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }
  export type ProductSKUSnapshotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sku?: boolean | ProductSKUSnapshot$skuArgs<ExtArgs>
    order?: boolean | ProductSKUSnapshot$orderArgs<ExtArgs>
  }

  export type $ProductSKUSnapshotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductSKUSnapshot"
    objects: {
      sku: Prisma.$SKUPayload<ExtArgs> | null
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productName: string
      price: number
      images: string[]
      skuValue: string
      skuId: number | null
      orderId: number | null
      createdAt: Date
    }, ExtArgs["result"]["productSKUSnapshot"]>
    composites: {}
  }

  type ProductSKUSnapshotGetPayload<S extends boolean | null | undefined | ProductSKUSnapshotDefaultArgs> = $Result.GetResult<Prisma.$ProductSKUSnapshotPayload, S>

  type ProductSKUSnapshotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductSKUSnapshotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductSKUSnapshotCountAggregateInputType | true
    }

  export interface ProductSKUSnapshotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductSKUSnapshot'], meta: { name: 'ProductSKUSnapshot' } }
    /**
     * Find zero or one ProductSKUSnapshot that matches the filter.
     * @param {ProductSKUSnapshotFindUniqueArgs} args - Arguments to find a ProductSKUSnapshot
     * @example
     * // Get one ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductSKUSnapshotFindUniqueArgs>(args: SelectSubset<T, ProductSKUSnapshotFindUniqueArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductSKUSnapshot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductSKUSnapshotFindUniqueOrThrowArgs} args - Arguments to find a ProductSKUSnapshot
     * @example
     * // Get one ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductSKUSnapshotFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductSKUSnapshotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSKUSnapshot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotFindFirstArgs} args - Arguments to find a ProductSKUSnapshot
     * @example
     * // Get one ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductSKUSnapshotFindFirstArgs>(args?: SelectSubset<T, ProductSKUSnapshotFindFirstArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSKUSnapshot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotFindFirstOrThrowArgs} args - Arguments to find a ProductSKUSnapshot
     * @example
     * // Get one ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductSKUSnapshotFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductSKUSnapshotFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductSKUSnapshots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductSKUSnapshots
     * const productSKUSnapshots = await prisma.productSKUSnapshot.findMany()
     * 
     * // Get first 10 ProductSKUSnapshots
     * const productSKUSnapshots = await prisma.productSKUSnapshot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productSKUSnapshotWithIdOnly = await prisma.productSKUSnapshot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductSKUSnapshotFindManyArgs>(args?: SelectSubset<T, ProductSKUSnapshotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductSKUSnapshot.
     * @param {ProductSKUSnapshotCreateArgs} args - Arguments to create a ProductSKUSnapshot.
     * @example
     * // Create one ProductSKUSnapshot
     * const ProductSKUSnapshot = await prisma.productSKUSnapshot.create({
     *   data: {
     *     // ... data to create a ProductSKUSnapshot
     *   }
     * })
     * 
     */
    create<T extends ProductSKUSnapshotCreateArgs>(args: SelectSubset<T, ProductSKUSnapshotCreateArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductSKUSnapshots.
     * @param {ProductSKUSnapshotCreateManyArgs} args - Arguments to create many ProductSKUSnapshots.
     * @example
     * // Create many ProductSKUSnapshots
     * const productSKUSnapshot = await prisma.productSKUSnapshot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductSKUSnapshotCreateManyArgs>(args?: SelectSubset<T, ProductSKUSnapshotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductSKUSnapshots and returns the data saved in the database.
     * @param {ProductSKUSnapshotCreateManyAndReturnArgs} args - Arguments to create many ProductSKUSnapshots.
     * @example
     * // Create many ProductSKUSnapshots
     * const productSKUSnapshot = await prisma.productSKUSnapshot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductSKUSnapshots and only return the `id`
     * const productSKUSnapshotWithIdOnly = await prisma.productSKUSnapshot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductSKUSnapshotCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductSKUSnapshotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductSKUSnapshot.
     * @param {ProductSKUSnapshotDeleteArgs} args - Arguments to delete one ProductSKUSnapshot.
     * @example
     * // Delete one ProductSKUSnapshot
     * const ProductSKUSnapshot = await prisma.productSKUSnapshot.delete({
     *   where: {
     *     // ... filter to delete one ProductSKUSnapshot
     *   }
     * })
     * 
     */
    delete<T extends ProductSKUSnapshotDeleteArgs>(args: SelectSubset<T, ProductSKUSnapshotDeleteArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductSKUSnapshot.
     * @param {ProductSKUSnapshotUpdateArgs} args - Arguments to update one ProductSKUSnapshot.
     * @example
     * // Update one ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductSKUSnapshotUpdateArgs>(args: SelectSubset<T, ProductSKUSnapshotUpdateArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductSKUSnapshots.
     * @param {ProductSKUSnapshotDeleteManyArgs} args - Arguments to filter ProductSKUSnapshots to delete.
     * @example
     * // Delete a few ProductSKUSnapshots
     * const { count } = await prisma.productSKUSnapshot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductSKUSnapshotDeleteManyArgs>(args?: SelectSubset<T, ProductSKUSnapshotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSKUSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductSKUSnapshots
     * const productSKUSnapshot = await prisma.productSKUSnapshot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductSKUSnapshotUpdateManyArgs>(args: SelectSubset<T, ProductSKUSnapshotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSKUSnapshots and returns the data updated in the database.
     * @param {ProductSKUSnapshotUpdateManyAndReturnArgs} args - Arguments to update many ProductSKUSnapshots.
     * @example
     * // Update many ProductSKUSnapshots
     * const productSKUSnapshot = await prisma.productSKUSnapshot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductSKUSnapshots and only return the `id`
     * const productSKUSnapshotWithIdOnly = await prisma.productSKUSnapshot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductSKUSnapshotUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductSKUSnapshotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductSKUSnapshot.
     * @param {ProductSKUSnapshotUpsertArgs} args - Arguments to update or create a ProductSKUSnapshot.
     * @example
     * // Update or create a ProductSKUSnapshot
     * const productSKUSnapshot = await prisma.productSKUSnapshot.upsert({
     *   create: {
     *     // ... data to create a ProductSKUSnapshot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductSKUSnapshot we want to update
     *   }
     * })
     */
    upsert<T extends ProductSKUSnapshotUpsertArgs>(args: SelectSubset<T, ProductSKUSnapshotUpsertArgs<ExtArgs>>): Prisma__ProductSKUSnapshotClient<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductSKUSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotCountArgs} args - Arguments to filter ProductSKUSnapshots to count.
     * @example
     * // Count the number of ProductSKUSnapshots
     * const count = await prisma.productSKUSnapshot.count({
     *   where: {
     *     // ... the filter for the ProductSKUSnapshots we want to count
     *   }
     * })
    **/
    count<T extends ProductSKUSnapshotCountArgs>(
      args?: Subset<T, ProductSKUSnapshotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductSKUSnapshotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductSKUSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductSKUSnapshotAggregateArgs>(args: Subset<T, ProductSKUSnapshotAggregateArgs>): Prisma.PrismaPromise<GetProductSKUSnapshotAggregateType<T>>

    /**
     * Group by ProductSKUSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSKUSnapshotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductSKUSnapshotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductSKUSnapshotGroupByArgs['orderBy'] }
        : { orderBy?: ProductSKUSnapshotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductSKUSnapshotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductSKUSnapshotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductSKUSnapshot model
   */
  readonly fields: ProductSKUSnapshotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductSKUSnapshot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductSKUSnapshotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sku<T extends ProductSKUSnapshot$skuArgs<ExtArgs> = {}>(args?: Subset<T, ProductSKUSnapshot$skuArgs<ExtArgs>>): Prisma__SKUClient<$Result.GetResult<Prisma.$SKUPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    order<T extends ProductSKUSnapshot$orderArgs<ExtArgs> = {}>(args?: Subset<T, ProductSKUSnapshot$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductSKUSnapshot model
   */
  interface ProductSKUSnapshotFieldRefs {
    readonly id: FieldRef<"ProductSKUSnapshot", 'Int'>
    readonly productName: FieldRef<"ProductSKUSnapshot", 'String'>
    readonly price: FieldRef<"ProductSKUSnapshot", 'Float'>
    readonly images: FieldRef<"ProductSKUSnapshot", 'String[]'>
    readonly skuValue: FieldRef<"ProductSKUSnapshot", 'String'>
    readonly skuId: FieldRef<"ProductSKUSnapshot", 'Int'>
    readonly orderId: FieldRef<"ProductSKUSnapshot", 'Int'>
    readonly createdAt: FieldRef<"ProductSKUSnapshot", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductSKUSnapshot findUnique
   */
  export type ProductSKUSnapshotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSKUSnapshot to fetch.
     */
    where: ProductSKUSnapshotWhereUniqueInput
  }

  /**
   * ProductSKUSnapshot findUniqueOrThrow
   */
  export type ProductSKUSnapshotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSKUSnapshot to fetch.
     */
    where: ProductSKUSnapshotWhereUniqueInput
  }

  /**
   * ProductSKUSnapshot findFirst
   */
  export type ProductSKUSnapshotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSKUSnapshot to fetch.
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSKUSnapshots to fetch.
     */
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSKUSnapshots.
     */
    cursor?: ProductSKUSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSKUSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSKUSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSKUSnapshots.
     */
    distinct?: ProductSKUSnapshotScalarFieldEnum | ProductSKUSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSKUSnapshot findFirstOrThrow
   */
  export type ProductSKUSnapshotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSKUSnapshot to fetch.
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSKUSnapshots to fetch.
     */
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSKUSnapshots.
     */
    cursor?: ProductSKUSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSKUSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSKUSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSKUSnapshots.
     */
    distinct?: ProductSKUSnapshotScalarFieldEnum | ProductSKUSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSKUSnapshot findMany
   */
  export type ProductSKUSnapshotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSKUSnapshots to fetch.
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSKUSnapshots to fetch.
     */
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductSKUSnapshots.
     */
    cursor?: ProductSKUSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSKUSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSKUSnapshots.
     */
    skip?: number
    distinct?: ProductSKUSnapshotScalarFieldEnum | ProductSKUSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSKUSnapshot create
   */
  export type ProductSKUSnapshotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductSKUSnapshot.
     */
    data: XOR<ProductSKUSnapshotCreateInput, ProductSKUSnapshotUncheckedCreateInput>
  }

  /**
   * ProductSKUSnapshot createMany
   */
  export type ProductSKUSnapshotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductSKUSnapshots.
     */
    data: ProductSKUSnapshotCreateManyInput | ProductSKUSnapshotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductSKUSnapshot createManyAndReturn
   */
  export type ProductSKUSnapshotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * The data used to create many ProductSKUSnapshots.
     */
    data: ProductSKUSnapshotCreateManyInput | ProductSKUSnapshotCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSKUSnapshot update
   */
  export type ProductSKUSnapshotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductSKUSnapshot.
     */
    data: XOR<ProductSKUSnapshotUpdateInput, ProductSKUSnapshotUncheckedUpdateInput>
    /**
     * Choose, which ProductSKUSnapshot to update.
     */
    where: ProductSKUSnapshotWhereUniqueInput
  }

  /**
   * ProductSKUSnapshot updateMany
   */
  export type ProductSKUSnapshotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductSKUSnapshots.
     */
    data: XOR<ProductSKUSnapshotUpdateManyMutationInput, ProductSKUSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which ProductSKUSnapshots to update
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * Limit how many ProductSKUSnapshots to update.
     */
    limit?: number
  }

  /**
   * ProductSKUSnapshot updateManyAndReturn
   */
  export type ProductSKUSnapshotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * The data used to update ProductSKUSnapshots.
     */
    data: XOR<ProductSKUSnapshotUpdateManyMutationInput, ProductSKUSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which ProductSKUSnapshots to update
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * Limit how many ProductSKUSnapshots to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSKUSnapshot upsert
   */
  export type ProductSKUSnapshotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductSKUSnapshot to update in case it exists.
     */
    where: ProductSKUSnapshotWhereUniqueInput
    /**
     * In case the ProductSKUSnapshot found by the `where` argument doesn't exist, create a new ProductSKUSnapshot with this data.
     */
    create: XOR<ProductSKUSnapshotCreateInput, ProductSKUSnapshotUncheckedCreateInput>
    /**
     * In case the ProductSKUSnapshot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductSKUSnapshotUpdateInput, ProductSKUSnapshotUncheckedUpdateInput>
  }

  /**
   * ProductSKUSnapshot delete
   */
  export type ProductSKUSnapshotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    /**
     * Filter which ProductSKUSnapshot to delete.
     */
    where: ProductSKUSnapshotWhereUniqueInput
  }

  /**
   * ProductSKUSnapshot deleteMany
   */
  export type ProductSKUSnapshotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSKUSnapshots to delete
     */
    where?: ProductSKUSnapshotWhereInput
    /**
     * Limit how many ProductSKUSnapshots to delete.
     */
    limit?: number
  }

  /**
   * ProductSKUSnapshot.sku
   */
  export type ProductSKUSnapshot$skuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SKU
     */
    select?: SKUSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SKU
     */
    omit?: SKUOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SKUInclude<ExtArgs> | null
    where?: SKUWhereInput
  }

  /**
   * ProductSKUSnapshot.order
   */
  export type ProductSKUSnapshot$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * ProductSKUSnapshot without action
   */
  export type ProductSKUSnapshotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type OrderSumAggregateOutputType = {
    id: number | null
    userId: number | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: number | null
    userId: number | null
    status: $Enums.OrderStatus | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    status: $Enums.OrderStatus | null
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    userId: number
    status: number
    createdById: number
    updatedById: number
    deletedById: number
    deletedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    id?: true
    userId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type OrderSumAggregateInputType = {
    id?: true
    userId?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    userId?: true
    status?: true
    createdById?: true
    updatedById?: true
    deletedById?: true
    deletedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: number
    userId: number
    status: $Enums.OrderStatus
    createdById: number | null
    updatedById: number | null
    deletedById: number | null
    deletedAt: Date | null
    createdAt: Date
    updatedAt: Date
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    userId?: boolean
    status?: boolean
    createdById?: boolean
    updatedById?: boolean
    deletedById?: boolean
    deletedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "status" | "createdById" | "updatedById" | "deletedById" | "deletedAt" | "createdAt" | "updatedAt", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    createdBy?: boolean | Order$createdByArgs<ExtArgs>
    updatedBy?: boolean | Order$updatedByArgs<ExtArgs>
    deletedBy?: boolean | Order$deletedByArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      items: Prisma.$ProductSKUSnapshotPayload<ExtArgs>[]
      createdBy: Prisma.$UserPayload<ExtArgs> | null
      updatedBy: Prisma.$UserPayload<ExtArgs> | null
      deletedBy: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      status: $Enums.OrderStatus
      createdById: number | null
      updatedById: number | null
      deletedById: number | null
      deletedAt: Date | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    items<T extends Order$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSKUSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdBy<T extends Order$createdByArgs<ExtArgs> = {}>(args?: Subset<T, Order$createdByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    updatedBy<T extends Order$updatedByArgs<ExtArgs> = {}>(args?: Subset<T, Order$updatedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    deletedBy<T extends Order$deletedByArgs<ExtArgs> = {}>(args?: Subset<T, Order$deletedByArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'Int'>
    readonly userId: FieldRef<"Order", 'Int'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly createdById: FieldRef<"Order", 'Int'>
    readonly updatedById: FieldRef<"Order", 'Int'>
    readonly deletedById: FieldRef<"Order", 'Int'>
    readonly deletedAt: FieldRef<"Order", 'DateTime'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.items
   */
  export type Order$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSKUSnapshot
     */
    select?: ProductSKUSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSKUSnapshot
     */
    omit?: ProductSKUSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSKUSnapshotInclude<ExtArgs> | null
    where?: ProductSKUSnapshotWhereInput
    orderBy?: ProductSKUSnapshotOrderByWithRelationInput | ProductSKUSnapshotOrderByWithRelationInput[]
    cursor?: ProductSKUSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductSKUSnapshotScalarFieldEnum | ProductSKUSnapshotScalarFieldEnum[]
  }

  /**
   * Order.createdBy
   */
  export type Order$createdByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.updatedBy
   */
  export type Order$updatedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.deletedBy
   */
  export type Order$deletedByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    id: number | null
    rating: number | null
    productId: number | null
    userId: number | null
  }

  export type ReviewSumAggregateOutputType = {
    id: number | null
    rating: number | null
    productId: number | null
    userId: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: number | null
    content: string | null
    rating: number | null
    productId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: number | null
    content: string | null
    rating: number | null
    productId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    content: number
    rating: number
    productId: number
    userId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    id?: true
    rating?: true
    productId?: true
    userId?: true
  }

  export type ReviewSumAggregateInputType = {
    id?: true
    rating?: true
    productId?: true
    userId?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    content?: true
    rating?: true
    productId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    content?: true
    rating?: true
    productId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    content?: true
    rating?: true
    productId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: number
    content: string
    rating: number
    productId: number
    userId: number
    createdAt: Date
    updatedAt: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    rating?: boolean
    productId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    rating?: boolean
    productId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    rating?: boolean
    productId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    content?: boolean
    rating?: boolean
    productId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "rating" | "productId" | "userId" | "createdAt" | "updatedAt", ExtArgs["result"]["review"]>
  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type ReviewIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      rating: number
      productId: number
      userId: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews and returns the data updated in the database.
     * @param {ReviewUpdateManyAndReturnArgs} args - Arguments to update many Reviews.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReviewUpdateManyAndReturnArgs>(args: SelectSubset<T, ReviewUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'Int'>
    readonly content: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly productId: FieldRef<"Review", 'Int'>
    readonly userId: FieldRef<"Review", 'Int'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
  }

  /**
   * Review updateManyAndReturn
   */
  export type ReviewUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
    /**
     * Limit how many Reviews to delete.
     */
    limit?: number
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Review
     */
    omit?: ReviewOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model PaymentTransaction
   */

  export type AggregatePaymentTransaction = {
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  export type PaymentTransactionAvgAggregateOutputType = {
    id: number | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
  }

  export type PaymentTransactionSumAggregateOutputType = {
    id: number | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
  }

  export type PaymentTransactionMinAggregateOutputType = {
    id: number | null
    gateway: string | null
    transactionDate: Date | null
    accountNumber: string | null
    subAccount: string | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
    code: string | null
    transactionContent: string | null
    referenceNumber: string | null
    body: string | null
    createdAt: Date | null
  }

  export type PaymentTransactionMaxAggregateOutputType = {
    id: number | null
    gateway: string | null
    transactionDate: Date | null
    accountNumber: string | null
    subAccount: string | null
    amountIn: number | null
    amountOut: number | null
    accumulated: number | null
    code: string | null
    transactionContent: string | null
    referenceNumber: string | null
    body: string | null
    createdAt: Date | null
  }

  export type PaymentTransactionCountAggregateOutputType = {
    id: number
    gateway: number
    transactionDate: number
    accountNumber: number
    subAccount: number
    amountIn: number
    amountOut: number
    accumulated: number
    code: number
    transactionContent: number
    referenceNumber: number
    body: number
    createdAt: number
    _all: number
  }


  export type PaymentTransactionAvgAggregateInputType = {
    id?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
  }

  export type PaymentTransactionSumAggregateInputType = {
    id?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
  }

  export type PaymentTransactionMinAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    code?: true
    transactionContent?: true
    referenceNumber?: true
    body?: true
    createdAt?: true
  }

  export type PaymentTransactionMaxAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    code?: true
    transactionContent?: true
    referenceNumber?: true
    body?: true
    createdAt?: true
  }

  export type PaymentTransactionCountAggregateInputType = {
    id?: true
    gateway?: true
    transactionDate?: true
    accountNumber?: true
    subAccount?: true
    amountIn?: true
    amountOut?: true
    accumulated?: true
    code?: true
    transactionContent?: true
    referenceNumber?: true
    body?: true
    createdAt?: true
    _all?: true
  }

  export type PaymentTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransaction to aggregate.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentTransactions
    **/
    _count?: true | PaymentTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type GetPaymentTransactionAggregateType<T extends PaymentTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentTransaction[P]>
      : GetScalarType<T[P], AggregatePaymentTransaction[P]>
  }




  export type PaymentTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithAggregationInput | PaymentTransactionOrderByWithAggregationInput[]
    by: PaymentTransactionScalarFieldEnum[] | PaymentTransactionScalarFieldEnum
    having?: PaymentTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentTransactionCountAggregateInputType | true
    _avg?: PaymentTransactionAvgAggregateInputType
    _sum?: PaymentTransactionSumAggregateInputType
    _min?: PaymentTransactionMinAggregateInputType
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type PaymentTransactionGroupByOutputType = {
    id: number
    gateway: string
    transactionDate: Date
    accountNumber: string
    subAccount: string | null
    amountIn: number
    amountOut: number
    accumulated: number
    code: string | null
    transactionContent: string | null
    referenceNumber: string | null
    body: string | null
    createdAt: Date
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  type GetPaymentTransactionGroupByPayload<T extends PaymentTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
        }
      >
    >


  export type PaymentTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    code?: boolean
    transactionContent?: boolean
    referenceNumber?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    code?: boolean
    transactionContent?: boolean
    referenceNumber?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    code?: boolean
    transactionContent?: boolean
    referenceNumber?: boolean
    body?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["paymentTransaction"]>

  export type PaymentTransactionSelectScalar = {
    id?: boolean
    gateway?: boolean
    transactionDate?: boolean
    accountNumber?: boolean
    subAccount?: boolean
    amountIn?: boolean
    amountOut?: boolean
    accumulated?: boolean
    code?: boolean
    transactionContent?: boolean
    referenceNumber?: boolean
    body?: boolean
    createdAt?: boolean
  }

  export type PaymentTransactionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "gateway" | "transactionDate" | "accountNumber" | "subAccount" | "amountIn" | "amountOut" | "accumulated" | "code" | "transactionContent" | "referenceNumber" | "body" | "createdAt", ExtArgs["result"]["paymentTransaction"]>

  export type $PaymentTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentTransaction"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      gateway: string
      transactionDate: Date
      accountNumber: string
      subAccount: string | null
      amountIn: number
      amountOut: number
      accumulated: number
      code: string | null
      transactionContent: string | null
      referenceNumber: string | null
      body: string | null
      createdAt: Date
    }, ExtArgs["result"]["paymentTransaction"]>
    composites: {}
  }

  type PaymentTransactionGetPayload<S extends boolean | null | undefined | PaymentTransactionDefaultArgs> = $Result.GetResult<Prisma.$PaymentTransactionPayload, S>

  type PaymentTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentTransactionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentTransactionCountAggregateInputType | true
    }

  export interface PaymentTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentTransaction'], meta: { name: 'PaymentTransaction' } }
    /**
     * Find zero or one PaymentTransaction that matches the filter.
     * @param {PaymentTransactionFindUniqueArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentTransactionFindUniqueArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentTransaction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentTransactionFindUniqueOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentTransactionFindFirstArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany()
     * 
     * // Get first 10 PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentTransactionFindManyArgs>(args?: SelectSubset<T, PaymentTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentTransaction.
     * @param {PaymentTransactionCreateArgs} args - Arguments to create a PaymentTransaction.
     * @example
     * // Create one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.create({
     *   data: {
     *     // ... data to create a PaymentTransaction
     *   }
     * })
     * 
     */
    create<T extends PaymentTransactionCreateArgs>(args: SelectSubset<T, PaymentTransactionCreateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentTransactions.
     * @param {PaymentTransactionCreateManyArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentTransactionCreateManyArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentTransactions and returns the data saved in the database.
     * @param {PaymentTransactionCreateManyAndReturnArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentTransactions and only return the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentTransactionCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentTransaction.
     * @param {PaymentTransactionDeleteArgs} args - Arguments to delete one PaymentTransaction.
     * @example
     * // Delete one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.delete({
     *   where: {
     *     // ... filter to delete one PaymentTransaction
     *   }
     * })
     * 
     */
    delete<T extends PaymentTransactionDeleteArgs>(args: SelectSubset<T, PaymentTransactionDeleteArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentTransaction.
     * @param {PaymentTransactionUpdateArgs} args - Arguments to update one PaymentTransaction.
     * @example
     * // Update one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentTransactionUpdateArgs>(args: SelectSubset<T, PaymentTransactionUpdateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentTransactions.
     * @param {PaymentTransactionDeleteManyArgs} args - Arguments to filter PaymentTransactions to delete.
     * @example
     * // Delete a few PaymentTransactions
     * const { count } = await prisma.paymentTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentTransactionDeleteManyArgs>(args?: SelectSubset<T, PaymentTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentTransactionUpdateManyArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions and returns the data updated in the database.
     * @param {PaymentTransactionUpdateManyAndReturnArgs} args - Arguments to update many PaymentTransactions.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentTransactions and only return the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentTransactionUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentTransaction.
     * @param {PaymentTransactionUpsertArgs} args - Arguments to update or create a PaymentTransaction.
     * @example
     * // Update or create a PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.upsert({
     *   create: {
     *     // ... data to create a PaymentTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentTransaction we want to update
     *   }
     * })
     */
    upsert<T extends PaymentTransactionUpsertArgs>(args: SelectSubset<T, PaymentTransactionUpsertArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionCountArgs} args - Arguments to filter PaymentTransactions to count.
     * @example
     * // Count the number of PaymentTransactions
     * const count = await prisma.paymentTransaction.count({
     *   where: {
     *     // ... the filter for the PaymentTransactions we want to count
     *   }
     * })
    **/
    count<T extends PaymentTransactionCountArgs>(
      args?: Subset<T, PaymentTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentTransactionAggregateArgs>(args: Subset<T, PaymentTransactionAggregateArgs>): Prisma.PrismaPromise<GetPaymentTransactionAggregateType<T>>

    /**
     * Group by PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentTransactionGroupByArgs['orderBy'] }
        : { orderBy?: PaymentTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentTransaction model
   */
  readonly fields: PaymentTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentTransaction model
   */
  interface PaymentTransactionFieldRefs {
    readonly id: FieldRef<"PaymentTransaction", 'Int'>
    readonly gateway: FieldRef<"PaymentTransaction", 'String'>
    readonly transactionDate: FieldRef<"PaymentTransaction", 'DateTime'>
    readonly accountNumber: FieldRef<"PaymentTransaction", 'String'>
    readonly subAccount: FieldRef<"PaymentTransaction", 'String'>
    readonly amountIn: FieldRef<"PaymentTransaction", 'Int'>
    readonly amountOut: FieldRef<"PaymentTransaction", 'Int'>
    readonly accumulated: FieldRef<"PaymentTransaction", 'Int'>
    readonly code: FieldRef<"PaymentTransaction", 'String'>
    readonly transactionContent: FieldRef<"PaymentTransaction", 'String'>
    readonly referenceNumber: FieldRef<"PaymentTransaction", 'String'>
    readonly body: FieldRef<"PaymentTransaction", 'String'>
    readonly createdAt: FieldRef<"PaymentTransaction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PaymentTransaction findUnique
   */
  export type PaymentTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findUniqueOrThrow
   */
  export type PaymentTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findFirst
   */
  export type PaymentTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findFirstOrThrow
   */
  export type PaymentTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findMany
   */
  export type PaymentTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter, which PaymentTransactions to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction create
   */
  export type PaymentTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data needed to create a PaymentTransaction.
     */
    data: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
  }

  /**
   * PaymentTransaction createMany
   */
  export type PaymentTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction createManyAndReturn
   */
  export type PaymentTransactionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction update
   */
  export type PaymentTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data needed to update a PaymentTransaction.
     */
    data: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
    /**
     * Choose, which PaymentTransaction to update.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction updateMany
   */
  export type PaymentTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to update.
     */
    limit?: number
  }

  /**
   * PaymentTransaction updateManyAndReturn
   */
  export type PaymentTransactionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to update.
     */
    limit?: number
  }

  /**
   * PaymentTransaction upsert
   */
  export type PaymentTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * The filter to search for the PaymentTransaction to update in case it exists.
     */
    where: PaymentTransactionWhereUniqueInput
    /**
     * In case the PaymentTransaction found by the `where` argument doesn't exist, create a new PaymentTransaction with this data.
     */
    create: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
    /**
     * In case the PaymentTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
  }

  /**
   * PaymentTransaction delete
   */
  export type PaymentTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
    /**
     * Filter which PaymentTransaction to delete.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction deleteMany
   */
  export type PaymentTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransactions to delete
     */
    where?: PaymentTransactionWhereInput
    /**
     * Limit how many PaymentTransactions to delete.
     */
    limit?: number
  }

  /**
   * PaymentTransaction without action
   */
  export type PaymentTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentTransaction
     */
    omit?: PaymentTransactionOmit<ExtArgs> | null
  }


  /**
   * Model Message
   */

  export type AggregateMessage = {
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  export type MessageAvgAggregateOutputType = {
    id: number | null
    fromUserId: number | null
    toUserId: number | null
  }

  export type MessageSumAggregateOutputType = {
    id: number | null
    fromUserId: number | null
    toUserId: number | null
  }

  export type MessageMinAggregateOutputType = {
    id: number | null
    fromUserId: number | null
    toUserId: number | null
    content: string | null
    readAt: Date | null
    createdAt: Date | null
  }

  export type MessageMaxAggregateOutputType = {
    id: number | null
    fromUserId: number | null
    toUserId: number | null
    content: string | null
    readAt: Date | null
    createdAt: Date | null
  }

  export type MessageCountAggregateOutputType = {
    id: number
    fromUserId: number
    toUserId: number
    content: number
    readAt: number
    createdAt: number
    _all: number
  }


  export type MessageAvgAggregateInputType = {
    id?: true
    fromUserId?: true
    toUserId?: true
  }

  export type MessageSumAggregateInputType = {
    id?: true
    fromUserId?: true
    toUserId?: true
  }

  export type MessageMinAggregateInputType = {
    id?: true
    fromUserId?: true
    toUserId?: true
    content?: true
    readAt?: true
    createdAt?: true
  }

  export type MessageMaxAggregateInputType = {
    id?: true
    fromUserId?: true
    toUserId?: true
    content?: true
    readAt?: true
    createdAt?: true
  }

  export type MessageCountAggregateInputType = {
    id?: true
    fromUserId?: true
    toUserId?: true
    content?: true
    readAt?: true
    createdAt?: true
    _all?: true
  }

  export type MessageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Message to aggregate.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessageMaxAggregateInputType
  }

  export type GetMessageAggregateType<T extends MessageAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage[P]>
      : GetScalarType<T[P], AggregateMessage[P]>
  }




  export type MessageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MessageWhereInput
    orderBy?: MessageOrderByWithAggregationInput | MessageOrderByWithAggregationInput[]
    by: MessageScalarFieldEnum[] | MessageScalarFieldEnum
    having?: MessageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessageCountAggregateInputType | true
    _avg?: MessageAvgAggregateInputType
    _sum?: MessageSumAggregateInputType
    _min?: MessageMinAggregateInputType
    _max?: MessageMaxAggregateInputType
  }

  export type MessageGroupByOutputType = {
    id: number
    fromUserId: number
    toUserId: number
    content: string
    readAt: Date | null
    createdAt: Date
    _count: MessageCountAggregateOutputType | null
    _avg: MessageAvgAggregateOutputType | null
    _sum: MessageSumAggregateOutputType | null
    _min: MessageMinAggregateOutputType | null
    _max: MessageMaxAggregateOutputType | null
  }

  type GetMessageGroupByPayload<T extends MessageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessageGroupByOutputType[P]>
            : GetScalarType<T[P], MessageGroupByOutputType[P]>
        }
      >
    >


  export type MessageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromUserId?: boolean
    toUserId?: boolean
    content?: boolean
    readAt?: boolean
    createdAt?: boolean
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromUserId?: boolean
    toUserId?: boolean
    content?: boolean
    readAt?: boolean
    createdAt?: boolean
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fromUserId?: boolean
    toUserId?: boolean
    content?: boolean
    readAt?: boolean
    createdAt?: boolean
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message"]>

  export type MessageSelectScalar = {
    id?: boolean
    fromUserId?: boolean
    toUserId?: boolean
    content?: boolean
    readAt?: boolean
    createdAt?: boolean
  }

  export type MessageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "fromUserId" | "toUserId" | "content" | "readAt" | "createdAt", ExtArgs["result"]["message"]>
  export type MessageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MessageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fromUser?: boolean | UserDefaultArgs<ExtArgs>
    toUser?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MessagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Message"
    objects: {
      fromUser: Prisma.$UserPayload<ExtArgs>
      toUser: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      fromUserId: number
      toUserId: number
      content: string
      readAt: Date | null
      createdAt: Date
    }, ExtArgs["result"]["message"]>
    composites: {}
  }

  type MessageGetPayload<S extends boolean | null | undefined | MessageDefaultArgs> = $Result.GetResult<Prisma.$MessagePayload, S>

  type MessageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MessageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessageCountAggregateInputType | true
    }

  export interface MessageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Message'], meta: { name: 'Message' } }
    /**
     * Find zero or one Message that matches the filter.
     * @param {MessageFindUniqueArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MessageFindUniqueArgs>(args: SelectSubset<T, MessageFindUniqueArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MessageFindUniqueOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MessageFindUniqueOrThrowArgs>(args: SelectSubset<T, MessageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MessageFindFirstArgs>(args?: SelectSubset<T, MessageFindFirstArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindFirstOrThrowArgs} args - Arguments to find a Message
     * @example
     * // Get one Message
     * const message = await prisma.message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MessageFindFirstOrThrowArgs>(args?: SelectSubset<T, MessageFindFirstOrThrowArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.message.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messageWithIdOnly = await prisma.message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MessageFindManyArgs>(args?: SelectSubset<T, MessageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message.
     * @param {MessageCreateArgs} args - Arguments to create a Message.
     * @example
     * // Create one Message
     * const Message = await prisma.message.create({
     *   data: {
     *     // ... data to create a Message
     *   }
     * })
     * 
     */
    create<T extends MessageCreateArgs>(args: SelectSubset<T, MessageCreateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {MessageCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MessageCreateManyArgs>(args?: SelectSubset<T, MessageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {MessageCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const message = await prisma.message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MessageCreateManyAndReturnArgs>(args?: SelectSubset<T, MessageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message.
     * @param {MessageDeleteArgs} args - Arguments to delete one Message.
     * @example
     * // Delete one Message
     * const Message = await prisma.message.delete({
     *   where: {
     *     // ... filter to delete one Message
     *   }
     * })
     * 
     */
    delete<T extends MessageDeleteArgs>(args: SelectSubset<T, MessageDeleteArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message.
     * @param {MessageUpdateArgs} args - Arguments to update one Message.
     * @example
     * // Update one Message
     * const message = await prisma.message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MessageUpdateArgs>(args: SelectSubset<T, MessageUpdateArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {MessageDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MessageDeleteManyArgs>(args?: SelectSubset<T, MessageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MessageUpdateManyArgs>(args: SelectSubset<T, MessageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {MessageUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const message = await prisma.message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messageWithIdOnly = await prisma.message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MessageUpdateManyAndReturnArgs>(args: SelectSubset<T, MessageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message.
     * @param {MessageUpsertArgs} args - Arguments to update or create a Message.
     * @example
     * // Update or create a Message
     * const message = await prisma.message.upsert({
     *   create: {
     *     // ... data to create a Message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message we want to update
     *   }
     * })
     */
    upsert<T extends MessageUpsertArgs>(args: SelectSubset<T, MessageUpsertArgs<ExtArgs>>): Prisma__MessageClient<$Result.GetResult<Prisma.$MessagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.message.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessageCountArgs>(
      args?: Subset<T, MessageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessageAggregateArgs>(args: Subset<T, MessageAggregateArgs>): Prisma.PrismaPromise<GetMessageAggregateType<T>>

    /**
     * Group by Message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessageGroupByArgs['orderBy'] }
        : { orderBy?: MessageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Message model
   */
  readonly fields: MessageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MessageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fromUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    toUser<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Message model
   */
  interface MessageFieldRefs {
    readonly id: FieldRef<"Message", 'Int'>
    readonly fromUserId: FieldRef<"Message", 'Int'>
    readonly toUserId: FieldRef<"Message", 'Int'>
    readonly content: FieldRef<"Message", 'String'>
    readonly readAt: FieldRef<"Message", 'DateTime'>
    readonly createdAt: FieldRef<"Message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Message findUnique
   */
  export type MessageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findUniqueOrThrow
   */
  export type MessageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message findFirst
   */
  export type MessageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findFirstOrThrow
   */
  export type MessageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Message to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     */
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message findMany
   */
  export type MessageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter, which Messages to fetch.
     */
    where?: MessageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     */
    orderBy?: MessageOrderByWithRelationInput | MessageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     */
    cursor?: MessageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     */
    skip?: number
    distinct?: MessageScalarFieldEnum | MessageScalarFieldEnum[]
  }

  /**
   * Message create
   */
  export type MessageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to create a Message.
     */
    data: XOR<MessageCreateInput, MessageUncheckedCreateInput>
  }

  /**
   * Message createMany
   */
  export type MessageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Message createManyAndReturn
   */
  export type MessageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to create many Messages.
     */
    data: MessageCreateManyInput | MessageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message update
   */
  export type MessageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The data needed to update a Message.
     */
    data: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
    /**
     * Choose, which Message to update.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message updateMany
   */
  export type MessageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
  }

  /**
   * Message updateManyAndReturn
   */
  export type MessageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * The data used to update Messages.
     */
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Message upsert
   */
  export type MessageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * The filter to search for the Message to update in case it exists.
     */
    where: MessageWhereUniqueInput
    /**
     * In case the Message found by the `where` argument doesn't exist, create a new Message with this data.
     */
    create: XOR<MessageCreateInput, MessageUncheckedCreateInput>
    /**
     * In case the Message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MessageUpdateInput, MessageUncheckedUpdateInput>
  }

  /**
   * Message delete
   */
  export type MessageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
    /**
     * Filter which Message to delete.
     */
    where: MessageWhereUniqueInput
  }

  /**
   * Message deleteMany
   */
  export type MessageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Messages to delete
     */
    where?: MessageWhereInput
    /**
     * Limit how many Messages to delete.
     */
    limit?: number
  }

  /**
   * Message without action
   */
  export type MessageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Message
     */
    select?: MessageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Message
     */
    omit?: MessageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MessageInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const LanguageScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type LanguageScalarFieldEnum = (typeof LanguageScalarFieldEnum)[keyof typeof LanguageScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    password: 'password',
    phoneNumber: 'phoneNumber',
    avatar: 'avatar',
    totpSecret: 'totpSecret',
    status: 'status',
    roleId: 'roleId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserTranslationScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    languageId: 'languageId',
    address: 'address',
    description: 'description',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserTranslationScalarFieldEnum = (typeof UserTranslationScalarFieldEnum)[keyof typeof UserTranslationScalarFieldEnum]


  export const VerificationCodeScalarFieldEnum: {
    id: 'id',
    email: 'email',
    code: 'code',
    type: 'type',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type VerificationCodeScalarFieldEnum = (typeof VerificationCodeScalarFieldEnum)[keyof typeof VerificationCodeScalarFieldEnum]


  export const DeviceScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    userAgent: 'userAgent',
    ip: 'ip',
    lastActive: 'lastActive',
    createdAt: 'createdAt',
    isActive: 'isActive'
  };

  export type DeviceScalarFieldEnum = (typeof DeviceScalarFieldEnum)[keyof typeof DeviceScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    token: 'token',
    userId: 'userId',
    deviceId: 'deviceId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const PermissionScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    path: 'path',
    method: 'method',
    module: 'module',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PermissionScalarFieldEnum = (typeof PermissionScalarFieldEnum)[keyof typeof PermissionScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    isActive: 'isActive',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    base_price: 'base_price',
    virtual_price: 'virtual_price',
    brandId: 'brandId',
    images: 'images',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductTranslationScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductTranslationScalarFieldEnum = (typeof ProductTranslationScalarFieldEnum)[keyof typeof ProductTranslationScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    parentCategoryId: 'parentCategoryId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const CategoryTranslationScalarFieldEnum: {
    id: 'id',
    categoryId: 'categoryId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CategoryTranslationScalarFieldEnum = (typeof CategoryTranslationScalarFieldEnum)[keyof typeof CategoryTranslationScalarFieldEnum]


  export const VariantScalarFieldEnum: {
    id: 'id',
    name: 'name',
    productId: 'productId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VariantScalarFieldEnum = (typeof VariantScalarFieldEnum)[keyof typeof VariantScalarFieldEnum]


  export const VariantOptionScalarFieldEnum: {
    id: 'id',
    value: 'value',
    variantId: 'variantId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VariantOptionScalarFieldEnum = (typeof VariantOptionScalarFieldEnum)[keyof typeof VariantOptionScalarFieldEnum]


  export const SKUScalarFieldEnum: {
    id: 'id',
    value: 'value',
    price: 'price',
    stock: 'stock',
    images: 'images',
    productId: 'productId',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SKUScalarFieldEnum = (typeof SKUScalarFieldEnum)[keyof typeof SKUScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    logo: 'logo',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const BrandTranslationScalarFieldEnum: {
    id: 'id',
    brandId: 'brandId',
    languageId: 'languageId',
    name: 'name',
    description: 'description',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BrandTranslationScalarFieldEnum = (typeof BrandTranslationScalarFieldEnum)[keyof typeof BrandTranslationScalarFieldEnum]


  export const CartItemScalarFieldEnum: {
    id: 'id',
    quantity: 'quantity',
    skuId: 'skuId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CartItemScalarFieldEnum = (typeof CartItemScalarFieldEnum)[keyof typeof CartItemScalarFieldEnum]


  export const ProductSKUSnapshotScalarFieldEnum: {
    id: 'id',
    productName: 'productName',
    price: 'price',
    images: 'images',
    skuValue: 'skuValue',
    skuId: 'skuId',
    orderId: 'orderId',
    createdAt: 'createdAt'
  };

  export type ProductSKUSnapshotScalarFieldEnum = (typeof ProductSKUSnapshotScalarFieldEnum)[keyof typeof ProductSKUSnapshotScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    status: 'status',
    createdById: 'createdById',
    updatedById: 'updatedById',
    deletedById: 'deletedById',
    deletedAt: 'deletedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    content: 'content',
    rating: 'rating',
    productId: 'productId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const PaymentTransactionScalarFieldEnum: {
    id: 'id',
    gateway: 'gateway',
    transactionDate: 'transactionDate',
    accountNumber: 'accountNumber',
    subAccount: 'subAccount',
    amountIn: 'amountIn',
    amountOut: 'amountOut',
    accumulated: 'accumulated',
    code: 'code',
    transactionContent: 'transactionContent',
    referenceNumber: 'referenceNumber',
    body: 'body',
    createdAt: 'createdAt'
  };

  export type PaymentTransactionScalarFieldEnum = (typeof PaymentTransactionScalarFieldEnum)[keyof typeof PaymentTransactionScalarFieldEnum]


  export const MessageScalarFieldEnum: {
    id: 'id',
    fromUserId: 'fromUserId',
    toUserId: 'toUserId',
    content: 'content',
    readAt: 'readAt',
    createdAt: 'createdAt'
  };

  export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'VerificationCodeType'
   */
  export type EnumVerificationCodeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationCodeType'>
    


  /**
   * Reference to a field of type 'VerificationCodeType[]'
   */
  export type ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VerificationCodeType[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'HTTPMethod'
   */
  export type EnumHTTPMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HTTPMethod'>
    


  /**
   * Reference to a field of type 'HTTPMethod[]'
   */
  export type ListEnumHTTPMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'HTTPMethod[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type LanguageWhereInput = {
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
    id?: StringFilter<"Language"> | string
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
    userTranslations?: UserTranslationListRelationFilter
    productTranslations?: ProductTranslationListRelationFilter
    categoryTranslations?: CategoryTranslationListRelationFilter
    brandTranslations?: BrandTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type LanguageOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    userTranslations?: UserTranslationOrderByRelationAggregateInput
    productTranslations?: ProductTranslationOrderByRelationAggregateInput
    categoryTranslations?: CategoryTranslationOrderByRelationAggregateInput
    brandTranslations?: BrandTranslationOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type LanguageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LanguageWhereInput | LanguageWhereInput[]
    OR?: LanguageWhereInput[]
    NOT?: LanguageWhereInput | LanguageWhereInput[]
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
    userTranslations?: UserTranslationListRelationFilter
    productTranslations?: ProductTranslationListRelationFilter
    categoryTranslations?: CategoryTranslationListRelationFilter
    brandTranslations?: BrandTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type LanguageOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: LanguageCountOrderByAggregateInput
    _avg?: LanguageAvgOrderByAggregateInput
    _max?: LanguageMaxOrderByAggregateInput
    _min?: LanguageMinOrderByAggregateInput
    _sum?: LanguageSumOrderByAggregateInput
  }

  export type LanguageScalarWhereWithAggregatesInput = {
    AND?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    OR?: LanguageScalarWhereWithAggregatesInput[]
    NOT?: LanguageScalarWhereWithAggregatesInput | LanguageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Language"> | string
    name?: StringWithAggregatesFilter<"Language"> | string
    createdById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Language"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Language"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Language"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    roleId?: IntFilter<"User"> | number
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    devices?: DeviceListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    carts?: CartItemListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
    createdPermissions?: PermissionListRelationFilter
    updatedPermissions?: PermissionListRelationFilter
    deletedPermissions?: PermissionListRelationFilter
    createdRoles?: RoleListRelationFilter
    updatedRoles?: RoleListRelationFilter
    deletedRoles?: RoleListRelationFilter
    createdProducts?: ProductListRelationFilter
    updatedProducts?: ProductListRelationFilter
    deletedProducts?: ProductListRelationFilter
    createdCategories?: CategoryListRelationFilter
    updatedCategories?: CategoryListRelationFilter
    deletedCategories?: CategoryListRelationFilter
    createdVariants?: VariantListRelationFilter
    updatedVariants?: VariantListRelationFilter
    deletedVariants?: VariantListRelationFilter
    createdVariantOptions?: VariantOptionListRelationFilter
    updatedVariantOptions?: VariantOptionListRelationFilter
    deletedVariantOptions?: VariantOptionListRelationFilter
    createdSKUS?: SKUListRelationFilter
    updatedSKUS?: SKUListRelationFilter
    deletedSKUS?: SKUListRelationFilter
    createdLanguages?: LanguageListRelationFilter
    updatedLanguages?: LanguageListRelationFilter
    deletedLanguages?: LanguageListRelationFilter
    createdBrands?: BrandListRelationFilter
    updatedBrands?: BrandListRelationFilter
    deletedBrands?: BrandListRelationFilter
    createdProductTranslations?: ProductTranslationListRelationFilter
    updatedProductTranslations?: ProductTranslationListRelationFilter
    deletedProductTranslations?: ProductTranslationListRelationFilter
    createdCategoryTranslations?: CategoryTranslationListRelationFilter
    updatedCategoryTranslations?: CategoryTranslationListRelationFilter
    deletedCategoryTranslations?: CategoryTranslationListRelationFilter
    createdBrandTranslations?: BrandTranslationListRelationFilter
    updatedBrandTranslations?: BrandTranslationListRelationFilter
    deletedBrandTranslations?: BrandTranslationListRelationFilter
    createdOrders?: OrderListRelationFilter
    updatedOrders?: OrderListRelationFilter
    deletedOrders?: OrderListRelationFilter
    createdUserTranslations?: UserTranslationListRelationFilter
    updatedUserTranslations?: UserTranslationListRelationFilter
    deletedUserTranslations?: UserTranslationListRelationFilter
    userTranslations?: UserTranslationListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdUsers?: UserListRelationFilter
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedUsers?: UserListRelationFilter
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedUsers?: UserListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    avatar?: SortOrderInput | SortOrder
    totpSecret?: SortOrderInput | SortOrder
    status?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    role?: RoleOrderByWithRelationInput
    devices?: DeviceOrderByRelationAggregateInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
    carts?: CartItemOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    createdPermissions?: PermissionOrderByRelationAggregateInput
    updatedPermissions?: PermissionOrderByRelationAggregateInput
    deletedPermissions?: PermissionOrderByRelationAggregateInput
    createdRoles?: RoleOrderByRelationAggregateInput
    updatedRoles?: RoleOrderByRelationAggregateInput
    deletedRoles?: RoleOrderByRelationAggregateInput
    createdProducts?: ProductOrderByRelationAggregateInput
    updatedProducts?: ProductOrderByRelationAggregateInput
    deletedProducts?: ProductOrderByRelationAggregateInput
    createdCategories?: CategoryOrderByRelationAggregateInput
    updatedCategories?: CategoryOrderByRelationAggregateInput
    deletedCategories?: CategoryOrderByRelationAggregateInput
    createdVariants?: VariantOrderByRelationAggregateInput
    updatedVariants?: VariantOrderByRelationAggregateInput
    deletedVariants?: VariantOrderByRelationAggregateInput
    createdVariantOptions?: VariantOptionOrderByRelationAggregateInput
    updatedVariantOptions?: VariantOptionOrderByRelationAggregateInput
    deletedVariantOptions?: VariantOptionOrderByRelationAggregateInput
    createdSKUS?: SKUOrderByRelationAggregateInput
    updatedSKUS?: SKUOrderByRelationAggregateInput
    deletedSKUS?: SKUOrderByRelationAggregateInput
    createdLanguages?: LanguageOrderByRelationAggregateInput
    updatedLanguages?: LanguageOrderByRelationAggregateInput
    deletedLanguages?: LanguageOrderByRelationAggregateInput
    createdBrands?: BrandOrderByRelationAggregateInput
    updatedBrands?: BrandOrderByRelationAggregateInput
    deletedBrands?: BrandOrderByRelationAggregateInput
    createdProductTranslations?: ProductTranslationOrderByRelationAggregateInput
    updatedProductTranslations?: ProductTranslationOrderByRelationAggregateInput
    deletedProductTranslations?: ProductTranslationOrderByRelationAggregateInput
    createdCategoryTranslations?: CategoryTranslationOrderByRelationAggregateInput
    updatedCategoryTranslations?: CategoryTranslationOrderByRelationAggregateInput
    deletedCategoryTranslations?: CategoryTranslationOrderByRelationAggregateInput
    createdBrandTranslations?: BrandTranslationOrderByRelationAggregateInput
    updatedBrandTranslations?: BrandTranslationOrderByRelationAggregateInput
    deletedBrandTranslations?: BrandTranslationOrderByRelationAggregateInput
    createdOrders?: OrderOrderByRelationAggregateInput
    updatedOrders?: OrderOrderByRelationAggregateInput
    deletedOrders?: OrderOrderByRelationAggregateInput
    createdUserTranslations?: UserTranslationOrderByRelationAggregateInput
    updatedUserTranslations?: UserTranslationOrderByRelationAggregateInput
    deletedUserTranslations?: UserTranslationOrderByRelationAggregateInput
    userTranslations?: UserTranslationOrderByRelationAggregateInput
    sentMessages?: MessageOrderByRelationAggregateInput
    receivedMessages?: MessageOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    createdUsers?: UserOrderByRelationAggregateInput
    updatedBy?: UserOrderByWithRelationInput
    updatedUsers?: UserOrderByRelationAggregateInput
    deletedBy?: UserOrderByWithRelationInput
    deletedUsers?: UserOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    roleId?: IntFilter<"User"> | number
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    role?: XOR<RoleScalarRelationFilter, RoleWhereInput>
    devices?: DeviceListRelationFilter
    refreshTokens?: RefreshTokenListRelationFilter
    carts?: CartItemListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
    createdPermissions?: PermissionListRelationFilter
    updatedPermissions?: PermissionListRelationFilter
    deletedPermissions?: PermissionListRelationFilter
    createdRoles?: RoleListRelationFilter
    updatedRoles?: RoleListRelationFilter
    deletedRoles?: RoleListRelationFilter
    createdProducts?: ProductListRelationFilter
    updatedProducts?: ProductListRelationFilter
    deletedProducts?: ProductListRelationFilter
    createdCategories?: CategoryListRelationFilter
    updatedCategories?: CategoryListRelationFilter
    deletedCategories?: CategoryListRelationFilter
    createdVariants?: VariantListRelationFilter
    updatedVariants?: VariantListRelationFilter
    deletedVariants?: VariantListRelationFilter
    createdVariantOptions?: VariantOptionListRelationFilter
    updatedVariantOptions?: VariantOptionListRelationFilter
    deletedVariantOptions?: VariantOptionListRelationFilter
    createdSKUS?: SKUListRelationFilter
    updatedSKUS?: SKUListRelationFilter
    deletedSKUS?: SKUListRelationFilter
    createdLanguages?: LanguageListRelationFilter
    updatedLanguages?: LanguageListRelationFilter
    deletedLanguages?: LanguageListRelationFilter
    createdBrands?: BrandListRelationFilter
    updatedBrands?: BrandListRelationFilter
    deletedBrands?: BrandListRelationFilter
    createdProductTranslations?: ProductTranslationListRelationFilter
    updatedProductTranslations?: ProductTranslationListRelationFilter
    deletedProductTranslations?: ProductTranslationListRelationFilter
    createdCategoryTranslations?: CategoryTranslationListRelationFilter
    updatedCategoryTranslations?: CategoryTranslationListRelationFilter
    deletedCategoryTranslations?: CategoryTranslationListRelationFilter
    createdBrandTranslations?: BrandTranslationListRelationFilter
    updatedBrandTranslations?: BrandTranslationListRelationFilter
    deletedBrandTranslations?: BrandTranslationListRelationFilter
    createdOrders?: OrderListRelationFilter
    updatedOrders?: OrderListRelationFilter
    deletedOrders?: OrderListRelationFilter
    createdUserTranslations?: UserTranslationListRelationFilter
    updatedUserTranslations?: UserTranslationListRelationFilter
    deletedUserTranslations?: UserTranslationListRelationFilter
    userTranslations?: UserTranslationListRelationFilter
    sentMessages?: MessageListRelationFilter
    receivedMessages?: MessageListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    createdUsers?: UserListRelationFilter
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedUsers?: UserListRelationFilter
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedUsers?: UserListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    avatar?: SortOrderInput | SortOrder
    totpSecret?: SortOrderInput | SortOrder
    status?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    phoneNumber?: StringWithAggregatesFilter<"User"> | string
    avatar?: StringNullableWithAggregatesFilter<"User"> | string | null
    totpSecret?: StringNullableWithAggregatesFilter<"User"> | string | null
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    roleId?: IntWithAggregatesFilter<"User"> | number
    createdById?: IntNullableWithAggregatesFilter<"User"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"User"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"User"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type UserTranslationWhereInput = {
    AND?: UserTranslationWhereInput | UserTranslationWhereInput[]
    OR?: UserTranslationWhereInput[]
    NOT?: UserTranslationWhereInput | UserTranslationWhereInput[]
    id?: IntFilter<"UserTranslation"> | number
    userId?: IntFilter<"UserTranslation"> | number
    languageId?: StringFilter<"UserTranslation"> | string
    address?: StringNullableFilter<"UserTranslation"> | string | null
    description?: StringNullableFilter<"UserTranslation"> | string | null
    createdById?: IntNullableFilter<"UserTranslation"> | number | null
    updatedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"UserTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"UserTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"UserTranslation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type UserTranslationOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    languageId?: SortOrder
    address?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type UserTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UserTranslationWhereInput | UserTranslationWhereInput[]
    OR?: UserTranslationWhereInput[]
    NOT?: UserTranslationWhereInput | UserTranslationWhereInput[]
    userId?: IntFilter<"UserTranslation"> | number
    languageId?: StringFilter<"UserTranslation"> | string
    address?: StringNullableFilter<"UserTranslation"> | string | null
    description?: StringNullableFilter<"UserTranslation"> | string | null
    createdById?: IntNullableFilter<"UserTranslation"> | number | null
    updatedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"UserTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"UserTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"UserTranslation"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type UserTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    languageId?: SortOrder
    address?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserTranslationCountOrderByAggregateInput
    _avg?: UserTranslationAvgOrderByAggregateInput
    _max?: UserTranslationMaxOrderByAggregateInput
    _min?: UserTranslationMinOrderByAggregateInput
    _sum?: UserTranslationSumOrderByAggregateInput
  }

  export type UserTranslationScalarWhereWithAggregatesInput = {
    AND?: UserTranslationScalarWhereWithAggregatesInput | UserTranslationScalarWhereWithAggregatesInput[]
    OR?: UserTranslationScalarWhereWithAggregatesInput[]
    NOT?: UserTranslationScalarWhereWithAggregatesInput | UserTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserTranslation"> | number
    userId?: IntWithAggregatesFilter<"UserTranslation"> | number
    languageId?: StringWithAggregatesFilter<"UserTranslation"> | string
    address?: StringNullableWithAggregatesFilter<"UserTranslation"> | string | null
    description?: StringNullableWithAggregatesFilter<"UserTranslation"> | string | null
    createdById?: IntNullableWithAggregatesFilter<"UserTranslation"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"UserTranslation"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"UserTranslation"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"UserTranslation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserTranslation"> | Date | string
  }

  export type VerificationCodeWhereInput = {
    AND?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    OR?: VerificationCodeWhereInput[]
    NOT?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    id?: IntFilter<"VerificationCode"> | number
    email?: StringFilter<"VerificationCode"> | string
    code?: StringFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeFilter<"VerificationCode"> | Date | string
  }

  export type VerificationCodeOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email_code_type?: VerificationCodeEmailCodeTypeCompoundUniqueInput
    AND?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    OR?: VerificationCodeWhereInput[]
    NOT?: VerificationCodeWhereInput | VerificationCodeWhereInput[]
    email?: StringFilter<"VerificationCode"> | string
    code?: StringFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeFilter<"VerificationCode"> | Date | string
  }, "id" | "email_code_type">

  export type VerificationCodeOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: VerificationCodeCountOrderByAggregateInput
    _avg?: VerificationCodeAvgOrderByAggregateInput
    _max?: VerificationCodeMaxOrderByAggregateInput
    _min?: VerificationCodeMinOrderByAggregateInput
    _sum?: VerificationCodeSumOrderByAggregateInput
  }

  export type VerificationCodeScalarWhereWithAggregatesInput = {
    AND?: VerificationCodeScalarWhereWithAggregatesInput | VerificationCodeScalarWhereWithAggregatesInput[]
    OR?: VerificationCodeScalarWhereWithAggregatesInput[]
    NOT?: VerificationCodeScalarWhereWithAggregatesInput | VerificationCodeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VerificationCode"> | number
    email?: StringWithAggregatesFilter<"VerificationCode"> | string
    code?: StringWithAggregatesFilter<"VerificationCode"> | string
    type?: EnumVerificationCodeTypeWithAggregatesFilter<"VerificationCode"> | $Enums.VerificationCodeType
    expiresAt?: DateTimeWithAggregatesFilter<"VerificationCode"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"VerificationCode"> | Date | string
  }

  export type DeviceWhereInput = {
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    id?: IntFilter<"Device"> | number
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    refreshTokens?: RefreshTokenListRelationFilter
  }

  export type DeviceOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
    user?: UserOrderByWithRelationInput
    refreshTokens?: RefreshTokenOrderByRelationAggregateInput
  }

  export type DeviceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: DeviceWhereInput | DeviceWhereInput[]
    OR?: DeviceWhereInput[]
    NOT?: DeviceWhereInput | DeviceWhereInput[]
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    refreshTokens?: RefreshTokenListRelationFilter
  }, "id">

  export type DeviceOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
    _count?: DeviceCountOrderByAggregateInput
    _avg?: DeviceAvgOrderByAggregateInput
    _max?: DeviceMaxOrderByAggregateInput
    _min?: DeviceMinOrderByAggregateInput
    _sum?: DeviceSumOrderByAggregateInput
  }

  export type DeviceScalarWhereWithAggregatesInput = {
    AND?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    OR?: DeviceScalarWhereWithAggregatesInput[]
    NOT?: DeviceScalarWhereWithAggregatesInput | DeviceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Device"> | number
    userId?: IntWithAggregatesFilter<"Device"> | number
    userAgent?: StringWithAggregatesFilter<"Device"> | string
    ip?: StringWithAggregatesFilter<"Device"> | string
    lastActive?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"Device"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Device"> | boolean
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    token?: StringFilter<"RefreshToken"> | string
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    user?: UserOrderByWithRelationInput
    device?: DeviceOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    device?: XOR<DeviceScalarRelationFilter, DeviceWhereInput>
  }, "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _avg?: RefreshTokenAvgOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
    _sum?: RefreshTokenSumOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: IntWithAggregatesFilter<"RefreshToken"> | number
    deviceId?: IntWithAggregatesFilter<"RefreshToken"> | number
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
  }

  export type PermissionWhereInput = {
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    id?: IntFilter<"Permission"> | number
    name?: StringFilter<"Permission"> | string
    description?: StringFilter<"Permission"> | string
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringFilter<"Permission"> | string
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    roles?: RoleListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type PermissionOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roles?: RoleOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type PermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PermissionWhereInput | PermissionWhereInput[]
    OR?: PermissionWhereInput[]
    NOT?: PermissionWhereInput | PermissionWhereInput[]
    name?: StringFilter<"Permission"> | string
    description?: StringFilter<"Permission"> | string
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringFilter<"Permission"> | string
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
    roles?: RoleListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type PermissionOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PermissionCountOrderByAggregateInput
    _avg?: PermissionAvgOrderByAggregateInput
    _max?: PermissionMaxOrderByAggregateInput
    _min?: PermissionMinOrderByAggregateInput
    _sum?: PermissionSumOrderByAggregateInput
  }

  export type PermissionScalarWhereWithAggregatesInput = {
    AND?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    OR?: PermissionScalarWhereWithAggregatesInput[]
    NOT?: PermissionScalarWhereWithAggregatesInput | PermissionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Permission"> | number
    name?: StringWithAggregatesFilter<"Permission"> | string
    description?: StringWithAggregatesFilter<"Permission"> | string
    path?: StringWithAggregatesFilter<"Permission"> | string
    method?: EnumHTTPMethodWithAggregatesFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringWithAggregatesFilter<"Permission"> | string
    createdById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Permission"> | Date | string
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    description?: StringFilter<"Role"> | string
    isActive?: BoolFilter<"Role"> | boolean
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    permissions?: PermissionListRelationFilter
    users?: UserListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    permissions?: PermissionOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    description?: StringFilter<"Role"> | string
    isActive?: BoolFilter<"Role"> | boolean
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
    permissions?: PermissionListRelationFilter
    users?: UserListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
    description?: StringWithAggregatesFilter<"Role"> | string
    isActive?: BoolWithAggregatesFilter<"Role"> | boolean
    createdById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Role"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Role"> | Date | string
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: IntFilter<"Product"> | number
    base_price?: FloatFilter<"Product"> | number
    virtual_price?: FloatFilter<"Product"> | number
    brandId?: IntFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    createdById?: IntNullableFilter<"Product"> | number | null
    updatedById?: IntNullableFilter<"Product"> | number | null
    deletedById?: IntNullableFilter<"Product"> | number | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    categories?: CategoryListRelationFilter
    variants?: VariantListRelationFilter
    skus?: SKUListRelationFilter
    reviews?: ReviewListRelationFilter
    productTranslations?: ProductTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    images?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    brand?: BrandOrderByWithRelationInput
    categories?: CategoryOrderByRelationAggregateInput
    variants?: VariantOrderByRelationAggregateInput
    skus?: SKUOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    productTranslations?: ProductTranslationOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    base_price?: FloatFilter<"Product"> | number
    virtual_price?: FloatFilter<"Product"> | number
    brandId?: IntFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    createdById?: IntNullableFilter<"Product"> | number | null
    updatedById?: IntNullableFilter<"Product"> | number | null
    deletedById?: IntNullableFilter<"Product"> | number | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    categories?: CategoryListRelationFilter
    variants?: VariantListRelationFilter
    skus?: SKUListRelationFilter
    reviews?: ReviewListRelationFilter
    productTranslations?: ProductTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    images?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Product"> | number
    base_price?: FloatWithAggregatesFilter<"Product"> | number
    virtual_price?: FloatWithAggregatesFilter<"Product"> | number
    brandId?: IntWithAggregatesFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    createdById?: IntNullableWithAggregatesFilter<"Product"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Product"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Product"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
  }

  export type ProductTranslationWhereInput = {
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    id?: IntFilter<"ProductTranslation"> | number
    productId?: IntFilter<"ProductTranslation"> | number
    languageId?: StringFilter<"ProductTranslation"> | string
    name?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdById?: IntNullableFilter<"ProductTranslation"> | number | null
    updatedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"ProductTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type ProductTranslationOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type ProductTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    productId?: IntFilter<"ProductTranslation"> | number
    languageId?: StringFilter<"ProductTranslation"> | string
    name?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdById?: IntNullableFilter<"ProductTranslation"> | number | null
    updatedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"ProductTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type ProductTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductTranslationCountOrderByAggregateInput
    _avg?: ProductTranslationAvgOrderByAggregateInput
    _max?: ProductTranslationMaxOrderByAggregateInput
    _min?: ProductTranslationMinOrderByAggregateInput
    _sum?: ProductTranslationSumOrderByAggregateInput
  }

  export type ProductTranslationScalarWhereWithAggregatesInput = {
    AND?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    OR?: ProductTranslationScalarWhereWithAggregatesInput[]
    NOT?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductTranslation"> | number
    productId?: IntWithAggregatesFilter<"ProductTranslation"> | number
    languageId?: StringWithAggregatesFilter<"ProductTranslation"> | string
    name?: StringWithAggregatesFilter<"ProductTranslation"> | string
    description?: StringWithAggregatesFilter<"ProductTranslation"> | string
    createdById?: IntNullableWithAggregatesFilter<"ProductTranslation"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"ProductTranslation"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"ProductTranslation"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ProductTranslation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: IntFilter<"Category"> | number
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    products?: ProductListRelationFilter
    parentCategory?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    childrenCategories?: CategoryListRelationFilter
    categoryTranslations?: CategoryTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    products?: ProductOrderByRelationAggregateInput
    parentCategory?: CategoryOrderByWithRelationInput
    childrenCategories?: CategoryOrderByRelationAggregateInput
    categoryTranslations?: CategoryTranslationOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
    products?: ProductListRelationFilter
    parentCategory?: XOR<CategoryNullableScalarRelationFilter, CategoryWhereInput> | null
    childrenCategories?: CategoryListRelationFilter
    categoryTranslations?: CategoryTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    parentCategoryId?: SortOrderInput | SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Category"> | number
    parentCategoryId?: IntNullableWithAggregatesFilter<"Category"> | number | null
    createdById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Category"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Category"> | Date | string
  }

  export type CategoryTranslationWhereInput = {
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    id?: IntFilter<"CategoryTranslation"> | number
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdById?: IntNullableFilter<"CategoryTranslation"> | number | null
    updatedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CategoryTranslationOrderByWithRelationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: CategoryOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type CategoryTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    OR?: CategoryTranslationWhereInput[]
    NOT?: CategoryTranslationWhereInput | CategoryTranslationWhereInput[]
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdById?: IntNullableFilter<"CategoryTranslation"> | number | null
    updatedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    category?: XOR<CategoryScalarRelationFilter, CategoryWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type CategoryTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CategoryTranslationCountOrderByAggregateInput
    _avg?: CategoryTranslationAvgOrderByAggregateInput
    _max?: CategoryTranslationMaxOrderByAggregateInput
    _min?: CategoryTranslationMinOrderByAggregateInput
    _sum?: CategoryTranslationSumOrderByAggregateInput
  }

  export type CategoryTranslationScalarWhereWithAggregatesInput = {
    AND?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    OR?: CategoryTranslationScalarWhereWithAggregatesInput[]
    NOT?: CategoryTranslationScalarWhereWithAggregatesInput | CategoryTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CategoryTranslation"> | number
    categoryId?: IntWithAggregatesFilter<"CategoryTranslation"> | number
    languageId?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    name?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    description?: StringWithAggregatesFilter<"CategoryTranslation"> | string
    createdById?: IntNullableWithAggregatesFilter<"CategoryTranslation"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"CategoryTranslation"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"CategoryTranslation"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"CategoryTranslation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CategoryTranslation"> | Date | string
  }

  export type VariantWhereInput = {
    AND?: VariantWhereInput | VariantWhereInput[]
    OR?: VariantWhereInput[]
    NOT?: VariantWhereInput | VariantWhereInput[]
    id?: IntFilter<"Variant"> | number
    name?: StringFilter<"Variant"> | string
    productId?: IntFilter<"Variant"> | number
    createdById?: IntNullableFilter<"Variant"> | number | null
    updatedById?: IntNullableFilter<"Variant"> | number | null
    deletedById?: IntNullableFilter<"Variant"> | number | null
    deletedAt?: DateTimeNullableFilter<"Variant"> | Date | string | null
    createdAt?: DateTimeFilter<"Variant"> | Date | string
    updatedAt?: DateTimeFilter<"Variant"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variantOptions?: VariantOptionListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type VariantOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    productId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    variantOptions?: VariantOptionOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type VariantWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VariantWhereInput | VariantWhereInput[]
    OR?: VariantWhereInput[]
    NOT?: VariantWhereInput | VariantWhereInput[]
    name?: StringFilter<"Variant"> | string
    productId?: IntFilter<"Variant"> | number
    createdById?: IntNullableFilter<"Variant"> | number | null
    updatedById?: IntNullableFilter<"Variant"> | number | null
    deletedById?: IntNullableFilter<"Variant"> | number | null
    deletedAt?: DateTimeNullableFilter<"Variant"> | Date | string | null
    createdAt?: DateTimeFilter<"Variant"> | Date | string
    updatedAt?: DateTimeFilter<"Variant"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variantOptions?: VariantOptionListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type VariantOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    productId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VariantCountOrderByAggregateInput
    _avg?: VariantAvgOrderByAggregateInput
    _max?: VariantMaxOrderByAggregateInput
    _min?: VariantMinOrderByAggregateInput
    _sum?: VariantSumOrderByAggregateInput
  }

  export type VariantScalarWhereWithAggregatesInput = {
    AND?: VariantScalarWhereWithAggregatesInput | VariantScalarWhereWithAggregatesInput[]
    OR?: VariantScalarWhereWithAggregatesInput[]
    NOT?: VariantScalarWhereWithAggregatesInput | VariantScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Variant"> | number
    name?: StringWithAggregatesFilter<"Variant"> | string
    productId?: IntWithAggregatesFilter<"Variant"> | number
    createdById?: IntNullableWithAggregatesFilter<"Variant"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Variant"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Variant"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Variant"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Variant"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Variant"> | Date | string
  }

  export type VariantOptionWhereInput = {
    AND?: VariantOptionWhereInput | VariantOptionWhereInput[]
    OR?: VariantOptionWhereInput[]
    NOT?: VariantOptionWhereInput | VariantOptionWhereInput[]
    id?: IntFilter<"VariantOption"> | number
    value?: StringFilter<"VariantOption"> | string
    variantId?: IntFilter<"VariantOption"> | number
    createdById?: IntNullableFilter<"VariantOption"> | number | null
    updatedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedAt?: DateTimeNullableFilter<"VariantOption"> | Date | string | null
    createdAt?: DateTimeFilter<"VariantOption"> | Date | string
    updatedAt?: DateTimeFilter<"VariantOption"> | Date | string
    variant?: XOR<VariantScalarRelationFilter, VariantWhereInput>
    skus?: SKUListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type VariantOptionOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    variant?: VariantOrderByWithRelationInput
    skus?: SKUOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type VariantOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: VariantOptionWhereInput | VariantOptionWhereInput[]
    OR?: VariantOptionWhereInput[]
    NOT?: VariantOptionWhereInput | VariantOptionWhereInput[]
    value?: StringFilter<"VariantOption"> | string
    variantId?: IntFilter<"VariantOption"> | number
    createdById?: IntNullableFilter<"VariantOption"> | number | null
    updatedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedAt?: DateTimeNullableFilter<"VariantOption"> | Date | string | null
    createdAt?: DateTimeFilter<"VariantOption"> | Date | string
    updatedAt?: DateTimeFilter<"VariantOption"> | Date | string
    variant?: XOR<VariantScalarRelationFilter, VariantWhereInput>
    skus?: SKUListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type VariantOptionOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: VariantOptionCountOrderByAggregateInput
    _avg?: VariantOptionAvgOrderByAggregateInput
    _max?: VariantOptionMaxOrderByAggregateInput
    _min?: VariantOptionMinOrderByAggregateInput
    _sum?: VariantOptionSumOrderByAggregateInput
  }

  export type VariantOptionScalarWhereWithAggregatesInput = {
    AND?: VariantOptionScalarWhereWithAggregatesInput | VariantOptionScalarWhereWithAggregatesInput[]
    OR?: VariantOptionScalarWhereWithAggregatesInput[]
    NOT?: VariantOptionScalarWhereWithAggregatesInput | VariantOptionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"VariantOption"> | number
    value?: StringWithAggregatesFilter<"VariantOption"> | string
    variantId?: IntWithAggregatesFilter<"VariantOption"> | number
    createdById?: IntNullableWithAggregatesFilter<"VariantOption"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"VariantOption"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"VariantOption"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"VariantOption"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"VariantOption"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VariantOption"> | Date | string
  }

  export type SKUWhereInput = {
    AND?: SKUWhereInput | SKUWhereInput[]
    OR?: SKUWhereInput[]
    NOT?: SKUWhereInput | SKUWhereInput[]
    id?: IntFilter<"SKU"> | number
    value?: StringFilter<"SKU"> | string
    price?: FloatFilter<"SKU"> | number
    stock?: IntFilter<"SKU"> | number
    images?: StringNullableListFilter<"SKU">
    productId?: IntFilter<"SKU"> | number
    createdById?: IntNullableFilter<"SKU"> | number | null
    updatedById?: IntNullableFilter<"SKU"> | number | null
    deletedById?: IntNullableFilter<"SKU"> | number | null
    deletedAt?: DateTimeNullableFilter<"SKU"> | Date | string | null
    createdAt?: DateTimeFilter<"SKU"> | Date | string
    updatedAt?: DateTimeFilter<"SKU"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variantOptions?: VariantOptionListRelationFilter
    cartItems?: CartItemListRelationFilter
    productSKUSnapshots?: ProductSKUSnapshotListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type SKUOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    images?: SortOrder
    productId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    variantOptions?: VariantOptionOrderByRelationAggregateInput
    cartItems?: CartItemOrderByRelationAggregateInput
    productSKUSnapshots?: ProductSKUSnapshotOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type SKUWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SKUWhereInput | SKUWhereInput[]
    OR?: SKUWhereInput[]
    NOT?: SKUWhereInput | SKUWhereInput[]
    value?: StringFilter<"SKU"> | string
    price?: FloatFilter<"SKU"> | number
    stock?: IntFilter<"SKU"> | number
    images?: StringNullableListFilter<"SKU">
    productId?: IntFilter<"SKU"> | number
    createdById?: IntNullableFilter<"SKU"> | number | null
    updatedById?: IntNullableFilter<"SKU"> | number | null
    deletedById?: IntNullableFilter<"SKU"> | number | null
    deletedAt?: DateTimeNullableFilter<"SKU"> | Date | string | null
    createdAt?: DateTimeFilter<"SKU"> | Date | string
    updatedAt?: DateTimeFilter<"SKU"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    variantOptions?: VariantOptionListRelationFilter
    cartItems?: CartItemListRelationFilter
    productSKUSnapshots?: ProductSKUSnapshotListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type SKUOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    images?: SortOrder
    productId?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SKUCountOrderByAggregateInput
    _avg?: SKUAvgOrderByAggregateInput
    _max?: SKUMaxOrderByAggregateInput
    _min?: SKUMinOrderByAggregateInput
    _sum?: SKUSumOrderByAggregateInput
  }

  export type SKUScalarWhereWithAggregatesInput = {
    AND?: SKUScalarWhereWithAggregatesInput | SKUScalarWhereWithAggregatesInput[]
    OR?: SKUScalarWhereWithAggregatesInput[]
    NOT?: SKUScalarWhereWithAggregatesInput | SKUScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SKU"> | number
    value?: StringWithAggregatesFilter<"SKU"> | string
    price?: FloatWithAggregatesFilter<"SKU"> | number
    stock?: IntWithAggregatesFilter<"SKU"> | number
    images?: StringNullableListFilter<"SKU">
    productId?: IntWithAggregatesFilter<"SKU"> | number
    createdById?: IntNullableWithAggregatesFilter<"SKU"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"SKU"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"SKU"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"SKU"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"SKU"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"SKU"> | Date | string
  }

  export type BrandWhereInput = {
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    id?: IntFilter<"Brand"> | number
    logo?: StringFilter<"Brand"> | string
    createdById?: IntNullableFilter<"Brand"> | number | null
    updatedById?: IntNullableFilter<"Brand"> | number | null
    deletedById?: IntNullableFilter<"Brand"> | number | null
    deletedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    products?: ProductListRelationFilter
    brandTranslations?: BrandTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type BrandOrderByWithRelationInput = {
    id?: SortOrder
    logo?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    products?: ProductOrderByRelationAggregateInput
    brandTranslations?: BrandTranslationOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type BrandWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    logo?: StringFilter<"Brand"> | string
    createdById?: IntNullableFilter<"Brand"> | number | null
    updatedById?: IntNullableFilter<"Brand"> | number | null
    deletedById?: IntNullableFilter<"Brand"> | number | null
    deletedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
    products?: ProductListRelationFilter
    brandTranslations?: BrandTranslationListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type BrandOrderByWithAggregationInput = {
    id?: SortOrder
    logo?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BrandCountOrderByAggregateInput
    _avg?: BrandAvgOrderByAggregateInput
    _max?: BrandMaxOrderByAggregateInput
    _min?: BrandMinOrderByAggregateInput
    _sum?: BrandSumOrderByAggregateInput
  }

  export type BrandScalarWhereWithAggregatesInput = {
    AND?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    OR?: BrandScalarWhereWithAggregatesInput[]
    NOT?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Brand"> | number
    logo?: StringWithAggregatesFilter<"Brand"> | string
    createdById?: IntNullableWithAggregatesFilter<"Brand"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Brand"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Brand"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Brand"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
  }

  export type BrandTranslationWhereInput = {
    AND?: BrandTranslationWhereInput | BrandTranslationWhereInput[]
    OR?: BrandTranslationWhereInput[]
    NOT?: BrandTranslationWhereInput | BrandTranslationWhereInput[]
    id?: IntFilter<"BrandTranslation"> | number
    brandId?: IntFilter<"BrandTranslation"> | number
    languageId?: StringFilter<"BrandTranslation"> | string
    name?: StringFilter<"BrandTranslation"> | string
    description?: StringFilter<"BrandTranslation"> | string
    createdById?: IntNullableFilter<"BrandTranslation"> | number | null
    updatedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"BrandTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"BrandTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"BrandTranslation"> | Date | string
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type BrandTranslationOrderByWithRelationInput = {
    id?: SortOrder
    brandId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    brand?: BrandOrderByWithRelationInput
    language?: LanguageOrderByWithRelationInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type BrandTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BrandTranslationWhereInput | BrandTranslationWhereInput[]
    OR?: BrandTranslationWhereInput[]
    NOT?: BrandTranslationWhereInput | BrandTranslationWhereInput[]
    brandId?: IntFilter<"BrandTranslation"> | number
    languageId?: StringFilter<"BrandTranslation"> | string
    name?: StringFilter<"BrandTranslation"> | string
    description?: StringFilter<"BrandTranslation"> | string
    createdById?: IntNullableFilter<"BrandTranslation"> | number | null
    updatedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"BrandTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"BrandTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"BrandTranslation"> | Date | string
    brand?: XOR<BrandScalarRelationFilter, BrandWhereInput>
    language?: XOR<LanguageScalarRelationFilter, LanguageWhereInput>
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type BrandTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    brandId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BrandTranslationCountOrderByAggregateInput
    _avg?: BrandTranslationAvgOrderByAggregateInput
    _max?: BrandTranslationMaxOrderByAggregateInput
    _min?: BrandTranslationMinOrderByAggregateInput
    _sum?: BrandTranslationSumOrderByAggregateInput
  }

  export type BrandTranslationScalarWhereWithAggregatesInput = {
    AND?: BrandTranslationScalarWhereWithAggregatesInput | BrandTranslationScalarWhereWithAggregatesInput[]
    OR?: BrandTranslationScalarWhereWithAggregatesInput[]
    NOT?: BrandTranslationScalarWhereWithAggregatesInput | BrandTranslationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"BrandTranslation"> | number
    brandId?: IntWithAggregatesFilter<"BrandTranslation"> | number
    languageId?: StringWithAggregatesFilter<"BrandTranslation"> | string
    name?: StringWithAggregatesFilter<"BrandTranslation"> | string
    description?: StringWithAggregatesFilter<"BrandTranslation"> | string
    createdById?: IntNullableWithAggregatesFilter<"BrandTranslation"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"BrandTranslation"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"BrandTranslation"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"BrandTranslation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"BrandTranslation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BrandTranslation"> | Date | string
  }

  export type CartItemWhereInput = {
    AND?: CartItemWhereInput | CartItemWhereInput[]
    OR?: CartItemWhereInput[]
    NOT?: CartItemWhereInput | CartItemWhereInput[]
    id?: IntFilter<"CartItem"> | number
    quantity?: IntFilter<"CartItem"> | number
    skuId?: IntFilter<"CartItem"> | number
    userId?: IntFilter<"CartItem"> | number
    createdAt?: DateTimeFilter<"CartItem"> | Date | string
    updatedAt?: DateTimeFilter<"CartItem"> | Date | string
    sku?: XOR<SKUScalarRelationFilter, SKUWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type CartItemOrderByWithRelationInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sku?: SKUOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type CartItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CartItemWhereInput | CartItemWhereInput[]
    OR?: CartItemWhereInput[]
    NOT?: CartItemWhereInput | CartItemWhereInput[]
    quantity?: IntFilter<"CartItem"> | number
    skuId?: IntFilter<"CartItem"> | number
    userId?: IntFilter<"CartItem"> | number
    createdAt?: DateTimeFilter<"CartItem"> | Date | string
    updatedAt?: DateTimeFilter<"CartItem"> | Date | string
    sku?: XOR<SKUScalarRelationFilter, SKUWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type CartItemOrderByWithAggregationInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CartItemCountOrderByAggregateInput
    _avg?: CartItemAvgOrderByAggregateInput
    _max?: CartItemMaxOrderByAggregateInput
    _min?: CartItemMinOrderByAggregateInput
    _sum?: CartItemSumOrderByAggregateInput
  }

  export type CartItemScalarWhereWithAggregatesInput = {
    AND?: CartItemScalarWhereWithAggregatesInput | CartItemScalarWhereWithAggregatesInput[]
    OR?: CartItemScalarWhereWithAggregatesInput[]
    NOT?: CartItemScalarWhereWithAggregatesInput | CartItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CartItem"> | number
    quantity?: IntWithAggregatesFilter<"CartItem"> | number
    skuId?: IntWithAggregatesFilter<"CartItem"> | number
    userId?: IntWithAggregatesFilter<"CartItem"> | number
    createdAt?: DateTimeWithAggregatesFilter<"CartItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CartItem"> | Date | string
  }

  export type ProductSKUSnapshotWhereInput = {
    AND?: ProductSKUSnapshotWhereInput | ProductSKUSnapshotWhereInput[]
    OR?: ProductSKUSnapshotWhereInput[]
    NOT?: ProductSKUSnapshotWhereInput | ProductSKUSnapshotWhereInput[]
    id?: IntFilter<"ProductSKUSnapshot"> | number
    productName?: StringFilter<"ProductSKUSnapshot"> | string
    price?: FloatFilter<"ProductSKUSnapshot"> | number
    images?: StringNullableListFilter<"ProductSKUSnapshot">
    skuValue?: StringFilter<"ProductSKUSnapshot"> | string
    skuId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    orderId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    createdAt?: DateTimeFilter<"ProductSKUSnapshot"> | Date | string
    sku?: XOR<SKUNullableScalarRelationFilter, SKUWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }

  export type ProductSKUSnapshotOrderByWithRelationInput = {
    id?: SortOrder
    productName?: SortOrder
    price?: SortOrder
    images?: SortOrder
    skuValue?: SortOrder
    skuId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    sku?: SKUOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
  }

  export type ProductSKUSnapshotWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ProductSKUSnapshotWhereInput | ProductSKUSnapshotWhereInput[]
    OR?: ProductSKUSnapshotWhereInput[]
    NOT?: ProductSKUSnapshotWhereInput | ProductSKUSnapshotWhereInput[]
    productName?: StringFilter<"ProductSKUSnapshot"> | string
    price?: FloatFilter<"ProductSKUSnapshot"> | number
    images?: StringNullableListFilter<"ProductSKUSnapshot">
    skuValue?: StringFilter<"ProductSKUSnapshot"> | string
    skuId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    orderId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    createdAt?: DateTimeFilter<"ProductSKUSnapshot"> | Date | string
    sku?: XOR<SKUNullableScalarRelationFilter, SKUWhereInput> | null
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }, "id">

  export type ProductSKUSnapshotOrderByWithAggregationInput = {
    id?: SortOrder
    productName?: SortOrder
    price?: SortOrder
    images?: SortOrder
    skuValue?: SortOrder
    skuId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: ProductSKUSnapshotCountOrderByAggregateInput
    _avg?: ProductSKUSnapshotAvgOrderByAggregateInput
    _max?: ProductSKUSnapshotMaxOrderByAggregateInput
    _min?: ProductSKUSnapshotMinOrderByAggregateInput
    _sum?: ProductSKUSnapshotSumOrderByAggregateInput
  }

  export type ProductSKUSnapshotScalarWhereWithAggregatesInput = {
    AND?: ProductSKUSnapshotScalarWhereWithAggregatesInput | ProductSKUSnapshotScalarWhereWithAggregatesInput[]
    OR?: ProductSKUSnapshotScalarWhereWithAggregatesInput[]
    NOT?: ProductSKUSnapshotScalarWhereWithAggregatesInput | ProductSKUSnapshotScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductSKUSnapshot"> | number
    productName?: StringWithAggregatesFilter<"ProductSKUSnapshot"> | string
    price?: FloatWithAggregatesFilter<"ProductSKUSnapshot"> | number
    images?: StringNullableListFilter<"ProductSKUSnapshot">
    skuValue?: StringWithAggregatesFilter<"ProductSKUSnapshot"> | string
    skuId?: IntNullableWithAggregatesFilter<"ProductSKUSnapshot"> | number | null
    orderId?: IntNullableWithAggregatesFilter<"ProductSKUSnapshot"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"ProductSKUSnapshot"> | Date | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: IntFilter<"Order"> | number
    userId?: IntFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdById?: IntNullableFilter<"Order"> | number | null
    updatedById?: IntNullableFilter<"Order"> | number | null
    deletedById?: IntNullableFilter<"Order"> | number | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    items?: ProductSKUSnapshotListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    items?: ProductSKUSnapshotOrderByRelationAggregateInput
    createdBy?: UserOrderByWithRelationInput
    updatedBy?: UserOrderByWithRelationInput
    deletedBy?: UserOrderByWithRelationInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    userId?: IntFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdById?: IntNullableFilter<"Order"> | number | null
    updatedById?: IntNullableFilter<"Order"> | number | null
    deletedById?: IntNullableFilter<"Order"> | number | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
    items?: ProductSKUSnapshotListRelationFilter
    createdBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    updatedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    deletedBy?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdById?: SortOrderInput | SortOrder
    updatedById?: SortOrderInput | SortOrder
    deletedById?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Order"> | number
    userId?: IntWithAggregatesFilter<"Order"> | number
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    createdById?: IntNullableWithAggregatesFilter<"Order"> | number | null
    updatedById?: IntNullableWithAggregatesFilter<"Order"> | number | null
    deletedById?: IntNullableWithAggregatesFilter<"Order"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: IntFilter<"Review"> | number
    content?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    userId?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: ProductOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    content?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    userId?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Review"> | number
    content?: StringWithAggregatesFilter<"Review"> | string
    rating?: IntWithAggregatesFilter<"Review"> | number
    productId?: IntWithAggregatesFilter<"Review"> | number
    userId?: IntWithAggregatesFilter<"Review"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type PaymentTransactionWhereInput = {
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    id?: IntFilter<"PaymentTransaction"> | number
    gateway?: StringFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringFilter<"PaymentTransaction"> | string
    subAccount?: StringNullableFilter<"PaymentTransaction"> | string | null
    amountIn?: IntFilter<"PaymentTransaction"> | number
    amountOut?: IntFilter<"PaymentTransaction"> | number
    accumulated?: IntFilter<"PaymentTransaction"> | number
    code?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableFilter<"PaymentTransaction"> | string | null
    referenceNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    body?: StringNullableFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
  }

  export type PaymentTransactionOrderByWithRelationInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrderInput | SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    code?: SortOrderInput | SortOrder
    transactionContent?: SortOrderInput | SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    gateway?: StringFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringFilter<"PaymentTransaction"> | string
    subAccount?: StringNullableFilter<"PaymentTransaction"> | string | null
    amountIn?: IntFilter<"PaymentTransaction"> | number
    amountOut?: IntFilter<"PaymentTransaction"> | number
    accumulated?: IntFilter<"PaymentTransaction"> | number
    code?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableFilter<"PaymentTransaction"> | string | null
    referenceNumber?: StringNullableFilter<"PaymentTransaction"> | string | null
    body?: StringNullableFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeFilter<"PaymentTransaction"> | Date | string
  }, "id">

  export type PaymentTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrderInput | SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    code?: SortOrderInput | SortOrder
    transactionContent?: SortOrderInput | SortOrder
    referenceNumber?: SortOrderInput | SortOrder
    body?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PaymentTransactionCountOrderByAggregateInput
    _avg?: PaymentTransactionAvgOrderByAggregateInput
    _max?: PaymentTransactionMaxOrderByAggregateInput
    _min?: PaymentTransactionMinOrderByAggregateInput
    _sum?: PaymentTransactionSumOrderByAggregateInput
  }

  export type PaymentTransactionScalarWhereWithAggregatesInput = {
    AND?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    OR?: PaymentTransactionScalarWhereWithAggregatesInput[]
    NOT?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    gateway?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    transactionDate?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
    accountNumber?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    subAccount?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    amountIn?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    amountOut?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    accumulated?: IntWithAggregatesFilter<"PaymentTransaction"> | number
    code?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    transactionContent?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    referenceNumber?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    body?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
  }

  export type MessageWhereInput = {
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    id?: IntFilter<"Message"> | number
    fromUserId?: IntFilter<"Message"> | number
    toUserId?: IntFilter<"Message"> | number
    content?: StringFilter<"Message"> | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    fromUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    toUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MessageOrderByWithRelationInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
    content?: SortOrder
    readAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    fromUser?: UserOrderByWithRelationInput
    toUser?: UserOrderByWithRelationInput
  }

  export type MessageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MessageWhereInput | MessageWhereInput[]
    OR?: MessageWhereInput[]
    NOT?: MessageWhereInput | MessageWhereInput[]
    fromUserId?: IntFilter<"Message"> | number
    toUserId?: IntFilter<"Message"> | number
    content?: StringFilter<"Message"> | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
    fromUser?: XOR<UserScalarRelationFilter, UserWhereInput>
    toUser?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MessageOrderByWithAggregationInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
    content?: SortOrder
    readAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: MessageCountOrderByAggregateInput
    _avg?: MessageAvgOrderByAggregateInput
    _max?: MessageMaxOrderByAggregateInput
    _min?: MessageMinOrderByAggregateInput
    _sum?: MessageSumOrderByAggregateInput
  }

  export type MessageScalarWhereWithAggregatesInput = {
    AND?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    OR?: MessageScalarWhereWithAggregatesInput[]
    NOT?: MessageScalarWhereWithAggregatesInput | MessageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Message"> | number
    fromUserId?: IntWithAggregatesFilter<"Message"> | number
    toUserId?: IntWithAggregatesFilter<"Message"> | number
    content?: StringWithAggregatesFilter<"Message"> | string
    readAt?: DateTimeNullableWithAggregatesFilter<"Message"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Message"> | Date | string
  }

  export type LanguageCreateInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageCreateManyInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LanguageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationCreateInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserTranslationsInput
    language: LanguageCreateNestedOneWithoutUserTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedUserTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUserTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationUpdateInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUserTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUserTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationCreateManyInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationUpdateManyMutationInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeCreateInput = {
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUncheckedCreateInput = {
    id?: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeCreateManyInput = {
    id?: number
    email: string
    code: string
    type: $Enums.VerificationCodeType
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type VerificationCodeUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCodeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    type?: EnumVerificationCodeTypeFieldUpdateOperationsInput | $Enums.VerificationCodeType
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceCreateInput = {
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
    user: UserCreateNestedOneWithoutDevicesInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUpdateInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutDevicesNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceCreateManyInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type DeviceUpdateManyMutationInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DeviceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenCreateInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
    device: DeviceCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    token: string
    userId: number
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
    device?: DeviceUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyInput = {
    token: string
    userId: number
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionCreateInput = {
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleCreateNestedManyWithoutPermissionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedPermissionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedPermissionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedPermissionsInput
  }

  export type PermissionUncheckedCreateInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUpdateManyWithoutPermissionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedPermissionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedPermissionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionCreateManyInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleCreateInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionCreateNestedManyWithoutRolesInput
    users?: UserCreateNestedManyWithoutRoleInput
    createdBy?: UserCreateNestedOneWithoutCreatedRolesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedRolesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedRolesInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUpdateManyWithoutRolesNestedInput
    users?: UserUpdateManyWithoutRoleNestedInput
    createdBy?: UserUpdateOneWithoutCreatedRolesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedRolesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedRolesNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateManyMutationInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationCreateInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductTranslationsInput
    language: LanguageCreateNestedOneWithoutProductTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationCreateManyInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryUpdateManyMutationInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutCategoryTranslationsInput
    language: LanguageCreateNestedOneWithoutCategoryTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoryTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationCreateManyInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantCreateInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    variantOptions?: VariantOptionCreateNestedManyWithoutVariantInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantsInput
  }

  export type VariantUncheckedCreateInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutVariantInput
  }

  export type VariantUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutVariantNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantsNestedInput
  }

  export type VariantUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type VariantCreateManyInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionCreateInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant: VariantCreateNestedOneWithoutVariantOptionsInput
    skus?: SKUCreateNestedManyWithoutVariantOptionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantOptionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantOptionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUUncheckedCreateNestedManyWithoutVariantOptionsInput
  }

  export type VariantOptionUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: VariantUpdateOneRequiredWithoutVariantOptionsNestedInput
    skus?: SKUUpdateManyWithoutVariantOptionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantOptionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantOptionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput
  }

  export type VariantOptionCreateManyInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUCreateInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUUpdateInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUCreateManyInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SKUUpdateManyMutationInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandCreateInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutBrandInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandsInput
  }

  export type BrandUncheckedCreateInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandUpdateInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutBrandNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandsNestedInput
  }

  export type BrandUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandCreateManyInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandUpdateManyMutationInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationCreateInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutBrandTranslationsInput
    language: LanguageCreateNestedOneWithoutBrandTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationCreateManyInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemCreateInput = {
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sku: SKUCreateNestedOneWithoutCartItemsInput
    user: UserCreateNestedOneWithoutCartsInput
  }

  export type CartItemUncheckedCreateInput = {
    id?: number
    quantity: number
    skuId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CartItemUpdateInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sku?: SKUUpdateOneRequiredWithoutCartItemsNestedInput
    user?: UserUpdateOneRequiredWithoutCartsNestedInput
  }

  export type CartItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    skuId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemCreateManyInput = {
    id?: number
    quantity: number
    skuId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CartItemUpdateManyMutationInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    skuId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotCreateInput = {
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    createdAt?: Date | string
    sku?: SKUCreateNestedOneWithoutProductSKUSnapshotsInput
    order?: OrderCreateNestedOneWithoutItemsInput
  }

  export type ProductSKUSnapshotUncheckedCreateInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    skuId?: number | null
    orderId?: number | null
    createdAt?: Date | string
  }

  export type ProductSKUSnapshotUpdateInput = {
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sku?: SKUUpdateOneWithoutProductSKUSnapshotsNestedInput
    order?: OrderUpdateOneWithoutItemsNestedInput
  }

  export type ProductSKUSnapshotUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    skuId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotCreateManyInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    skuId?: number | null
    orderId?: number | null
    createdAt?: Date | string
  }

  export type ProductSKUSnapshotUpdateManyMutationInput = {
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    skuId?: NullableIntFieldUpdateOperationsInput | number | null
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    items?: ProductSKUSnapshotCreateNestedManyWithoutOrderInput
    createdBy?: UserCreateNestedOneWithoutCreatedOrdersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedOrdersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedOrdersInput
  }

  export type OrderUncheckedCreateInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    items?: ProductSKUSnapshotUpdateManyWithoutOrderNestedInput
    createdBy?: UserUpdateOneWithoutCreatedOrdersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedOrdersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedOrdersNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    content: string
    rating: number
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutReviewsInput
    user: UserCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: number
    content: string
    rating: number
    productId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutReviewsNestedInput
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyInput = {
    id?: number
    content: string
    rating: number
    productId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionCreateInput = {
    gateway: string
    transactionDate?: Date | string
    accountNumber: string
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    code?: string | null
    transactionContent?: string | null
    referenceNumber?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUncheckedCreateInput = {
    id?: number
    gateway: string
    transactionDate?: Date | string
    accountNumber: string
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    code?: string | null
    transactionContent?: string | null
    referenceNumber?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUpdateInput = {
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    code?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    code?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionCreateManyInput = {
    id?: number
    gateway: string
    transactionDate?: Date | string
    accountNumber: string
    subAccount?: string | null
    amountIn?: number
    amountOut?: number
    accumulated?: number
    code?: string | null
    transactionContent?: string | null
    referenceNumber?: string | null
    body?: string | null
    createdAt?: Date | string
  }

  export type PaymentTransactionUpdateManyMutationInput = {
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    code?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentTransactionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    gateway?: StringFieldUpdateOperationsInput | string
    transactionDate?: DateTimeFieldUpdateOperationsInput | Date | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    subAccount?: NullableStringFieldUpdateOperationsInput | string | null
    amountIn?: IntFieldUpdateOperationsInput | number
    amountOut?: IntFieldUpdateOperationsInput | number
    accumulated?: IntFieldUpdateOperationsInput | number
    code?: NullableStringFieldUpdateOperationsInput | string | null
    transactionContent?: NullableStringFieldUpdateOperationsInput | string | null
    referenceNumber?: NullableStringFieldUpdateOperationsInput | string | null
    body?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateInput = {
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
    fromUser: UserCreateNestedOneWithoutSentMessagesInput
    toUser: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateInput = {
    id?: number
    fromUserId: number
    toUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromUser?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
    toUser?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    fromUserId?: IntFieldUpdateOperationsInput | number
    toUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageCreateManyInput = {
    id?: number
    fromUserId: number
    toUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    fromUserId?: IntFieldUpdateOperationsInput | number
    toUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserTranslationListRelationFilter = {
    every?: UserTranslationWhereInput
    some?: UserTranslationWhereInput
    none?: UserTranslationWhereInput
  }

  export type ProductTranslationListRelationFilter = {
    every?: ProductTranslationWhereInput
    some?: ProductTranslationWhereInput
    none?: ProductTranslationWhereInput
  }

  export type CategoryTranslationListRelationFilter = {
    every?: CategoryTranslationWhereInput
    some?: CategoryTranslationWhereInput
    none?: CategoryTranslationWhereInput
  }

  export type BrandTranslationListRelationFilter = {
    every?: BrandTranslationWhereInput
    some?: BrandTranslationWhereInput
    none?: BrandTranslationWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BrandTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LanguageCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageAvgOrderByAggregateInput = {
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type LanguageMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LanguageSumOrderByAggregateInput = {
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type RoleScalarRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type DeviceListRelationFilter = {
    every?: DeviceWhereInput
    some?: DeviceWhereInput
    none?: DeviceWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type CartItemListRelationFilter = {
    every?: CartItemWhereInput
    some?: CartItemWhereInput
    none?: CartItemWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type PermissionListRelationFilter = {
    every?: PermissionWhereInput
    some?: PermissionWhereInput
    none?: PermissionWhereInput
  }

  export type RoleListRelationFilter = {
    every?: RoleWhereInput
    some?: RoleWhereInput
    none?: RoleWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type CategoryListRelationFilter = {
    every?: CategoryWhereInput
    some?: CategoryWhereInput
    none?: CategoryWhereInput
  }

  export type VariantListRelationFilter = {
    every?: VariantWhereInput
    some?: VariantWhereInput
    none?: VariantWhereInput
  }

  export type VariantOptionListRelationFilter = {
    every?: VariantOptionWhereInput
    some?: VariantOptionWhereInput
    none?: VariantOptionWhereInput
  }

  export type SKUListRelationFilter = {
    every?: SKUWhereInput
    some?: SKUWhereInput
    none?: SKUWhereInput
  }

  export type LanguageListRelationFilter = {
    every?: LanguageWhereInput
    some?: LanguageWhereInput
    none?: LanguageWhereInput
  }

  export type BrandListRelationFilter = {
    every?: BrandWhereInput
    some?: BrandWhereInput
    none?: BrandWhereInput
  }

  export type MessageListRelationFilter = {
    every?: MessageWhereInput
    some?: MessageWhereInput
    none?: MessageWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type DeviceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CartItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VariantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type VariantOptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SKUOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LanguageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BrandOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MessageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    password?: SortOrder
    phoneNumber?: SortOrder
    avatar?: SortOrder
    totpSecret?: SortOrder
    status?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type LanguageScalarRelationFilter = {
    is?: LanguageWhereInput
    isNot?: LanguageWhereInput
  }

  export type UserTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    languageId?: SortOrder
    address?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type UserTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    languageId?: SortOrder
    address?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    languageId?: SortOrder
    address?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumVerificationCodeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeFilter<$PrismaModel> | $Enums.VerificationCodeType
  }

  export type VerificationCodeEmailCodeTypeCompoundUniqueInput = {
    email: string
    code: string
    type: $Enums.VerificationCodeType
  }

  export type VerificationCodeCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type VerificationCodeMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    code?: SortOrder
    type?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type VerificationCodeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel> | $Enums.VerificationCodeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
    _max?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DeviceCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type DeviceMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userAgent?: SortOrder
    ip?: SortOrder
    lastActive?: SortOrder
    createdAt?: SortOrder
    isActive?: SortOrder
  }

  export type DeviceSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DeviceScalarRelationFilter = {
    is?: DeviceWhereInput
    isNot?: DeviceWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenAvgOrderByAggregateInput = {
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    token?: SortOrder
    userId?: SortOrder
    deviceId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
  }

  export type RefreshTokenSumOrderByAggregateInput = {
    userId?: SortOrder
    deviceId?: SortOrder
  }

  export type EnumHTTPMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodFilter<$PrismaModel> | $Enums.HTTPMethod
  }

  export type PermissionCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type PermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    path?: SortOrder
    method?: SortOrder
    module?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PermissionSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumHTTPMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel> | $Enums.HTTPMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumHTTPMethodFilter<$PrismaModel>
    _max?: NestedEnumHTTPMethodFilter<$PrismaModel>
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    isActive?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BrandScalarRelationFilter = {
    is?: BrandWhereInput
    isNot?: BrandWhereInput
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    images?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    id?: SortOrder
    base_price?: SortOrder
    virtual_price?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type ProductTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type CategoryNullableScalarRelationFilter = {
    is?: CategoryWhereInput | null
    isNot?: CategoryWhereInput | null
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    id?: SortOrder
    parentCategoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type CategoryScalarRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type CategoryTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type CategoryTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CategoryTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    categoryId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type VariantCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantAvgOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type VariantMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantSumOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type VariantScalarRelationFilter = {
    is?: VariantWhereInput
    isNot?: VariantWhereInput
  }

  export type VariantOptionCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantOptionAvgOrderByAggregateInput = {
    id?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type VariantOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantOptionMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VariantOptionSumOrderByAggregateInput = {
    id?: SortOrder
    variantId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type ProductSKUSnapshotListRelationFilter = {
    every?: ProductSKUSnapshotWhereInput
    some?: ProductSKUSnapshotWhereInput
    none?: ProductSKUSnapshotWhereInput
  }

  export type ProductSKUSnapshotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SKUCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    images?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SKUAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type SKUMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SKUMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SKUSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    productId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type BrandCountOrderByAggregateInput = {
    id?: SortOrder
    logo?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandAvgOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type BrandMaxOrderByAggregateInput = {
    id?: SortOrder
    logo?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandMinOrderByAggregateInput = {
    id?: SortOrder
    logo?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandSumOrderByAggregateInput = {
    id?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type BrandTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    brandId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandTranslationAvgOrderByAggregateInput = {
    id?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type BrandTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    brandId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    brandId?: SortOrder
    languageId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BrandTranslationSumOrderByAggregateInput = {
    id?: SortOrder
    brandId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type SKUScalarRelationFilter = {
    is?: SKUWhereInput
    isNot?: SKUWhereInput
  }

  export type CartItemCountOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CartItemAvgOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
  }

  export type CartItemMaxOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CartItemMinOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CartItemSumOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    skuId?: SortOrder
    userId?: SortOrder
  }

  export type SKUNullableScalarRelationFilter = {
    is?: SKUWhereInput | null
    isNot?: SKUWhereInput | null
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type ProductSKUSnapshotCountOrderByAggregateInput = {
    id?: SortOrder
    productName?: SortOrder
    price?: SortOrder
    images?: SortOrder
    skuValue?: SortOrder
    skuId?: SortOrder
    orderId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductSKUSnapshotAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    skuId?: SortOrder
    orderId?: SortOrder
  }

  export type ProductSKUSnapshotMaxOrderByAggregateInput = {
    id?: SortOrder
    productName?: SortOrder
    price?: SortOrder
    skuValue?: SortOrder
    skuId?: SortOrder
    orderId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductSKUSnapshotMinOrderByAggregateInput = {
    id?: SortOrder
    productName?: SortOrder
    price?: SortOrder
    skuValue?: SortOrder
    skuId?: SortOrder
    orderId?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductSKUSnapshotSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    skuId?: SortOrder
    orderId?: SortOrder
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
    deletedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    createdById?: SortOrder
    updatedById?: SortOrder
    deletedById?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    id?: SortOrder
    rating?: SortOrder
    productId?: SortOrder
    userId?: SortOrder
  }

  export type PaymentTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    code?: SortOrder
    transactionContent?: SortOrder
    referenceNumber?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionAvgOrderByAggregateInput = {
    id?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
  }

  export type PaymentTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    code?: SortOrder
    transactionContent?: SortOrder
    referenceNumber?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    gateway?: SortOrder
    transactionDate?: SortOrder
    accountNumber?: SortOrder
    subAccount?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
    code?: SortOrder
    transactionContent?: SortOrder
    referenceNumber?: SortOrder
    body?: SortOrder
    createdAt?: SortOrder
  }

  export type PaymentTransactionSumOrderByAggregateInput = {
    id?: SortOrder
    amountIn?: SortOrder
    amountOut?: SortOrder
    accumulated?: SortOrder
  }

  export type MessageCountOrderByAggregateInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
    content?: SortOrder
    readAt?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageAvgOrderByAggregateInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
  }

  export type MessageMaxOrderByAggregateInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
    content?: SortOrder
    readAt?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageMinOrderByAggregateInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
    content?: SortOrder
    readAt?: SortOrder
    createdAt?: SortOrder
  }

  export type MessageSumOrderByAggregateInput = {
    id?: SortOrder
    fromUserId?: SortOrder
    toUserId?: SortOrder
  }

  export type UserTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput> | UserTranslationCreateWithoutLanguageInput[] | UserTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutLanguageInput | UserTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: UserTranslationCreateManyLanguageInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput> | ProductTranslationCreateWithoutLanguageInput[] | ProductTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutLanguageInput | ProductTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ProductTranslationCreateManyLanguageInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type BrandTranslationCreateNestedManyWithoutLanguageInput = {
    create?: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput> | BrandTranslationCreateWithoutLanguageInput[] | BrandTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutLanguageInput | BrandTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: BrandTranslationCreateManyLanguageInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedLanguagesInput = {
    create?: XOR<UserCreateWithoutCreatedLanguagesInput, UserUncheckedCreateWithoutCreatedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedLanguagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedLanguagesInput = {
    create?: XOR<UserCreateWithoutUpdatedLanguagesInput, UserUncheckedCreateWithoutUpdatedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedLanguagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedLanguagesInput = {
    create?: XOR<UserCreateWithoutDeletedLanguagesInput, UserUncheckedCreateWithoutDeletedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedLanguagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput> | UserTranslationCreateWithoutLanguageInput[] | UserTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutLanguageInput | UserTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: UserTranslationCreateManyLanguageInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput> | ProductTranslationCreateWithoutLanguageInput[] | ProductTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutLanguageInput | ProductTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: ProductTranslationCreateManyLanguageInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput = {
    create?: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput> | BrandTranslationCreateWithoutLanguageInput[] | BrandTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutLanguageInput | BrandTranslationCreateOrConnectWithoutLanguageInput[]
    createMany?: BrandTranslationCreateManyLanguageInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput> | UserTranslationCreateWithoutLanguageInput[] | UserTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutLanguageInput | UserTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutLanguageInput | UserTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: UserTranslationCreateManyLanguageInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutLanguageInput | UserTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutLanguageInput | UserTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput> | ProductTranslationCreateWithoutLanguageInput[] | ProductTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutLanguageInput | ProductTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutLanguageInput | ProductTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ProductTranslationCreateManyLanguageInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutLanguageInput | ProductTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutLanguageInput | ProductTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutLanguageInput | CategoryTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type BrandTranslationUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput> | BrandTranslationCreateWithoutLanguageInput[] | BrandTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutLanguageInput | BrandTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutLanguageInput | BrandTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: BrandTranslationCreateManyLanguageInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutLanguageInput | BrandTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutLanguageInput | BrandTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedLanguagesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedLanguagesInput, UserUncheckedCreateWithoutCreatedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedLanguagesInput
    upsert?: UserUpsertWithoutCreatedLanguagesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedLanguagesInput, UserUpdateWithoutCreatedLanguagesInput>, UserUncheckedUpdateWithoutCreatedLanguagesInput>
  }

  export type UserUpdateOneWithoutUpdatedLanguagesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedLanguagesInput, UserUncheckedCreateWithoutUpdatedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedLanguagesInput
    upsert?: UserUpsertWithoutUpdatedLanguagesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedLanguagesInput, UserUpdateWithoutUpdatedLanguagesInput>, UserUncheckedUpdateWithoutUpdatedLanguagesInput>
  }

  export type UserUpdateOneWithoutDeletedLanguagesNestedInput = {
    create?: XOR<UserCreateWithoutDeletedLanguagesInput, UserUncheckedCreateWithoutDeletedLanguagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedLanguagesInput
    upsert?: UserUpsertWithoutDeletedLanguagesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedLanguagesInput, UserUpdateWithoutDeletedLanguagesInput>, UserUncheckedUpdateWithoutDeletedLanguagesInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput> | UserTranslationCreateWithoutLanguageInput[] | UserTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutLanguageInput | UserTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutLanguageInput | UserTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: UserTranslationCreateManyLanguageInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutLanguageInput | UserTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutLanguageInput | UserTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput> | ProductTranslationCreateWithoutLanguageInput[] | ProductTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutLanguageInput | ProductTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutLanguageInput | ProductTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: ProductTranslationCreateManyLanguageInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutLanguageInput | ProductTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutLanguageInput | ProductTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput> | CategoryTranslationCreateWithoutLanguageInput[] | CategoryTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutLanguageInput | CategoryTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: CategoryTranslationCreateManyLanguageInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput | CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutLanguageInput | CategoryTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput> | BrandTranslationCreateWithoutLanguageInput[] | BrandTranslationUncheckedCreateWithoutLanguageInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutLanguageInput | BrandTranslationCreateOrConnectWithoutLanguageInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutLanguageInput | BrandTranslationUpsertWithWhereUniqueWithoutLanguageInput[]
    createMany?: BrandTranslationCreateManyLanguageInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutLanguageInput | BrandTranslationUpdateWithWhereUniqueWithoutLanguageInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutLanguageInput | BrandTranslationUpdateManyWithWhereWithoutLanguageInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type RoleCreateNestedOneWithoutUsersInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    connect?: RoleWhereUniqueInput
  }

  export type DeviceCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type CartItemCreateNestedManyWithoutUserInput = {
    create?: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput> | CartItemCreateWithoutUserInput[] | CartItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutUserInput | CartItemCreateOrConnectWithoutUserInput[]
    createMany?: CartItemCreateManyUserInputEnvelope
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput> | PermissionCreateWithoutCreatedByInput[] | PermissionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutCreatedByInput | PermissionCreateOrConnectWithoutCreatedByInput[]
    createMany?: PermissionCreateManyCreatedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput> | PermissionCreateWithoutUpdatedByInput[] | PermissionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUpdatedByInput | PermissionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: PermissionCreateManyUpdatedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput> | PermissionCreateWithoutDeletedByInput[] | PermissionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutDeletedByInput | PermissionCreateOrConnectWithoutDeletedByInput[]
    createMany?: PermissionCreateManyDeletedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput> | RoleCreateWithoutCreatedByInput[] | RoleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutCreatedByInput | RoleCreateOrConnectWithoutCreatedByInput[]
    createMany?: RoleCreateManyCreatedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput> | RoleCreateWithoutUpdatedByInput[] | RoleUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUpdatedByInput | RoleCreateOrConnectWithoutUpdatedByInput[]
    createMany?: RoleCreateManyUpdatedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput> | RoleCreateWithoutDeletedByInput[] | RoleUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutDeletedByInput | RoleCreateOrConnectWithoutDeletedByInput[]
    createMany?: RoleCreateManyDeletedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput> | ProductCreateWithoutDeletedByInput[] | ProductUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutDeletedByInput | ProductCreateOrConnectWithoutDeletedByInput[]
    createMany?: ProductCreateManyDeletedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput> | CategoryCreateWithoutCreatedByInput[] | CategoryUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByInput | CategoryCreateOrConnectWithoutCreatedByInput[]
    createMany?: CategoryCreateManyCreatedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput> | CategoryCreateWithoutUpdatedByInput[] | CategoryUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByInput | CategoryCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CategoryCreateManyUpdatedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput> | CategoryCreateWithoutDeletedByInput[] | CategoryUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutDeletedByInput | CategoryCreateOrConnectWithoutDeletedByInput[]
    createMany?: CategoryCreateManyDeletedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type VariantCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput> | VariantCreateWithoutCreatedByInput[] | VariantUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutCreatedByInput | VariantCreateOrConnectWithoutCreatedByInput[]
    createMany?: VariantCreateManyCreatedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput> | VariantCreateWithoutUpdatedByInput[] | VariantUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutUpdatedByInput | VariantCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VariantCreateManyUpdatedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput> | VariantCreateWithoutDeletedByInput[] | VariantUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutDeletedByInput | VariantCreateOrConnectWithoutDeletedByInput[]
    createMany?: VariantCreateManyDeletedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantOptionCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput> | VariantOptionCreateWithoutCreatedByInput[] | VariantOptionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutCreatedByInput | VariantOptionCreateOrConnectWithoutCreatedByInput[]
    createMany?: VariantOptionCreateManyCreatedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type VariantOptionCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput> | VariantOptionCreateWithoutUpdatedByInput[] | VariantOptionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutUpdatedByInput | VariantOptionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VariantOptionCreateManyUpdatedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type VariantOptionCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput> | VariantOptionCreateWithoutDeletedByInput[] | VariantOptionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutDeletedByInput | VariantOptionCreateOrConnectWithoutDeletedByInput[]
    createMany?: VariantOptionCreateManyDeletedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type SKUCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput> | SKUCreateWithoutCreatedByInput[] | SKUUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutCreatedByInput | SKUCreateOrConnectWithoutCreatedByInput[]
    createMany?: SKUCreateManyCreatedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type SKUCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput> | SKUCreateWithoutUpdatedByInput[] | SKUUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutUpdatedByInput | SKUCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SKUCreateManyUpdatedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type SKUCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput> | SKUCreateWithoutDeletedByInput[] | SKUUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutDeletedByInput | SKUCreateOrConnectWithoutDeletedByInput[]
    createMany?: SKUCreateManyDeletedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput> | LanguageCreateWithoutCreatedByInput[] | LanguageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutCreatedByInput | LanguageCreateOrConnectWithoutCreatedByInput[]
    createMany?: LanguageCreateManyCreatedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput> | LanguageCreateWithoutUpdatedByInput[] | LanguageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUpdatedByInput | LanguageCreateOrConnectWithoutUpdatedByInput[]
    createMany?: LanguageCreateManyUpdatedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput> | LanguageCreateWithoutDeletedByInput[] | LanguageUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutDeletedByInput | LanguageCreateOrConnectWithoutDeletedByInput[]
    createMany?: LanguageCreateManyDeletedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput> | BrandCreateWithoutCreatedByInput[] | BrandUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByInput | BrandCreateOrConnectWithoutCreatedByInput[]
    createMany?: BrandCreateManyCreatedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput> | BrandCreateWithoutUpdatedByInput[] | BrandUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByInput | BrandCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BrandCreateManyUpdatedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput> | BrandCreateWithoutDeletedByInput[] | BrandUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutDeletedByInput | BrandCreateOrConnectWithoutDeletedByInput[]
    createMany?: BrandCreateManyDeletedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput> | ProductTranslationCreateWithoutCreatedByInput[] | ProductTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutCreatedByInput | ProductTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductTranslationCreateManyCreatedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput> | ProductTranslationCreateWithoutUpdatedByInput[] | ProductTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutUpdatedByInput | ProductTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductTranslationCreateManyUpdatedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput> | ProductTranslationCreateWithoutDeletedByInput[] | ProductTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutDeletedByInput | ProductTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: ProductTranslationCreateManyDeletedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput> | CategoryTranslationCreateWithoutCreatedByInput[] | CategoryTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCreatedByInput | CategoryTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: CategoryTranslationCreateManyCreatedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput> | CategoryTranslationCreateWithoutUpdatedByInput[] | CategoryTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutUpdatedByInput | CategoryTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CategoryTranslationCreateManyUpdatedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput> | CategoryTranslationCreateWithoutDeletedByInput[] | CategoryTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutDeletedByInput | CategoryTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: CategoryTranslationCreateManyDeletedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type BrandTranslationCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput> | BrandTranslationCreateWithoutCreatedByInput[] | BrandTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutCreatedByInput | BrandTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: BrandTranslationCreateManyCreatedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type BrandTranslationCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput> | BrandTranslationCreateWithoutUpdatedByInput[] | BrandTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutUpdatedByInput | BrandTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BrandTranslationCreateManyUpdatedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type BrandTranslationCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput> | BrandTranslationCreateWithoutDeletedByInput[] | BrandTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutDeletedByInput | BrandTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: BrandTranslationCreateManyDeletedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput> | OrderCreateWithoutCreatedByInput[] | OrderUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCreatedByInput | OrderCreateOrConnectWithoutCreatedByInput[]
    createMany?: OrderCreateManyCreatedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput> | OrderCreateWithoutUpdatedByInput[] | OrderUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUpdatedByInput | OrderCreateOrConnectWithoutUpdatedByInput[]
    createMany?: OrderCreateManyUpdatedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput> | OrderCreateWithoutDeletedByInput[] | OrderUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeletedByInput | OrderCreateOrConnectWithoutDeletedByInput[]
    createMany?: OrderCreateManyDeletedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserTranslationCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput> | UserTranslationCreateWithoutCreatedByInput[] | UserTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutCreatedByInput | UserTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserTranslationCreateManyCreatedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput> | UserTranslationCreateWithoutUpdatedByInput[] | UserTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUpdatedByInput | UserTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserTranslationCreateManyUpdatedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput> | UserTranslationCreateWithoutDeletedByInput[] | UserTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutDeletedByInput | UserTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: UserTranslationCreateManyDeletedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationCreateNestedManyWithoutUserInput = {
    create?: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput> | UserTranslationCreateWithoutUserInput[] | UserTranslationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUserInput | UserTranslationCreateOrConnectWithoutUserInput[]
    createMany?: UserTranslationCreateManyUserInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutFromUserInput = {
    create?: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput> | MessageCreateWithoutFromUserInput[] | MessageUncheckedCreateWithoutFromUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutFromUserInput | MessageCreateOrConnectWithoutFromUserInput[]
    createMany?: MessageCreateManyFromUserInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageCreateNestedManyWithoutToUserInput = {
    create?: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput> | MessageCreateWithoutToUserInput[] | MessageUncheckedCreateWithoutToUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutToUserInput | MessageCreateOrConnectWithoutToUserInput[]
    createMany?: MessageCreateManyToUserInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedUsersInput = {
    create?: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutUpdatedUsersInput = {
    create?: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutDeletedUsersInput = {
    create?: XOR<UserCreateWithoutDeletedUsersInput, UserUncheckedCreateWithoutDeletedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedUsersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput> | UserCreateWithoutDeletedByInput[] | UserUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDeletedByInput | UserCreateOrConnectWithoutDeletedByInput[]
    createMany?: UserCreateManyDeletedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type DeviceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type CartItemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput> | CartItemCreateWithoutUserInput[] | CartItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutUserInput | CartItemCreateOrConnectWithoutUserInput[]
    createMany?: CartItemCreateManyUserInputEnvelope
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput> | PermissionCreateWithoutCreatedByInput[] | PermissionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutCreatedByInput | PermissionCreateOrConnectWithoutCreatedByInput[]
    createMany?: PermissionCreateManyCreatedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput> | PermissionCreateWithoutUpdatedByInput[] | PermissionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUpdatedByInput | PermissionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: PermissionCreateManyUpdatedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type PermissionUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput> | PermissionCreateWithoutDeletedByInput[] | PermissionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutDeletedByInput | PermissionCreateOrConnectWithoutDeletedByInput[]
    createMany?: PermissionCreateManyDeletedByInputEnvelope
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput> | RoleCreateWithoutCreatedByInput[] | RoleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutCreatedByInput | RoleCreateOrConnectWithoutCreatedByInput[]
    createMany?: RoleCreateManyCreatedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput> | RoleCreateWithoutUpdatedByInput[] | RoleUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUpdatedByInput | RoleCreateOrConnectWithoutUpdatedByInput[]
    createMany?: RoleCreateManyUpdatedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type RoleUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput> | RoleCreateWithoutDeletedByInput[] | RoleUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutDeletedByInput | RoleCreateOrConnectWithoutDeletedByInput[]
    createMany?: RoleCreateManyDeletedByInputEnvelope
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput> | ProductCreateWithoutDeletedByInput[] | ProductUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutDeletedByInput | ProductCreateOrConnectWithoutDeletedByInput[]
    createMany?: ProductCreateManyDeletedByInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput> | CategoryCreateWithoutCreatedByInput[] | CategoryUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByInput | CategoryCreateOrConnectWithoutCreatedByInput[]
    createMany?: CategoryCreateManyCreatedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput> | CategoryCreateWithoutUpdatedByInput[] | CategoryUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByInput | CategoryCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CategoryCreateManyUpdatedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput> | CategoryCreateWithoutDeletedByInput[] | CategoryUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutDeletedByInput | CategoryCreateOrConnectWithoutDeletedByInput[]
    createMany?: CategoryCreateManyDeletedByInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type VariantUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput> | VariantCreateWithoutCreatedByInput[] | VariantUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutCreatedByInput | VariantCreateOrConnectWithoutCreatedByInput[]
    createMany?: VariantCreateManyCreatedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput> | VariantCreateWithoutUpdatedByInput[] | VariantUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutUpdatedByInput | VariantCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VariantCreateManyUpdatedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput> | VariantCreateWithoutDeletedByInput[] | VariantUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutDeletedByInput | VariantCreateOrConnectWithoutDeletedByInput[]
    createMany?: VariantCreateManyDeletedByInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput> | VariantOptionCreateWithoutCreatedByInput[] | VariantOptionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutCreatedByInput | VariantOptionCreateOrConnectWithoutCreatedByInput[]
    createMany?: VariantOptionCreateManyCreatedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput> | VariantOptionCreateWithoutUpdatedByInput[] | VariantOptionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutUpdatedByInput | VariantOptionCreateOrConnectWithoutUpdatedByInput[]
    createMany?: VariantOptionCreateManyUpdatedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput> | VariantOptionCreateWithoutDeletedByInput[] | VariantOptionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutDeletedByInput | VariantOptionCreateOrConnectWithoutDeletedByInput[]
    createMany?: VariantOptionCreateManyDeletedByInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type SKUUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput> | SKUCreateWithoutCreatedByInput[] | SKUUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutCreatedByInput | SKUCreateOrConnectWithoutCreatedByInput[]
    createMany?: SKUCreateManyCreatedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type SKUUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput> | SKUCreateWithoutUpdatedByInput[] | SKUUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutUpdatedByInput | SKUCreateOrConnectWithoutUpdatedByInput[]
    createMany?: SKUCreateManyUpdatedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type SKUUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput> | SKUCreateWithoutDeletedByInput[] | SKUUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutDeletedByInput | SKUCreateOrConnectWithoutDeletedByInput[]
    createMany?: SKUCreateManyDeletedByInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput> | LanguageCreateWithoutCreatedByInput[] | LanguageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutCreatedByInput | LanguageCreateOrConnectWithoutCreatedByInput[]
    createMany?: LanguageCreateManyCreatedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput> | LanguageCreateWithoutUpdatedByInput[] | LanguageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUpdatedByInput | LanguageCreateOrConnectWithoutUpdatedByInput[]
    createMany?: LanguageCreateManyUpdatedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type LanguageUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput> | LanguageCreateWithoutDeletedByInput[] | LanguageUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutDeletedByInput | LanguageCreateOrConnectWithoutDeletedByInput[]
    createMany?: LanguageCreateManyDeletedByInputEnvelope
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput> | BrandCreateWithoutCreatedByInput[] | BrandUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByInput | BrandCreateOrConnectWithoutCreatedByInput[]
    createMany?: BrandCreateManyCreatedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput> | BrandCreateWithoutUpdatedByInput[] | BrandUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByInput | BrandCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BrandCreateManyUpdatedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type BrandUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput> | BrandCreateWithoutDeletedByInput[] | BrandUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutDeletedByInput | BrandCreateOrConnectWithoutDeletedByInput[]
    createMany?: BrandCreateManyDeletedByInputEnvelope
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput> | ProductTranslationCreateWithoutCreatedByInput[] | ProductTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutCreatedByInput | ProductTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: ProductTranslationCreateManyCreatedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput> | ProductTranslationCreateWithoutUpdatedByInput[] | ProductTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutUpdatedByInput | ProductTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: ProductTranslationCreateManyUpdatedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput> | ProductTranslationCreateWithoutDeletedByInput[] | ProductTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutDeletedByInput | ProductTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: ProductTranslationCreateManyDeletedByInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput> | CategoryTranslationCreateWithoutCreatedByInput[] | CategoryTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCreatedByInput | CategoryTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: CategoryTranslationCreateManyCreatedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput> | CategoryTranslationCreateWithoutUpdatedByInput[] | CategoryTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutUpdatedByInput | CategoryTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: CategoryTranslationCreateManyUpdatedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput> | CategoryTranslationCreateWithoutDeletedByInput[] | CategoryTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutDeletedByInput | CategoryTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: CategoryTranslationCreateManyDeletedByInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput> | BrandTranslationCreateWithoutCreatedByInput[] | BrandTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutCreatedByInput | BrandTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: BrandTranslationCreateManyCreatedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput> | BrandTranslationCreateWithoutUpdatedByInput[] | BrandTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutUpdatedByInput | BrandTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: BrandTranslationCreateManyUpdatedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput> | BrandTranslationCreateWithoutDeletedByInput[] | BrandTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutDeletedByInput | BrandTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: BrandTranslationCreateManyDeletedByInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput> | OrderCreateWithoutCreatedByInput[] | OrderUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCreatedByInput | OrderCreateOrConnectWithoutCreatedByInput[]
    createMany?: OrderCreateManyCreatedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput> | OrderCreateWithoutUpdatedByInput[] | OrderUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUpdatedByInput | OrderCreateOrConnectWithoutUpdatedByInput[]
    createMany?: OrderCreateManyUpdatedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput> | OrderCreateWithoutDeletedByInput[] | OrderUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeletedByInput | OrderCreateOrConnectWithoutDeletedByInput[]
    createMany?: OrderCreateManyDeletedByInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput> | UserTranslationCreateWithoutCreatedByInput[] | UserTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutCreatedByInput | UserTranslationCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserTranslationCreateManyCreatedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput> | UserTranslationCreateWithoutUpdatedByInput[] | UserTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUpdatedByInput | UserTranslationCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserTranslationCreateManyUpdatedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput> | UserTranslationCreateWithoutDeletedByInput[] | UserTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutDeletedByInput | UserTranslationCreateOrConnectWithoutDeletedByInput[]
    createMany?: UserTranslationCreateManyDeletedByInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type UserTranslationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput> | UserTranslationCreateWithoutUserInput[] | UserTranslationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUserInput | UserTranslationCreateOrConnectWithoutUserInput[]
    createMany?: UserTranslationCreateManyUserInputEnvelope
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutFromUserInput = {
    create?: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput> | MessageCreateWithoutFromUserInput[] | MessageUncheckedCreateWithoutFromUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutFromUserInput | MessageCreateOrConnectWithoutFromUserInput[]
    createMany?: MessageCreateManyFromUserInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type MessageUncheckedCreateNestedManyWithoutToUserInput = {
    create?: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput> | MessageCreateWithoutToUserInput[] | MessageUncheckedCreateWithoutToUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutToUserInput | MessageCreateOrConnectWithoutToUserInput[]
    createMany?: MessageCreateManyToUserInputEnvelope
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCreatedByInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutUpdatedByInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutDeletedByInput = {
    create?: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput> | UserCreateWithoutDeletedByInput[] | UserUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDeletedByInput | UserCreateOrConnectWithoutDeletedByInput[]
    createMany?: UserCreateManyDeletedByInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type RoleUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    connectOrCreate?: RoleCreateOrConnectWithoutUsersInput
    upsert?: RoleUpsertWithoutUsersInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutUsersInput, RoleUpdateWithoutUsersInput>, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type DeviceUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type CartItemUpdateManyWithoutUserNestedInput = {
    create?: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput> | CartItemCreateWithoutUserInput[] | CartItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutUserInput | CartItemCreateOrConnectWithoutUserInput[]
    upsert?: CartItemUpsertWithWhereUniqueWithoutUserInput | CartItemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CartItemCreateManyUserInputEnvelope
    set?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    disconnect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    delete?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    update?: CartItemUpdateWithWhereUniqueWithoutUserInput | CartItemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CartItemUpdateManyWithWhereWithoutUserInput | CartItemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput> | PermissionCreateWithoutCreatedByInput[] | PermissionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutCreatedByInput | PermissionCreateOrConnectWithoutCreatedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutCreatedByInput | PermissionUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PermissionCreateManyCreatedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutCreatedByInput | PermissionUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutCreatedByInput | PermissionUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput> | PermissionCreateWithoutUpdatedByInput[] | PermissionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUpdatedByInput | PermissionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUpdatedByInput | PermissionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: PermissionCreateManyUpdatedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUpdatedByInput | PermissionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUpdatedByInput | PermissionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput> | PermissionCreateWithoutDeletedByInput[] | PermissionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutDeletedByInput | PermissionCreateOrConnectWithoutDeletedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutDeletedByInput | PermissionUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: PermissionCreateManyDeletedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutDeletedByInput | PermissionUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutDeletedByInput | PermissionUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput> | RoleCreateWithoutCreatedByInput[] | RoleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutCreatedByInput | RoleCreateOrConnectWithoutCreatedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutCreatedByInput | RoleUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: RoleCreateManyCreatedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutCreatedByInput | RoleUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutCreatedByInput | RoleUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput> | RoleCreateWithoutUpdatedByInput[] | RoleUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUpdatedByInput | RoleCreateOrConnectWithoutUpdatedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUpdatedByInput | RoleUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: RoleCreateManyUpdatedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUpdatedByInput | RoleUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUpdatedByInput | RoleUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput> | RoleCreateWithoutDeletedByInput[] | RoleUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutDeletedByInput | RoleCreateOrConnectWithoutDeletedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutDeletedByInput | RoleUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: RoleCreateManyDeletedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutDeletedByInput | RoleUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutDeletedByInput | RoleUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByInput | ProductUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByInput | ProductUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByInput | ProductUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByInput | ProductUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByInput | ProductUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByInput | ProductUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput> | ProductCreateWithoutDeletedByInput[] | ProductUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutDeletedByInput | ProductCreateOrConnectWithoutDeletedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutDeletedByInput | ProductUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: ProductCreateManyDeletedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutDeletedByInput | ProductUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutDeletedByInput | ProductUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput> | CategoryCreateWithoutCreatedByInput[] | CategoryUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByInput | CategoryCreateOrConnectWithoutCreatedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByInput | CategoryUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CategoryCreateManyCreatedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByInput | CategoryUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByInput | CategoryUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput> | CategoryCreateWithoutUpdatedByInput[] | CategoryUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByInput | CategoryCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CategoryCreateManyUpdatedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByInput | CategoryUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput> | CategoryCreateWithoutDeletedByInput[] | CategoryUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutDeletedByInput | CategoryCreateOrConnectWithoutDeletedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutDeletedByInput | CategoryUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: CategoryCreateManyDeletedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutDeletedByInput | CategoryUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutDeletedByInput | CategoryUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type VariantUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput> | VariantCreateWithoutCreatedByInput[] | VariantUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutCreatedByInput | VariantCreateOrConnectWithoutCreatedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutCreatedByInput | VariantUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VariantCreateManyCreatedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutCreatedByInput | VariantUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutCreatedByInput | VariantUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput> | VariantCreateWithoutUpdatedByInput[] | VariantUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutUpdatedByInput | VariantCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutUpdatedByInput | VariantUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VariantCreateManyUpdatedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutUpdatedByInput | VariantUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutUpdatedByInput | VariantUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput> | VariantCreateWithoutDeletedByInput[] | VariantUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutDeletedByInput | VariantCreateOrConnectWithoutDeletedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutDeletedByInput | VariantUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: VariantCreateManyDeletedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutDeletedByInput | VariantUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutDeletedByInput | VariantUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantOptionUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput> | VariantOptionCreateWithoutCreatedByInput[] | VariantOptionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutCreatedByInput | VariantOptionCreateOrConnectWithoutCreatedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutCreatedByInput | VariantOptionUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VariantOptionCreateManyCreatedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutCreatedByInput | VariantOptionUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutCreatedByInput | VariantOptionUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type VariantOptionUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput> | VariantOptionCreateWithoutUpdatedByInput[] | VariantOptionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutUpdatedByInput | VariantOptionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutUpdatedByInput | VariantOptionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VariantOptionCreateManyUpdatedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutUpdatedByInput | VariantOptionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutUpdatedByInput | VariantOptionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type VariantOptionUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput> | VariantOptionCreateWithoutDeletedByInput[] | VariantOptionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutDeletedByInput | VariantOptionCreateOrConnectWithoutDeletedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutDeletedByInput | VariantOptionUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: VariantOptionCreateManyDeletedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutDeletedByInput | VariantOptionUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutDeletedByInput | VariantOptionUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type SKUUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput> | SKUCreateWithoutCreatedByInput[] | SKUUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutCreatedByInput | SKUCreateOrConnectWithoutCreatedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutCreatedByInput | SKUUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: SKUCreateManyCreatedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutCreatedByInput | SKUUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutCreatedByInput | SKUUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type SKUUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput> | SKUCreateWithoutUpdatedByInput[] | SKUUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutUpdatedByInput | SKUCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutUpdatedByInput | SKUUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SKUCreateManyUpdatedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutUpdatedByInput | SKUUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutUpdatedByInput | SKUUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type SKUUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput> | SKUCreateWithoutDeletedByInput[] | SKUUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutDeletedByInput | SKUCreateOrConnectWithoutDeletedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutDeletedByInput | SKUUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: SKUCreateManyDeletedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutDeletedByInput | SKUUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutDeletedByInput | SKUUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput> | LanguageCreateWithoutCreatedByInput[] | LanguageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutCreatedByInput | LanguageCreateOrConnectWithoutCreatedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutCreatedByInput | LanguageUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: LanguageCreateManyCreatedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutCreatedByInput | LanguageUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutCreatedByInput | LanguageUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput> | LanguageCreateWithoutUpdatedByInput[] | LanguageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUpdatedByInput | LanguageCreateOrConnectWithoutUpdatedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUpdatedByInput | LanguageUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: LanguageCreateManyUpdatedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUpdatedByInput | LanguageUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUpdatedByInput | LanguageUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput> | LanguageCreateWithoutDeletedByInput[] | LanguageUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutDeletedByInput | LanguageCreateOrConnectWithoutDeletedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutDeletedByInput | LanguageUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: LanguageCreateManyDeletedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutDeletedByInput | LanguageUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutDeletedByInput | LanguageUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput> | BrandCreateWithoutCreatedByInput[] | BrandUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByInput | BrandCreateOrConnectWithoutCreatedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCreatedByInput | BrandUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BrandCreateManyCreatedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCreatedByInput | BrandUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCreatedByInput | BrandUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput> | BrandCreateWithoutUpdatedByInput[] | BrandUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByInput | BrandCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutUpdatedByInput | BrandUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BrandCreateManyUpdatedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutUpdatedByInput | BrandUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutUpdatedByInput | BrandUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput> | BrandCreateWithoutDeletedByInput[] | BrandUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutDeletedByInput | BrandCreateOrConnectWithoutDeletedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutDeletedByInput | BrandUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: BrandCreateManyDeletedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutDeletedByInput | BrandUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutDeletedByInput | BrandUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput> | ProductTranslationCreateWithoutCreatedByInput[] | ProductTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutCreatedByInput | ProductTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutCreatedByInput | ProductTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductTranslationCreateManyCreatedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutCreatedByInput | ProductTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutCreatedByInput | ProductTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput> | ProductTranslationCreateWithoutUpdatedByInput[] | ProductTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutUpdatedByInput | ProductTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | ProductTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductTranslationCreateManyUpdatedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | ProductTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutUpdatedByInput | ProductTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput> | ProductTranslationCreateWithoutDeletedByInput[] | ProductTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutDeletedByInput | ProductTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutDeletedByInput | ProductTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: ProductTranslationCreateManyDeletedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutDeletedByInput | ProductTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutDeletedByInput | ProductTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput> | CategoryTranslationCreateWithoutCreatedByInput[] | CategoryTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCreatedByInput | CategoryTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCreatedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CategoryTranslationCreateManyCreatedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCreatedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCreatedByInput | CategoryTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput> | CategoryTranslationCreateWithoutUpdatedByInput[] | CategoryTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutUpdatedByInput | CategoryTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CategoryTranslationCreateManyUpdatedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutUpdatedByInput | CategoryTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput> | CategoryTranslationCreateWithoutDeletedByInput[] | CategoryTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutDeletedByInput | CategoryTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutDeletedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: CategoryTranslationCreateManyDeletedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutDeletedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutDeletedByInput | CategoryTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type BrandTranslationUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput> | BrandTranslationCreateWithoutCreatedByInput[] | BrandTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutCreatedByInput | BrandTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutCreatedByInput | BrandTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BrandTranslationCreateManyCreatedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutCreatedByInput | BrandTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutCreatedByInput | BrandTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type BrandTranslationUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput> | BrandTranslationCreateWithoutUpdatedByInput[] | BrandTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutUpdatedByInput | BrandTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | BrandTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BrandTranslationCreateManyUpdatedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | BrandTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutUpdatedByInput | BrandTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type BrandTranslationUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput> | BrandTranslationCreateWithoutDeletedByInput[] | BrandTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutDeletedByInput | BrandTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutDeletedByInput | BrandTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: BrandTranslationCreateManyDeletedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutDeletedByInput | BrandTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutDeletedByInput | BrandTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput> | OrderCreateWithoutCreatedByInput[] | OrderUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCreatedByInput | OrderCreateOrConnectWithoutCreatedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCreatedByInput | OrderUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: OrderCreateManyCreatedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCreatedByInput | OrderUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCreatedByInput | OrderUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput> | OrderCreateWithoutUpdatedByInput[] | OrderUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUpdatedByInput | OrderCreateOrConnectWithoutUpdatedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUpdatedByInput | OrderUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: OrderCreateManyUpdatedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUpdatedByInput | OrderUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUpdatedByInput | OrderUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput> | OrderCreateWithoutDeletedByInput[] | OrderUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeletedByInput | OrderCreateOrConnectWithoutDeletedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutDeletedByInput | OrderUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: OrderCreateManyDeletedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutDeletedByInput | OrderUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutDeletedByInput | OrderUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserTranslationUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput> | UserTranslationCreateWithoutCreatedByInput[] | UserTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutCreatedByInput | UserTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutCreatedByInput | UserTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserTranslationCreateManyCreatedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutCreatedByInput | UserTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutCreatedByInput | UserTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput> | UserTranslationCreateWithoutUpdatedByInput[] | UserTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUpdatedByInput | UserTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | UserTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserTranslationCreateManyUpdatedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | UserTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutUpdatedByInput | UserTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput> | UserTranslationCreateWithoutDeletedByInput[] | UserTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutDeletedByInput | UserTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutDeletedByInput | UserTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: UserTranslationCreateManyDeletedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutDeletedByInput | UserTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutDeletedByInput | UserTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput> | UserTranslationCreateWithoutUserInput[] | UserTranslationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUserInput | UserTranslationCreateOrConnectWithoutUserInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutUserInput | UserTranslationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserTranslationCreateManyUserInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutUserInput | UserTranslationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutUserInput | UserTranslationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutFromUserNestedInput = {
    create?: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput> | MessageCreateWithoutFromUserInput[] | MessageUncheckedCreateWithoutFromUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutFromUserInput | MessageCreateOrConnectWithoutFromUserInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutFromUserInput | MessageUpsertWithWhereUniqueWithoutFromUserInput[]
    createMany?: MessageCreateManyFromUserInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutFromUserInput | MessageUpdateWithWhereUniqueWithoutFromUserInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutFromUserInput | MessageUpdateManyWithWhereWithoutFromUserInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUpdateManyWithoutToUserNestedInput = {
    create?: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput> | MessageCreateWithoutToUserInput[] | MessageUncheckedCreateWithoutToUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutToUserInput | MessageCreateOrConnectWithoutToUserInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutToUserInput | MessageUpsertWithWhereUniqueWithoutToUserInput[]
    createMany?: MessageCreateManyToUserInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutToUserInput | MessageUpdateWithWhereUniqueWithoutToUserInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutToUserInput | MessageUpdateManyWithWhereWithoutToUserInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedUsersNestedInput = {
    create?: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUsersInput
    upsert?: UserUpsertWithoutCreatedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedUsersInput, UserUpdateWithoutCreatedUsersInput>, UserUncheckedUpdateWithoutCreatedUsersInput>
  }

  export type UserUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByInput | UserUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByInput | UserUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByInput | UserUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutUpdatedUsersNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUsersInput
    upsert?: UserUpsertWithoutUpdatedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedUsersInput, UserUpdateWithoutUpdatedUsersInput>, UserUncheckedUpdateWithoutUpdatedUsersInput>
  }

  export type UserUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByInput | UserUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByInput | UserUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByInput | UserUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutDeletedUsersNestedInput = {
    create?: XOR<UserCreateWithoutDeletedUsersInput, UserUncheckedCreateWithoutDeletedUsersInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedUsersInput
    upsert?: UserUpsertWithoutDeletedUsersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedUsersInput, UserUpdateWithoutDeletedUsersInput>, UserUncheckedUpdateWithoutDeletedUsersInput>
  }

  export type UserUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput> | UserCreateWithoutDeletedByInput[] | UserUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDeletedByInput | UserCreateOrConnectWithoutDeletedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDeletedByInput | UserUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: UserCreateManyDeletedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDeletedByInput | UserUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDeletedByInput | UserUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DeviceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput> | DeviceCreateWithoutUserInput[] | DeviceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DeviceCreateOrConnectWithoutUserInput | DeviceCreateOrConnectWithoutUserInput[]
    upsert?: DeviceUpsertWithWhereUniqueWithoutUserInput | DeviceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DeviceCreateManyUserInputEnvelope
    set?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    disconnect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    delete?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    connect?: DeviceWhereUniqueInput | DeviceWhereUniqueInput[]
    update?: DeviceUpdateWithWhereUniqueWithoutUserInput | DeviceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DeviceUpdateManyWithWhereWithoutUserInput | DeviceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type CartItemUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput> | CartItemCreateWithoutUserInput[] | CartItemUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutUserInput | CartItemCreateOrConnectWithoutUserInput[]
    upsert?: CartItemUpsertWithWhereUniqueWithoutUserInput | CartItemUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CartItemCreateManyUserInputEnvelope
    set?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    disconnect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    delete?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    update?: CartItemUpdateWithWhereUniqueWithoutUserInput | CartItemUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CartItemUpdateManyWithWhereWithoutUserInput | CartItemUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput> | PermissionCreateWithoutCreatedByInput[] | PermissionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutCreatedByInput | PermissionCreateOrConnectWithoutCreatedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutCreatedByInput | PermissionUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: PermissionCreateManyCreatedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutCreatedByInput | PermissionUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutCreatedByInput | PermissionUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput> | PermissionCreateWithoutUpdatedByInput[] | PermissionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutUpdatedByInput | PermissionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutUpdatedByInput | PermissionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: PermissionCreateManyUpdatedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutUpdatedByInput | PermissionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutUpdatedByInput | PermissionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type PermissionUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput> | PermissionCreateWithoutDeletedByInput[] | PermissionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutDeletedByInput | PermissionCreateOrConnectWithoutDeletedByInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutDeletedByInput | PermissionUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: PermissionCreateManyDeletedByInputEnvelope
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutDeletedByInput | PermissionUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutDeletedByInput | PermissionUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput> | RoleCreateWithoutCreatedByInput[] | RoleUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutCreatedByInput | RoleCreateOrConnectWithoutCreatedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutCreatedByInput | RoleUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: RoleCreateManyCreatedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutCreatedByInput | RoleUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutCreatedByInput | RoleUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput> | RoleCreateWithoutUpdatedByInput[] | RoleUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutUpdatedByInput | RoleCreateOrConnectWithoutUpdatedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutUpdatedByInput | RoleUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: RoleCreateManyUpdatedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutUpdatedByInput | RoleUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutUpdatedByInput | RoleUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type RoleUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput> | RoleCreateWithoutDeletedByInput[] | RoleUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutDeletedByInput | RoleCreateOrConnectWithoutDeletedByInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutDeletedByInput | RoleUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: RoleCreateManyDeletedByInputEnvelope
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutDeletedByInput | RoleUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutDeletedByInput | RoleUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput> | ProductCreateWithoutCreatedByInput[] | ProductUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCreatedByInput | ProductCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCreatedByInput | ProductUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductCreateManyCreatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCreatedByInput | ProductUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCreatedByInput | ProductUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput> | ProductCreateWithoutUpdatedByInput[] | ProductUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutUpdatedByInput | ProductCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutUpdatedByInput | ProductUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductCreateManyUpdatedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutUpdatedByInput | ProductUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutUpdatedByInput | ProductUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput> | ProductCreateWithoutDeletedByInput[] | ProductUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutDeletedByInput | ProductCreateOrConnectWithoutDeletedByInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutDeletedByInput | ProductUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: ProductCreateManyDeletedByInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutDeletedByInput | ProductUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutDeletedByInput | ProductUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput> | CategoryCreateWithoutCreatedByInput[] | CategoryUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutCreatedByInput | CategoryCreateOrConnectWithoutCreatedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutCreatedByInput | CategoryUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CategoryCreateManyCreatedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutCreatedByInput | CategoryUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutCreatedByInput | CategoryUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput> | CategoryCreateWithoutUpdatedByInput[] | CategoryUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutUpdatedByInput | CategoryCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutUpdatedByInput | CategoryUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CategoryCreateManyUpdatedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutUpdatedByInput | CategoryUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutUpdatedByInput | CategoryUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput> | CategoryCreateWithoutDeletedByInput[] | CategoryUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutDeletedByInput | CategoryCreateOrConnectWithoutDeletedByInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutDeletedByInput | CategoryUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: CategoryCreateManyDeletedByInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutDeletedByInput | CategoryUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutDeletedByInput | CategoryUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type VariantUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput> | VariantCreateWithoutCreatedByInput[] | VariantUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutCreatedByInput | VariantCreateOrConnectWithoutCreatedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutCreatedByInput | VariantUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VariantCreateManyCreatedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutCreatedByInput | VariantUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutCreatedByInput | VariantUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput> | VariantCreateWithoutUpdatedByInput[] | VariantUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutUpdatedByInput | VariantCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutUpdatedByInput | VariantUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VariantCreateManyUpdatedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutUpdatedByInput | VariantUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutUpdatedByInput | VariantUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput> | VariantCreateWithoutDeletedByInput[] | VariantUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutDeletedByInput | VariantCreateOrConnectWithoutDeletedByInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutDeletedByInput | VariantUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: VariantCreateManyDeletedByInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutDeletedByInput | VariantUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutDeletedByInput | VariantUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput> | VariantOptionCreateWithoutCreatedByInput[] | VariantOptionUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutCreatedByInput | VariantOptionCreateOrConnectWithoutCreatedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutCreatedByInput | VariantOptionUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: VariantOptionCreateManyCreatedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutCreatedByInput | VariantOptionUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutCreatedByInput | VariantOptionUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput> | VariantOptionCreateWithoutUpdatedByInput[] | VariantOptionUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutUpdatedByInput | VariantOptionCreateOrConnectWithoutUpdatedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutUpdatedByInput | VariantOptionUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: VariantOptionCreateManyUpdatedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutUpdatedByInput | VariantOptionUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutUpdatedByInput | VariantOptionUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput> | VariantOptionCreateWithoutDeletedByInput[] | VariantOptionUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutDeletedByInput | VariantOptionCreateOrConnectWithoutDeletedByInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutDeletedByInput | VariantOptionUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: VariantOptionCreateManyDeletedByInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutDeletedByInput | VariantOptionUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutDeletedByInput | VariantOptionUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type SKUUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput> | SKUCreateWithoutCreatedByInput[] | SKUUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutCreatedByInput | SKUCreateOrConnectWithoutCreatedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutCreatedByInput | SKUUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: SKUCreateManyCreatedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutCreatedByInput | SKUUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutCreatedByInput | SKUUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type SKUUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput> | SKUCreateWithoutUpdatedByInput[] | SKUUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutUpdatedByInput | SKUCreateOrConnectWithoutUpdatedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutUpdatedByInput | SKUUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: SKUCreateManyUpdatedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutUpdatedByInput | SKUUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutUpdatedByInput | SKUUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type SKUUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput> | SKUCreateWithoutDeletedByInput[] | SKUUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutDeletedByInput | SKUCreateOrConnectWithoutDeletedByInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutDeletedByInput | SKUUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: SKUCreateManyDeletedByInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutDeletedByInput | SKUUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutDeletedByInput | SKUUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput> | LanguageCreateWithoutCreatedByInput[] | LanguageUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutCreatedByInput | LanguageCreateOrConnectWithoutCreatedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutCreatedByInput | LanguageUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: LanguageCreateManyCreatedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutCreatedByInput | LanguageUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutCreatedByInput | LanguageUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput> | LanguageCreateWithoutUpdatedByInput[] | LanguageUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutUpdatedByInput | LanguageCreateOrConnectWithoutUpdatedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutUpdatedByInput | LanguageUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: LanguageCreateManyUpdatedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutUpdatedByInput | LanguageUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutUpdatedByInput | LanguageUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type LanguageUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput> | LanguageCreateWithoutDeletedByInput[] | LanguageUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: LanguageCreateOrConnectWithoutDeletedByInput | LanguageCreateOrConnectWithoutDeletedByInput[]
    upsert?: LanguageUpsertWithWhereUniqueWithoutDeletedByInput | LanguageUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: LanguageCreateManyDeletedByInputEnvelope
    set?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    disconnect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    delete?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    connect?: LanguageWhereUniqueInput | LanguageWhereUniqueInput[]
    update?: LanguageUpdateWithWhereUniqueWithoutDeletedByInput | LanguageUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: LanguageUpdateManyWithWhereWithoutDeletedByInput | LanguageUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput> | BrandCreateWithoutCreatedByInput[] | BrandUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutCreatedByInput | BrandCreateOrConnectWithoutCreatedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutCreatedByInput | BrandUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BrandCreateManyCreatedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutCreatedByInput | BrandUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutCreatedByInput | BrandUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput> | BrandCreateWithoutUpdatedByInput[] | BrandUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutUpdatedByInput | BrandCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutUpdatedByInput | BrandUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BrandCreateManyUpdatedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutUpdatedByInput | BrandUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutUpdatedByInput | BrandUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type BrandUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput> | BrandCreateWithoutDeletedByInput[] | BrandUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandCreateOrConnectWithoutDeletedByInput | BrandCreateOrConnectWithoutDeletedByInput[]
    upsert?: BrandUpsertWithWhereUniqueWithoutDeletedByInput | BrandUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: BrandCreateManyDeletedByInputEnvelope
    set?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    disconnect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    delete?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    connect?: BrandWhereUniqueInput | BrandWhereUniqueInput[]
    update?: BrandUpdateWithWhereUniqueWithoutDeletedByInput | BrandUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: BrandUpdateManyWithWhereWithoutDeletedByInput | BrandUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: BrandScalarWhereInput | BrandScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput> | ProductTranslationCreateWithoutCreatedByInput[] | ProductTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutCreatedByInput | ProductTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutCreatedByInput | ProductTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: ProductTranslationCreateManyCreatedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutCreatedByInput | ProductTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutCreatedByInput | ProductTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput> | ProductTranslationCreateWithoutUpdatedByInput[] | ProductTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutUpdatedByInput | ProductTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | ProductTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: ProductTranslationCreateManyUpdatedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | ProductTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutUpdatedByInput | ProductTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput> | ProductTranslationCreateWithoutDeletedByInput[] | ProductTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutDeletedByInput | ProductTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutDeletedByInput | ProductTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: ProductTranslationCreateManyDeletedByInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutDeletedByInput | ProductTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutDeletedByInput | ProductTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput> | CategoryTranslationCreateWithoutCreatedByInput[] | CategoryTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCreatedByInput | CategoryTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCreatedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: CategoryTranslationCreateManyCreatedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCreatedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCreatedByInput | CategoryTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput> | CategoryTranslationCreateWithoutUpdatedByInput[] | CategoryTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutUpdatedByInput | CategoryTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: CategoryTranslationCreateManyUpdatedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutUpdatedByInput | CategoryTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput> | CategoryTranslationCreateWithoutDeletedByInput[] | CategoryTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutDeletedByInput | CategoryTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutDeletedByInput | CategoryTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: CategoryTranslationCreateManyDeletedByInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutDeletedByInput | CategoryTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutDeletedByInput | CategoryTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput> | BrandTranslationCreateWithoutCreatedByInput[] | BrandTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutCreatedByInput | BrandTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutCreatedByInput | BrandTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: BrandTranslationCreateManyCreatedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutCreatedByInput | BrandTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutCreatedByInput | BrandTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput> | BrandTranslationCreateWithoutUpdatedByInput[] | BrandTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutUpdatedByInput | BrandTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | BrandTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: BrandTranslationCreateManyUpdatedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | BrandTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutUpdatedByInput | BrandTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput> | BrandTranslationCreateWithoutDeletedByInput[] | BrandTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutDeletedByInput | BrandTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutDeletedByInput | BrandTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: BrandTranslationCreateManyDeletedByInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutDeletedByInput | BrandTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutDeletedByInput | BrandTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput> | OrderCreateWithoutCreatedByInput[] | OrderUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCreatedByInput | OrderCreateOrConnectWithoutCreatedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCreatedByInput | OrderUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: OrderCreateManyCreatedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCreatedByInput | OrderUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCreatedByInput | OrderUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput> | OrderCreateWithoutUpdatedByInput[] | OrderUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUpdatedByInput | OrderCreateOrConnectWithoutUpdatedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUpdatedByInput | OrderUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: OrderCreateManyUpdatedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUpdatedByInput | OrderUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUpdatedByInput | OrderUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput> | OrderCreateWithoutDeletedByInput[] | OrderUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutDeletedByInput | OrderCreateOrConnectWithoutDeletedByInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutDeletedByInput | OrderUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: OrderCreateManyDeletedByInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutDeletedByInput | OrderUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutDeletedByInput | OrderUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput> | UserTranslationCreateWithoutCreatedByInput[] | UserTranslationUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutCreatedByInput | UserTranslationCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutCreatedByInput | UserTranslationUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserTranslationCreateManyCreatedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutCreatedByInput | UserTranslationUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutCreatedByInput | UserTranslationUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput> | UserTranslationCreateWithoutUpdatedByInput[] | UserTranslationUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUpdatedByInput | UserTranslationCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutUpdatedByInput | UserTranslationUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserTranslationCreateManyUpdatedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutUpdatedByInput | UserTranslationUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutUpdatedByInput | UserTranslationUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput> | UserTranslationCreateWithoutDeletedByInput[] | UserTranslationUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutDeletedByInput | UserTranslationCreateOrConnectWithoutDeletedByInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutDeletedByInput | UserTranslationUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: UserTranslationCreateManyDeletedByInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutDeletedByInput | UserTranslationUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutDeletedByInput | UserTranslationUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type UserTranslationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput> | UserTranslationCreateWithoutUserInput[] | UserTranslationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserTranslationCreateOrConnectWithoutUserInput | UserTranslationCreateOrConnectWithoutUserInput[]
    upsert?: UserTranslationUpsertWithWhereUniqueWithoutUserInput | UserTranslationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserTranslationCreateManyUserInputEnvelope
    set?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    disconnect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    delete?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    connect?: UserTranslationWhereUniqueInput | UserTranslationWhereUniqueInput[]
    update?: UserTranslationUpdateWithWhereUniqueWithoutUserInput | UserTranslationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserTranslationUpdateManyWithWhereWithoutUserInput | UserTranslationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutFromUserNestedInput = {
    create?: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput> | MessageCreateWithoutFromUserInput[] | MessageUncheckedCreateWithoutFromUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutFromUserInput | MessageCreateOrConnectWithoutFromUserInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutFromUserInput | MessageUpsertWithWhereUniqueWithoutFromUserInput[]
    createMany?: MessageCreateManyFromUserInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutFromUserInput | MessageUpdateWithWhereUniqueWithoutFromUserInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutFromUserInput | MessageUpdateManyWithWhereWithoutFromUserInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type MessageUncheckedUpdateManyWithoutToUserNestedInput = {
    create?: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput> | MessageCreateWithoutToUserInput[] | MessageUncheckedCreateWithoutToUserInput[]
    connectOrCreate?: MessageCreateOrConnectWithoutToUserInput | MessageCreateOrConnectWithoutToUserInput[]
    upsert?: MessageUpsertWithWhereUniqueWithoutToUserInput | MessageUpsertWithWhereUniqueWithoutToUserInput[]
    createMany?: MessageCreateManyToUserInputEnvelope
    set?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    disconnect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    delete?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    connect?: MessageWhereUniqueInput | MessageWhereUniqueInput[]
    update?: MessageUpdateWithWhereUniqueWithoutToUserInput | MessageUpdateWithWhereUniqueWithoutToUserInput[]
    updateMany?: MessageUpdateManyWithWhereWithoutToUserInput | MessageUpdateManyWithWhereWithoutToUserInput[]
    deleteMany?: MessageScalarWhereInput | MessageScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCreatedByNestedInput = {
    create?: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput> | UserCreateWithoutCreatedByInput[] | UserUncheckedCreateWithoutCreatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCreatedByInput | UserCreateOrConnectWithoutCreatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCreatedByInput | UserUpsertWithWhereUniqueWithoutCreatedByInput[]
    createMany?: UserCreateManyCreatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCreatedByInput | UserUpdateWithWhereUniqueWithoutCreatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCreatedByInput | UserUpdateManyWithWhereWithoutCreatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput> | UserCreateWithoutUpdatedByInput[] | UserUncheckedCreateWithoutUpdatedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedByInput | UserCreateOrConnectWithoutUpdatedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutUpdatedByInput | UserUpsertWithWhereUniqueWithoutUpdatedByInput[]
    createMany?: UserCreateManyUpdatedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutUpdatedByInput | UserUpdateWithWhereUniqueWithoutUpdatedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutUpdatedByInput | UserUpdateManyWithWhereWithoutUpdatedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutDeletedByNestedInput = {
    create?: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput> | UserCreateWithoutDeletedByInput[] | UserUncheckedCreateWithoutDeletedByInput[]
    connectOrCreate?: UserCreateOrConnectWithoutDeletedByInput | UserCreateOrConnectWithoutDeletedByInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutDeletedByInput | UserUpsertWithWhereUniqueWithoutDeletedByInput[]
    createMany?: UserCreateManyDeletedByInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutDeletedByInput | UserUpdateWithWhereUniqueWithoutDeletedByInput[]
    updateMany?: UserUpdateManyWithWhereWithoutDeletedByInput | UserUpdateManyWithWhereWithoutDeletedByInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUserTranslationsInput = {
    create?: XOR<UserCreateWithoutUserTranslationsInput, UserUncheckedCreateWithoutUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutUserTranslationsInput = {
    create?: XOR<LanguageCreateWithoutUserTranslationsInput, LanguageUncheckedCreateWithoutUserTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutUserTranslationsInput
    connect?: LanguageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedUserTranslationsInput = {
    create?: XOR<UserCreateWithoutCreatedUserTranslationsInput, UserUncheckedCreateWithoutCreatedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUserTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedUserTranslationsInput = {
    create?: XOR<UserCreateWithoutUpdatedUserTranslationsInput, UserUncheckedCreateWithoutUpdatedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUserTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedUserTranslationsInput = {
    create?: XOR<UserCreateWithoutDeletedUserTranslationsInput, UserUncheckedCreateWithoutDeletedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedUserTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutUserTranslationsInput, UserUncheckedCreateWithoutUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTranslationsInput
    upsert?: UserUpsertWithoutUserTranslationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserTranslationsInput, UserUpdateWithoutUserTranslationsInput>, UserUncheckedUpdateWithoutUserTranslationsInput>
  }

  export type LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput = {
    create?: XOR<LanguageCreateWithoutUserTranslationsInput, LanguageUncheckedCreateWithoutUserTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutUserTranslationsInput
    upsert?: LanguageUpsertWithoutUserTranslationsInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutUserTranslationsInput, LanguageUpdateWithoutUserTranslationsInput>, LanguageUncheckedUpdateWithoutUserTranslationsInput>
  }

  export type UserUpdateOneWithoutCreatedUserTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedUserTranslationsInput, UserUncheckedCreateWithoutCreatedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedUserTranslationsInput
    upsert?: UserUpsertWithoutCreatedUserTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedUserTranslationsInput, UserUpdateWithoutCreatedUserTranslationsInput>, UserUncheckedUpdateWithoutCreatedUserTranslationsInput>
  }

  export type UserUpdateOneWithoutUpdatedUserTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedUserTranslationsInput, UserUncheckedCreateWithoutUpdatedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedUserTranslationsInput
    upsert?: UserUpsertWithoutUpdatedUserTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedUserTranslationsInput, UserUpdateWithoutUpdatedUserTranslationsInput>, UserUncheckedUpdateWithoutUpdatedUserTranslationsInput>
  }

  export type UserUpdateOneWithoutDeletedUserTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedUserTranslationsInput, UserUncheckedCreateWithoutDeletedUserTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedUserTranslationsInput
    upsert?: UserUpsertWithoutDeletedUserTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedUserTranslationsInput, UserUpdateWithoutDeletedUserTranslationsInput>, UserUncheckedUpdateWithoutDeletedUserTranslationsInput>
  }

  export type EnumVerificationCodeTypeFieldUpdateOperationsInput = {
    set?: $Enums.VerificationCodeType
  }

  export type UserCreateNestedOneWithoutDevicesInput = {
    create?: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevicesInput
    connect?: UserWhereUniqueInput
  }

  export type RefreshTokenCreateNestedManyWithoutDeviceInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type UserUpdateOneRequiredWithoutDevicesNestedInput = {
    create?: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDevicesInput
    upsert?: UserUpsertWithoutDevicesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDevicesInput, UserUpdateWithoutDevicesInput>, UserUncheckedUpdateWithoutDevicesInput>
  }

  export type RefreshTokenUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput | RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput | RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutDeviceInput | RefreshTokenUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput> | RefreshTokenCreateWithoutDeviceInput[] | RefreshTokenUncheckedCreateWithoutDeviceInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutDeviceInput | RefreshTokenCreateOrConnectWithoutDeviceInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput | RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput[]
    createMany?: RefreshTokenCreateManyDeviceInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput | RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutDeviceInput | RefreshTokenUpdateManyWithWhereWithoutDeviceInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
  }

  export type DeviceCreateNestedOneWithoutRefreshTokensInput = {
    create?: XOR<DeviceCreateWithoutRefreshTokensInput, DeviceUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutRefreshTokensInput
    connect?: DeviceWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokensInput
    upsert?: UserUpsertWithoutRefreshTokensInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokensInput, UserUpdateWithoutRefreshTokensInput>, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type DeviceUpdateOneRequiredWithoutRefreshTokensNestedInput = {
    create?: XOR<DeviceCreateWithoutRefreshTokensInput, DeviceUncheckedCreateWithoutRefreshTokensInput>
    connectOrCreate?: DeviceCreateOrConnectWithoutRefreshTokensInput
    upsert?: DeviceUpsertWithoutRefreshTokensInput
    connect?: DeviceWhereUniqueInput
    update?: XOR<XOR<DeviceUpdateToOneWithWhereWithoutRefreshTokensInput, DeviceUpdateWithoutRefreshTokensInput>, DeviceUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type RoleCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedPermissionsInput = {
    create?: XOR<UserCreateWithoutCreatedPermissionsInput, UserUncheckedCreateWithoutCreatedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedPermissionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedPermissionsInput = {
    create?: XOR<UserCreateWithoutUpdatedPermissionsInput, UserUncheckedCreateWithoutUpdatedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedPermissionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedPermissionsInput = {
    create?: XOR<UserCreateWithoutDeletedPermissionsInput, UserUncheckedCreateWithoutDeletedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedPermissionsInput
    connect?: UserWhereUniqueInput
  }

  export type RoleUncheckedCreateNestedManyWithoutPermissionsInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
  }

  export type EnumHTTPMethodFieldUpdateOperationsInput = {
    set?: $Enums.HTTPMethod
  }

  export type RoleUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionsInput | RoleUpsertWithWhereUniqueWithoutPermissionsInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionsInput | RoleUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionsInput | RoleUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedPermissionsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedPermissionsInput, UserUncheckedCreateWithoutCreatedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedPermissionsInput
    upsert?: UserUpsertWithoutCreatedPermissionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedPermissionsInput, UserUpdateWithoutCreatedPermissionsInput>, UserUncheckedUpdateWithoutCreatedPermissionsInput>
  }

  export type UserUpdateOneWithoutUpdatedPermissionsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedPermissionsInput, UserUncheckedCreateWithoutUpdatedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedPermissionsInput
    upsert?: UserUpsertWithoutUpdatedPermissionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedPermissionsInput, UserUpdateWithoutUpdatedPermissionsInput>, UserUncheckedUpdateWithoutUpdatedPermissionsInput>
  }

  export type UserUpdateOneWithoutDeletedPermissionsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedPermissionsInput, UserUncheckedCreateWithoutDeletedPermissionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedPermissionsInput
    upsert?: UserUpsertWithoutDeletedPermissionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedPermissionsInput, UserUpdateWithoutDeletedPermissionsInput>, UserUncheckedUpdateWithoutDeletedPermissionsInput>
  }

  export type RoleUncheckedUpdateManyWithoutPermissionsNestedInput = {
    create?: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput> | RoleCreateWithoutPermissionsInput[] | RoleUncheckedCreateWithoutPermissionsInput[]
    connectOrCreate?: RoleCreateOrConnectWithoutPermissionsInput | RoleCreateOrConnectWithoutPermissionsInput[]
    upsert?: RoleUpsertWithWhereUniqueWithoutPermissionsInput | RoleUpsertWithWhereUniqueWithoutPermissionsInput[]
    set?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    disconnect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    delete?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    connect?: RoleWhereUniqueInput | RoleWhereUniqueInput[]
    update?: RoleUpdateWithWhereUniqueWithoutPermissionsInput | RoleUpdateWithWhereUniqueWithoutPermissionsInput[]
    updateMany?: RoleUpdateManyWithWhereWithoutPermissionsInput | RoleUpdateManyWithWhereWithoutPermissionsInput[]
    deleteMany?: RoleScalarWhereInput | RoleScalarWhereInput[]
  }

  export type PermissionCreateNestedManyWithoutRolesInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedRolesInput = {
    create?: XOR<UserCreateWithoutCreatedRolesInput, UserUncheckedCreateWithoutCreatedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedRolesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedRolesInput = {
    create?: XOR<UserCreateWithoutUpdatedRolesInput, UserUncheckedCreateWithoutUpdatedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedRolesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedRolesInput = {
    create?: XOR<UserCreateWithoutDeletedRolesInput, UserUncheckedCreateWithoutDeletedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedRolesInput
    connect?: UserWhereUniqueInput
  }

  export type PermissionUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type PermissionUpdateManyWithoutRolesNestedInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRolesInput | PermissionUpsertWithWhereUniqueWithoutRolesInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRolesInput | PermissionUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRolesInput | PermissionUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedRolesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedRolesInput, UserUncheckedCreateWithoutCreatedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedRolesInput
    upsert?: UserUpsertWithoutCreatedRolesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedRolesInput, UserUpdateWithoutCreatedRolesInput>, UserUncheckedUpdateWithoutCreatedRolesInput>
  }

  export type UserUpdateOneWithoutUpdatedRolesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedRolesInput, UserUncheckedCreateWithoutUpdatedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedRolesInput
    upsert?: UserUpsertWithoutUpdatedRolesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedRolesInput, UserUpdateWithoutUpdatedRolesInput>, UserUncheckedUpdateWithoutUpdatedRolesInput>
  }

  export type UserUpdateOneWithoutDeletedRolesNestedInput = {
    create?: XOR<UserCreateWithoutDeletedRolesInput, UserUncheckedCreateWithoutDeletedRolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedRolesInput
    upsert?: UserUpsertWithoutDeletedRolesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedRolesInput, UserUpdateWithoutDeletedRolesInput>, UserUncheckedUpdateWithoutDeletedRolesInput>
  }

  export type PermissionUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput> | PermissionCreateWithoutRolesInput[] | PermissionUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: PermissionCreateOrConnectWithoutRolesInput | PermissionCreateOrConnectWithoutRolesInput[]
    upsert?: PermissionUpsertWithWhereUniqueWithoutRolesInput | PermissionUpsertWithWhereUniqueWithoutRolesInput[]
    set?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    disconnect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    delete?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    connect?: PermissionWhereUniqueInput | PermissionWhereUniqueInput[]
    update?: PermissionUpdateWithWhereUniqueWithoutRolesInput | PermissionUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: PermissionUpdateManyWithWhereWithoutRolesInput | PermissionUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput> | UserCreateWithoutRoleInput[] | UserUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: UserCreateOrConnectWithoutRoleInput | UserCreateOrConnectWithoutRoleInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutRoleInput | UserUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: UserCreateManyRoleInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutRoleInput | UserUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: UserUpdateManyWithWhereWithoutRoleInput | UserUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type ProductCreateimagesInput = {
    set: string[]
  }

  export type BrandCreateNestedOneWithoutProductsInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    connect?: BrandWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutProductsInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput> | CategoryCreateWithoutProductsInput[] | CategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput | CategoryCreateOrConnectWithoutProductsInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type VariantCreateNestedManyWithoutProductInput = {
    create?: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput> | VariantCreateWithoutProductInput[] | VariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutProductInput | VariantCreateOrConnectWithoutProductInput[]
    createMany?: VariantCreateManyProductInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type SKUCreateNestedManyWithoutProductInput = {
    create?: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput> | SKUCreateWithoutProductInput[] | SKUUncheckedCreateWithoutProductInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutProductInput | SKUCreateOrConnectWithoutProductInput[]
    createMany?: SKUCreateManyProductInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedProductsInput = {
    create?: XOR<UserCreateWithoutCreatedProductsInput, UserUncheckedCreateWithoutCreatedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedProductsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedProductsInput = {
    create?: XOR<UserCreateWithoutUpdatedProductsInput, UserUncheckedCreateWithoutUpdatedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedProductsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedProductsInput = {
    create?: XOR<UserCreateWithoutDeletedProductsInput, UserUncheckedCreateWithoutDeletedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedProductsInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput> | CategoryCreateWithoutProductsInput[] | CategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput | CategoryCreateOrConnectWithoutProductsInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type VariantUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput> | VariantCreateWithoutProductInput[] | VariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutProductInput | VariantCreateOrConnectWithoutProductInput[]
    createMany?: VariantCreateManyProductInputEnvelope
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
  }

  export type SKUUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput> | SKUCreateWithoutProductInput[] | SKUUncheckedCreateWithoutProductInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutProductInput | SKUCreateOrConnectWithoutProductInput[]
    createMany?: SKUCreateManyProductInputEnvelope
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BrandUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    upsert?: BrandUpsertWithoutProductsInput
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutProductsInput, BrandUpdateWithoutProductsInput>, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type CategoryUpdateManyWithoutProductsNestedInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput> | CategoryCreateWithoutProductsInput[] | CategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput | CategoryCreateOrConnectWithoutProductsInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutProductsInput | CategoryUpsertWithWhereUniqueWithoutProductsInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutProductsInput | CategoryUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutProductsInput | CategoryUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type VariantUpdateManyWithoutProductNestedInput = {
    create?: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput> | VariantCreateWithoutProductInput[] | VariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutProductInput | VariantCreateOrConnectWithoutProductInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutProductInput | VariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: VariantCreateManyProductInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutProductInput | VariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutProductInput | VariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type SKUUpdateManyWithoutProductNestedInput = {
    create?: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput> | SKUCreateWithoutProductInput[] | SKUUncheckedCreateWithoutProductInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutProductInput | SKUCreateOrConnectWithoutProductInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutProductInput | SKUUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: SKUCreateManyProductInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutProductInput | SKUUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutProductInput | SKUUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedProductsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedProductsInput, UserUncheckedCreateWithoutCreatedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedProductsInput
    upsert?: UserUpsertWithoutCreatedProductsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedProductsInput, UserUpdateWithoutCreatedProductsInput>, UserUncheckedUpdateWithoutCreatedProductsInput>
  }

  export type UserUpdateOneWithoutUpdatedProductsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedProductsInput, UserUncheckedCreateWithoutUpdatedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedProductsInput
    upsert?: UserUpsertWithoutUpdatedProductsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedProductsInput, UserUpdateWithoutUpdatedProductsInput>, UserUncheckedUpdateWithoutUpdatedProductsInput>
  }

  export type UserUpdateOneWithoutDeletedProductsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedProductsInput, UserUncheckedCreateWithoutDeletedProductsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedProductsInput
    upsert?: UserUpsertWithoutDeletedProductsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedProductsInput, UserUpdateWithoutDeletedProductsInput>, UserUncheckedUpdateWithoutDeletedProductsInput>
  }

  export type CategoryUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput> | CategoryCreateWithoutProductsInput[] | CategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput | CategoryCreateOrConnectWithoutProductsInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutProductsInput | CategoryUpsertWithWhereUniqueWithoutProductsInput[]
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutProductsInput | CategoryUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutProductsInput | CategoryUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type VariantUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput> | VariantCreateWithoutProductInput[] | VariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: VariantCreateOrConnectWithoutProductInput | VariantCreateOrConnectWithoutProductInput[]
    upsert?: VariantUpsertWithWhereUniqueWithoutProductInput | VariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: VariantCreateManyProductInputEnvelope
    set?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    disconnect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    delete?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    connect?: VariantWhereUniqueInput | VariantWhereUniqueInput[]
    update?: VariantUpdateWithWhereUniqueWithoutProductInput | VariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: VariantUpdateManyWithWhereWithoutProductInput | VariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: VariantScalarWhereInput | VariantScalarWhereInput[]
  }

  export type SKUUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput> | SKUCreateWithoutProductInput[] | SKUUncheckedCreateWithoutProductInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutProductInput | SKUCreateOrConnectWithoutProductInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutProductInput | SKUUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: SKUCreateManyProductInputEnvelope
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutProductInput | SKUUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutProductInput | SKUUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutProductTranslationsInput = {
    create?: XOR<ProductCreateWithoutProductTranslationsInput, ProductUncheckedCreateWithoutProductTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductTranslationsInput
    connect?: ProductWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutProductTranslationsInput = {
    create?: XOR<LanguageCreateWithoutProductTranslationsInput, LanguageUncheckedCreateWithoutProductTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutProductTranslationsInput
    connect?: LanguageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedProductTranslationsInput = {
    create?: XOR<UserCreateWithoutCreatedProductTranslationsInput, UserUncheckedCreateWithoutCreatedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedProductTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedProductTranslationsInput = {
    create?: XOR<UserCreateWithoutUpdatedProductTranslationsInput, UserUncheckedCreateWithoutUpdatedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedProductTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedProductTranslationsInput = {
    create?: XOR<UserCreateWithoutDeletedProductTranslationsInput, UserUncheckedCreateWithoutDeletedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedProductTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutProductTranslationsNestedInput = {
    create?: XOR<ProductCreateWithoutProductTranslationsInput, ProductUncheckedCreateWithoutProductTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductTranslationsInput
    upsert?: ProductUpsertWithoutProductTranslationsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductTranslationsInput, ProductUpdateWithoutProductTranslationsInput>, ProductUncheckedUpdateWithoutProductTranslationsInput>
  }

  export type LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput = {
    create?: XOR<LanguageCreateWithoutProductTranslationsInput, LanguageUncheckedCreateWithoutProductTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutProductTranslationsInput
    upsert?: LanguageUpsertWithoutProductTranslationsInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutProductTranslationsInput, LanguageUpdateWithoutProductTranslationsInput>, LanguageUncheckedUpdateWithoutProductTranslationsInput>
  }

  export type UserUpdateOneWithoutCreatedProductTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedProductTranslationsInput, UserUncheckedCreateWithoutCreatedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedProductTranslationsInput
    upsert?: UserUpsertWithoutCreatedProductTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedProductTranslationsInput, UserUpdateWithoutCreatedProductTranslationsInput>, UserUncheckedUpdateWithoutCreatedProductTranslationsInput>
  }

  export type UserUpdateOneWithoutUpdatedProductTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedProductTranslationsInput, UserUncheckedCreateWithoutUpdatedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedProductTranslationsInput
    upsert?: UserUpsertWithoutUpdatedProductTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedProductTranslationsInput, UserUpdateWithoutUpdatedProductTranslationsInput>, UserUncheckedUpdateWithoutUpdatedProductTranslationsInput>
  }

  export type UserUpdateOneWithoutDeletedProductTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedProductTranslationsInput, UserUncheckedCreateWithoutDeletedProductTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedProductTranslationsInput
    upsert?: UserUpsertWithoutDeletedProductTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedProductTranslationsInput, UserUpdateWithoutDeletedProductTranslationsInput>, UserUncheckedUpdateWithoutDeletedProductTranslationsInput>
  }

  export type ProductCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryCreateNestedOneWithoutChildrenCategoriesInput = {
    create?: XOR<CategoryCreateWithoutChildrenCategoriesInput, CategoryUncheckedCreateWithoutChildrenCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenCategoriesInput
    connect?: CategoryWhereUniqueInput
  }

  export type CategoryCreateNestedManyWithoutParentCategoryInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryTranslationCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedCategoriesInput = {
    create?: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedCategoriesInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedCategoriesInput = {
    create?: XOR<UserCreateWithoutDeletedCategoriesInput, UserUncheckedCreateWithoutDeletedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedCategoriesInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUncheckedCreateNestedManyWithoutParentCategoryInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
  }

  export type CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUpdateOneWithoutChildrenCategoriesNestedInput = {
    create?: XOR<CategoryCreateWithoutChildrenCategoriesInput, CategoryUncheckedCreateWithoutChildrenCategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutChildrenCategoriesInput
    upsert?: CategoryUpsertWithoutChildrenCategoriesInput
    disconnect?: CategoryWhereInput | boolean
    delete?: CategoryWhereInput | boolean
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutChildrenCategoriesInput, CategoryUpdateWithoutChildrenCategoriesInput>, CategoryUncheckedUpdateWithoutChildrenCategoriesInput>
  }

  export type CategoryUpdateManyWithoutParentCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentCategoryInput | CategoryUpsertWithWhereUniqueWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentCategoryInput | CategoryUpdateWithWhereUniqueWithoutParentCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentCategoryInput | CategoryUpdateManyWithWhereWithoutParentCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryTranslationUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoriesInput
    upsert?: UserUpsertWithoutCreatedCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedCategoriesInput, UserUpdateWithoutCreatedCategoriesInput>, UserUncheckedUpdateWithoutCreatedCategoriesInput>
  }

  export type UserUpdateOneWithoutUpdatedCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoriesInput
    upsert?: UserUpsertWithoutUpdatedCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedCategoriesInput, UserUpdateWithoutUpdatedCategoriesInput>, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
  }

  export type UserUpdateOneWithoutDeletedCategoriesNestedInput = {
    create?: XOR<UserCreateWithoutDeletedCategoriesInput, UserUncheckedCreateWithoutDeletedCategoriesInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedCategoriesInput
    upsert?: UserUpsertWithoutDeletedCategoriesInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedCategoriesInput, UserUpdateWithoutDeletedCategoriesInput>, UserUncheckedUpdateWithoutDeletedCategoriesInput>
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput = {
    create?: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput> | CategoryCreateWithoutParentCategoryInput[] | CategoryUncheckedCreateWithoutParentCategoryInput[]
    connectOrCreate?: CategoryCreateOrConnectWithoutParentCategoryInput | CategoryCreateOrConnectWithoutParentCategoryInput[]
    upsert?: CategoryUpsertWithWhereUniqueWithoutParentCategoryInput | CategoryUpsertWithWhereUniqueWithoutParentCategoryInput[]
    createMany?: CategoryCreateManyParentCategoryInputEnvelope
    set?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    disconnect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    delete?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    connect?: CategoryWhereUniqueInput | CategoryWhereUniqueInput[]
    update?: CategoryUpdateWithWhereUniqueWithoutParentCategoryInput | CategoryUpdateWithWhereUniqueWithoutParentCategoryInput[]
    updateMany?: CategoryUpdateManyWithWhereWithoutParentCategoryInput | CategoryUpdateManyWithWhereWithoutParentCategoryInput[]
    deleteMany?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput> | CategoryTranslationCreateWithoutCategoryInput[] | CategoryTranslationUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: CategoryTranslationCreateOrConnectWithoutCategoryInput | CategoryTranslationCreateOrConnectWithoutCategoryInput[]
    upsert?: CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: CategoryTranslationCreateManyCategoryInputEnvelope
    set?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    disconnect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    delete?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    connect?: CategoryTranslationWhereUniqueInput | CategoryTranslationWhereUniqueInput[]
    update?: CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput | CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: CategoryTranslationUpdateManyWithWhereWithoutCategoryInput | CategoryTranslationUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutCategoryTranslationsInput = {
    create?: XOR<CategoryCreateWithoutCategoryTranslationsInput, CategoryUncheckedCreateWithoutCategoryTranslationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryTranslationsInput
    connect?: CategoryWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutCategoryTranslationsInput = {
    create?: XOR<LanguageCreateWithoutCategoryTranslationsInput, LanguageUncheckedCreateWithoutCategoryTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutCategoryTranslationsInput
    connect?: LanguageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedCategoryTranslationsInput = {
    create?: XOR<UserCreateWithoutCreatedCategoryTranslationsInput, UserUncheckedCreateWithoutCreatedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoryTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoryTranslationsInput, UserUncheckedCreateWithoutUpdatedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoryTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedCategoryTranslationsInput = {
    create?: XOR<UserCreateWithoutDeletedCategoryTranslationsInput, UserUncheckedCreateWithoutDeletedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedCategoryTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput = {
    create?: XOR<CategoryCreateWithoutCategoryTranslationsInput, CategoryUncheckedCreateWithoutCategoryTranslationsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutCategoryTranslationsInput
    upsert?: CategoryUpsertWithoutCategoryTranslationsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutCategoryTranslationsInput, CategoryUpdateWithoutCategoryTranslationsInput>, CategoryUncheckedUpdateWithoutCategoryTranslationsInput>
  }

  export type LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput = {
    create?: XOR<LanguageCreateWithoutCategoryTranslationsInput, LanguageUncheckedCreateWithoutCategoryTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutCategoryTranslationsInput
    upsert?: LanguageUpsertWithoutCategoryTranslationsInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutCategoryTranslationsInput, LanguageUpdateWithoutCategoryTranslationsInput>, LanguageUncheckedUpdateWithoutCategoryTranslationsInput>
  }

  export type UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedCategoryTranslationsInput, UserUncheckedCreateWithoutCreatedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedCategoryTranslationsInput
    upsert?: UserUpsertWithoutCreatedCategoryTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedCategoryTranslationsInput, UserUpdateWithoutCreatedCategoryTranslationsInput>, UserUncheckedUpdateWithoutCreatedCategoryTranslationsInput>
  }

  export type UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedCategoryTranslationsInput, UserUncheckedCreateWithoutUpdatedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedCategoryTranslationsInput
    upsert?: UserUpsertWithoutUpdatedCategoryTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedCategoryTranslationsInput, UserUpdateWithoutUpdatedCategoryTranslationsInput>, UserUncheckedUpdateWithoutUpdatedCategoryTranslationsInput>
  }

  export type UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedCategoryTranslationsInput, UserUncheckedCreateWithoutDeletedCategoryTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedCategoryTranslationsInput
    upsert?: UserUpsertWithoutDeletedCategoryTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedCategoryTranslationsInput, UserUpdateWithoutDeletedCategoryTranslationsInput>, UserUncheckedUpdateWithoutDeletedCategoryTranslationsInput>
  }

  export type ProductCreateNestedOneWithoutVariantsInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    connect?: ProductWhereUniqueInput
  }

  export type VariantOptionCreateNestedManyWithoutVariantInput = {
    create?: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput> | VariantOptionCreateWithoutVariantInput[] | VariantOptionUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutVariantInput | VariantOptionCreateOrConnectWithoutVariantInput[]
    createMany?: VariantOptionCreateManyVariantInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedVariantsInput = {
    create?: XOR<UserCreateWithoutCreatedVariantsInput, UserUncheckedCreateWithoutCreatedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedVariantsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedVariantsInput = {
    create?: XOR<UserCreateWithoutUpdatedVariantsInput, UserUncheckedCreateWithoutUpdatedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedVariantsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedVariantsInput = {
    create?: XOR<UserCreateWithoutDeletedVariantsInput, UserUncheckedCreateWithoutDeletedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedVariantsInput
    connect?: UserWhereUniqueInput
  }

  export type VariantOptionUncheckedCreateNestedManyWithoutVariantInput = {
    create?: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput> | VariantOptionCreateWithoutVariantInput[] | VariantOptionUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutVariantInput | VariantOptionCreateOrConnectWithoutVariantInput[]
    createMany?: VariantOptionCreateManyVariantInputEnvelope
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type ProductUpdateOneRequiredWithoutVariantsNestedInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    upsert?: ProductUpsertWithoutVariantsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutVariantsInput, ProductUpdateWithoutVariantsInput>, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type VariantOptionUpdateManyWithoutVariantNestedInput = {
    create?: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput> | VariantOptionCreateWithoutVariantInput[] | VariantOptionUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutVariantInput | VariantOptionCreateOrConnectWithoutVariantInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutVariantInput | VariantOptionUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: VariantOptionCreateManyVariantInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutVariantInput | VariantOptionUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutVariantInput | VariantOptionUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedVariantsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedVariantsInput, UserUncheckedCreateWithoutCreatedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedVariantsInput
    upsert?: UserUpsertWithoutCreatedVariantsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedVariantsInput, UserUpdateWithoutCreatedVariantsInput>, UserUncheckedUpdateWithoutCreatedVariantsInput>
  }

  export type UserUpdateOneWithoutUpdatedVariantsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedVariantsInput, UserUncheckedCreateWithoutUpdatedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedVariantsInput
    upsert?: UserUpsertWithoutUpdatedVariantsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedVariantsInput, UserUpdateWithoutUpdatedVariantsInput>, UserUncheckedUpdateWithoutUpdatedVariantsInput>
  }

  export type UserUpdateOneWithoutDeletedVariantsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedVariantsInput, UserUncheckedCreateWithoutDeletedVariantsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedVariantsInput
    upsert?: UserUpsertWithoutDeletedVariantsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedVariantsInput, UserUpdateWithoutDeletedVariantsInput>, UserUncheckedUpdateWithoutDeletedVariantsInput>
  }

  export type VariantOptionUncheckedUpdateManyWithoutVariantNestedInput = {
    create?: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput> | VariantOptionCreateWithoutVariantInput[] | VariantOptionUncheckedCreateWithoutVariantInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutVariantInput | VariantOptionCreateOrConnectWithoutVariantInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutVariantInput | VariantOptionUpsertWithWhereUniqueWithoutVariantInput[]
    createMany?: VariantOptionCreateManyVariantInputEnvelope
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutVariantInput | VariantOptionUpdateWithWhereUniqueWithoutVariantInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutVariantInput | VariantOptionUpdateManyWithWhereWithoutVariantInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type VariantCreateNestedOneWithoutVariantOptionsInput = {
    create?: XOR<VariantCreateWithoutVariantOptionsInput, VariantUncheckedCreateWithoutVariantOptionsInput>
    connectOrCreate?: VariantCreateOrConnectWithoutVariantOptionsInput
    connect?: VariantWhereUniqueInput
  }

  export type SKUCreateNestedManyWithoutVariantOptionsInput = {
    create?: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput> | SKUCreateWithoutVariantOptionsInput[] | SKUUncheckedCreateWithoutVariantOptionsInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutVariantOptionsInput | SKUCreateOrConnectWithoutVariantOptionsInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedVariantOptionsInput = {
    create?: XOR<UserCreateWithoutCreatedVariantOptionsInput, UserUncheckedCreateWithoutCreatedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedVariantOptionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedVariantOptionsInput = {
    create?: XOR<UserCreateWithoutUpdatedVariantOptionsInput, UserUncheckedCreateWithoutUpdatedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedVariantOptionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedVariantOptionsInput = {
    create?: XOR<UserCreateWithoutDeletedVariantOptionsInput, UserUncheckedCreateWithoutDeletedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedVariantOptionsInput
    connect?: UserWhereUniqueInput
  }

  export type SKUUncheckedCreateNestedManyWithoutVariantOptionsInput = {
    create?: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput> | SKUCreateWithoutVariantOptionsInput[] | SKUUncheckedCreateWithoutVariantOptionsInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutVariantOptionsInput | SKUCreateOrConnectWithoutVariantOptionsInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
  }

  export type VariantUpdateOneRequiredWithoutVariantOptionsNestedInput = {
    create?: XOR<VariantCreateWithoutVariantOptionsInput, VariantUncheckedCreateWithoutVariantOptionsInput>
    connectOrCreate?: VariantCreateOrConnectWithoutVariantOptionsInput
    upsert?: VariantUpsertWithoutVariantOptionsInput
    connect?: VariantWhereUniqueInput
    update?: XOR<XOR<VariantUpdateToOneWithWhereWithoutVariantOptionsInput, VariantUpdateWithoutVariantOptionsInput>, VariantUncheckedUpdateWithoutVariantOptionsInput>
  }

  export type SKUUpdateManyWithoutVariantOptionsNestedInput = {
    create?: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput> | SKUCreateWithoutVariantOptionsInput[] | SKUUncheckedCreateWithoutVariantOptionsInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutVariantOptionsInput | SKUCreateOrConnectWithoutVariantOptionsInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutVariantOptionsInput | SKUUpsertWithWhereUniqueWithoutVariantOptionsInput[]
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutVariantOptionsInput | SKUUpdateWithWhereUniqueWithoutVariantOptionsInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutVariantOptionsInput | SKUUpdateManyWithWhereWithoutVariantOptionsInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedVariantOptionsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedVariantOptionsInput, UserUncheckedCreateWithoutCreatedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedVariantOptionsInput
    upsert?: UserUpsertWithoutCreatedVariantOptionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedVariantOptionsInput, UserUpdateWithoutCreatedVariantOptionsInput>, UserUncheckedUpdateWithoutCreatedVariantOptionsInput>
  }

  export type UserUpdateOneWithoutUpdatedVariantOptionsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedVariantOptionsInput, UserUncheckedCreateWithoutUpdatedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedVariantOptionsInput
    upsert?: UserUpsertWithoutUpdatedVariantOptionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedVariantOptionsInput, UserUpdateWithoutUpdatedVariantOptionsInput>, UserUncheckedUpdateWithoutUpdatedVariantOptionsInput>
  }

  export type UserUpdateOneWithoutDeletedVariantOptionsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedVariantOptionsInput, UserUncheckedCreateWithoutDeletedVariantOptionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedVariantOptionsInput
    upsert?: UserUpsertWithoutDeletedVariantOptionsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedVariantOptionsInput, UserUpdateWithoutDeletedVariantOptionsInput>, UserUncheckedUpdateWithoutDeletedVariantOptionsInput>
  }

  export type SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput = {
    create?: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput> | SKUCreateWithoutVariantOptionsInput[] | SKUUncheckedCreateWithoutVariantOptionsInput[]
    connectOrCreate?: SKUCreateOrConnectWithoutVariantOptionsInput | SKUCreateOrConnectWithoutVariantOptionsInput[]
    upsert?: SKUUpsertWithWhereUniqueWithoutVariantOptionsInput | SKUUpsertWithWhereUniqueWithoutVariantOptionsInput[]
    set?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    disconnect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    delete?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    connect?: SKUWhereUniqueInput | SKUWhereUniqueInput[]
    update?: SKUUpdateWithWhereUniqueWithoutVariantOptionsInput | SKUUpdateWithWhereUniqueWithoutVariantOptionsInput[]
    updateMany?: SKUUpdateManyWithWhereWithoutVariantOptionsInput | SKUUpdateManyWithWhereWithoutVariantOptionsInput[]
    deleteMany?: SKUScalarWhereInput | SKUScalarWhereInput[]
  }

  export type SKUCreateimagesInput = {
    set: string[]
  }

  export type ProductCreateNestedOneWithoutSkusInput = {
    create?: XOR<ProductCreateWithoutSkusInput, ProductUncheckedCreateWithoutSkusInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSkusInput
    connect?: ProductWhereUniqueInput
  }

  export type VariantOptionCreateNestedManyWithoutSkusInput = {
    create?: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput> | VariantOptionCreateWithoutSkusInput[] | VariantOptionUncheckedCreateWithoutSkusInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutSkusInput | VariantOptionCreateOrConnectWithoutSkusInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type CartItemCreateNestedManyWithoutSkuInput = {
    create?: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput> | CartItemCreateWithoutSkuInput[] | CartItemUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutSkuInput | CartItemCreateOrConnectWithoutSkuInput[]
    createMany?: CartItemCreateManySkuInputEnvelope
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
  }

  export type ProductSKUSnapshotCreateNestedManyWithoutSkuInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput> | ProductSKUSnapshotCreateWithoutSkuInput[] | ProductSKUSnapshotUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutSkuInput | ProductSKUSnapshotCreateOrConnectWithoutSkuInput[]
    createMany?: ProductSKUSnapshotCreateManySkuInputEnvelope
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedSKUSInput = {
    create?: XOR<UserCreateWithoutCreatedSKUSInput, UserUncheckedCreateWithoutCreatedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSKUSInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedSKUSInput = {
    create?: XOR<UserCreateWithoutUpdatedSKUSInput, UserUncheckedCreateWithoutUpdatedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedSKUSInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedSKUSInput = {
    create?: XOR<UserCreateWithoutDeletedSKUSInput, UserUncheckedCreateWithoutDeletedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedSKUSInput
    connect?: UserWhereUniqueInput
  }

  export type VariantOptionUncheckedCreateNestedManyWithoutSkusInput = {
    create?: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput> | VariantOptionCreateWithoutSkusInput[] | VariantOptionUncheckedCreateWithoutSkusInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutSkusInput | VariantOptionCreateOrConnectWithoutSkusInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
  }

  export type CartItemUncheckedCreateNestedManyWithoutSkuInput = {
    create?: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput> | CartItemCreateWithoutSkuInput[] | CartItemUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutSkuInput | CartItemCreateOrConnectWithoutSkuInput[]
    createMany?: CartItemCreateManySkuInputEnvelope
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
  }

  export type ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput> | ProductSKUSnapshotCreateWithoutSkuInput[] | ProductSKUSnapshotUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutSkuInput | ProductSKUSnapshotCreateOrConnectWithoutSkuInput[]
    createMany?: ProductSKUSnapshotCreateManySkuInputEnvelope
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
  }

  export type SKUUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type ProductUpdateOneRequiredWithoutSkusNestedInput = {
    create?: XOR<ProductCreateWithoutSkusInput, ProductUncheckedCreateWithoutSkusInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSkusInput
    upsert?: ProductUpsertWithoutSkusInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutSkusInput, ProductUpdateWithoutSkusInput>, ProductUncheckedUpdateWithoutSkusInput>
  }

  export type VariantOptionUpdateManyWithoutSkusNestedInput = {
    create?: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput> | VariantOptionCreateWithoutSkusInput[] | VariantOptionUncheckedCreateWithoutSkusInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutSkusInput | VariantOptionCreateOrConnectWithoutSkusInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutSkusInput | VariantOptionUpsertWithWhereUniqueWithoutSkusInput[]
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutSkusInput | VariantOptionUpdateWithWhereUniqueWithoutSkusInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutSkusInput | VariantOptionUpdateManyWithWhereWithoutSkusInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type CartItemUpdateManyWithoutSkuNestedInput = {
    create?: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput> | CartItemCreateWithoutSkuInput[] | CartItemUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutSkuInput | CartItemCreateOrConnectWithoutSkuInput[]
    upsert?: CartItemUpsertWithWhereUniqueWithoutSkuInput | CartItemUpsertWithWhereUniqueWithoutSkuInput[]
    createMany?: CartItemCreateManySkuInputEnvelope
    set?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    disconnect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    delete?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    update?: CartItemUpdateWithWhereUniqueWithoutSkuInput | CartItemUpdateWithWhereUniqueWithoutSkuInput[]
    updateMany?: CartItemUpdateManyWithWhereWithoutSkuInput | CartItemUpdateManyWithWhereWithoutSkuInput[]
    deleteMany?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
  }

  export type ProductSKUSnapshotUpdateManyWithoutSkuNestedInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput> | ProductSKUSnapshotCreateWithoutSkuInput[] | ProductSKUSnapshotUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutSkuInput | ProductSKUSnapshotCreateOrConnectWithoutSkuInput[]
    upsert?: ProductSKUSnapshotUpsertWithWhereUniqueWithoutSkuInput | ProductSKUSnapshotUpsertWithWhereUniqueWithoutSkuInput[]
    createMany?: ProductSKUSnapshotCreateManySkuInputEnvelope
    set?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    disconnect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    delete?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    update?: ProductSKUSnapshotUpdateWithWhereUniqueWithoutSkuInput | ProductSKUSnapshotUpdateWithWhereUniqueWithoutSkuInput[]
    updateMany?: ProductSKUSnapshotUpdateManyWithWhereWithoutSkuInput | ProductSKUSnapshotUpdateManyWithWhereWithoutSkuInput[]
    deleteMany?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedSKUSNestedInput = {
    create?: XOR<UserCreateWithoutCreatedSKUSInput, UserUncheckedCreateWithoutCreatedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedSKUSInput
    upsert?: UserUpsertWithoutCreatedSKUSInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedSKUSInput, UserUpdateWithoutCreatedSKUSInput>, UserUncheckedUpdateWithoutCreatedSKUSInput>
  }

  export type UserUpdateOneWithoutUpdatedSKUSNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedSKUSInput, UserUncheckedCreateWithoutUpdatedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedSKUSInput
    upsert?: UserUpsertWithoutUpdatedSKUSInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedSKUSInput, UserUpdateWithoutUpdatedSKUSInput>, UserUncheckedUpdateWithoutUpdatedSKUSInput>
  }

  export type UserUpdateOneWithoutDeletedSKUSNestedInput = {
    create?: XOR<UserCreateWithoutDeletedSKUSInput, UserUncheckedCreateWithoutDeletedSKUSInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedSKUSInput
    upsert?: UserUpsertWithoutDeletedSKUSInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedSKUSInput, UserUpdateWithoutDeletedSKUSInput>, UserUncheckedUpdateWithoutDeletedSKUSInput>
  }

  export type VariantOptionUncheckedUpdateManyWithoutSkusNestedInput = {
    create?: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput> | VariantOptionCreateWithoutSkusInput[] | VariantOptionUncheckedCreateWithoutSkusInput[]
    connectOrCreate?: VariantOptionCreateOrConnectWithoutSkusInput | VariantOptionCreateOrConnectWithoutSkusInput[]
    upsert?: VariantOptionUpsertWithWhereUniqueWithoutSkusInput | VariantOptionUpsertWithWhereUniqueWithoutSkusInput[]
    set?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    disconnect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    delete?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    connect?: VariantOptionWhereUniqueInput | VariantOptionWhereUniqueInput[]
    update?: VariantOptionUpdateWithWhereUniqueWithoutSkusInput | VariantOptionUpdateWithWhereUniqueWithoutSkusInput[]
    updateMany?: VariantOptionUpdateManyWithWhereWithoutSkusInput | VariantOptionUpdateManyWithWhereWithoutSkusInput[]
    deleteMany?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
  }

  export type CartItemUncheckedUpdateManyWithoutSkuNestedInput = {
    create?: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput> | CartItemCreateWithoutSkuInput[] | CartItemUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: CartItemCreateOrConnectWithoutSkuInput | CartItemCreateOrConnectWithoutSkuInput[]
    upsert?: CartItemUpsertWithWhereUniqueWithoutSkuInput | CartItemUpsertWithWhereUniqueWithoutSkuInput[]
    createMany?: CartItemCreateManySkuInputEnvelope
    set?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    disconnect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    delete?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    connect?: CartItemWhereUniqueInput | CartItemWhereUniqueInput[]
    update?: CartItemUpdateWithWhereUniqueWithoutSkuInput | CartItemUpdateWithWhereUniqueWithoutSkuInput[]
    updateMany?: CartItemUpdateManyWithWhereWithoutSkuInput | CartItemUpdateManyWithWhereWithoutSkuInput[]
    deleteMany?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
  }

  export type ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput> | ProductSKUSnapshotCreateWithoutSkuInput[] | ProductSKUSnapshotUncheckedCreateWithoutSkuInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutSkuInput | ProductSKUSnapshotCreateOrConnectWithoutSkuInput[]
    upsert?: ProductSKUSnapshotUpsertWithWhereUniqueWithoutSkuInput | ProductSKUSnapshotUpsertWithWhereUniqueWithoutSkuInput[]
    createMany?: ProductSKUSnapshotCreateManySkuInputEnvelope
    set?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    disconnect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    delete?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    update?: ProductSKUSnapshotUpdateWithWhereUniqueWithoutSkuInput | ProductSKUSnapshotUpdateWithWhereUniqueWithoutSkuInput[]
    updateMany?: ProductSKUSnapshotUpdateManyWithWhereWithoutSkuInput | ProductSKUSnapshotUpdateManyWithWhereWithoutSkuInput[]
    deleteMany?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BrandTranslationCreateNestedManyWithoutBrandInput = {
    create?: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput> | BrandTranslationCreateWithoutBrandInput[] | BrandTranslationUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutBrandInput | BrandTranslationCreateOrConnectWithoutBrandInput[]
    createMany?: BrandTranslationCreateManyBrandInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedBrandsInput = {
    create?: XOR<UserCreateWithoutCreatedBrandsInput, UserUncheckedCreateWithoutCreatedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedBrandsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedBrandsInput = {
    create?: XOR<UserCreateWithoutUpdatedBrandsInput, UserUncheckedCreateWithoutUpdatedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedBrandsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedBrandsInput = {
    create?: XOR<UserCreateWithoutDeletedBrandsInput, UserUncheckedCreateWithoutDeletedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedBrandsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type BrandTranslationUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput> | BrandTranslationCreateWithoutBrandInput[] | BrandTranslationUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutBrandInput | BrandTranslationCreateOrConnectWithoutBrandInput[]
    createMany?: BrandTranslationCreateManyBrandInputEnvelope
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BrandTranslationUpdateManyWithoutBrandNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput> | BrandTranslationCreateWithoutBrandInput[] | BrandTranslationUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutBrandInput | BrandTranslationCreateOrConnectWithoutBrandInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutBrandInput | BrandTranslationUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: BrandTranslationCreateManyBrandInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutBrandInput | BrandTranslationUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutBrandInput | BrandTranslationUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedBrandsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedBrandsInput, UserUncheckedCreateWithoutCreatedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedBrandsInput
    upsert?: UserUpsertWithoutCreatedBrandsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedBrandsInput, UserUpdateWithoutCreatedBrandsInput>, UserUncheckedUpdateWithoutCreatedBrandsInput>
  }

  export type UserUpdateOneWithoutUpdatedBrandsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedBrandsInput, UserUncheckedCreateWithoutUpdatedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedBrandsInput
    upsert?: UserUpsertWithoutUpdatedBrandsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedBrandsInput, UserUpdateWithoutUpdatedBrandsInput>, UserUncheckedUpdateWithoutUpdatedBrandsInput>
  }

  export type UserUpdateOneWithoutDeletedBrandsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedBrandsInput, UserUncheckedCreateWithoutDeletedBrandsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedBrandsInput
    upsert?: UserUpsertWithoutDeletedBrandsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedBrandsInput, UserUpdateWithoutDeletedBrandsInput>, UserUncheckedUpdateWithoutDeletedBrandsInput>
  }

  export type ProductUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput> | BrandTranslationCreateWithoutBrandInput[] | BrandTranslationUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: BrandTranslationCreateOrConnectWithoutBrandInput | BrandTranslationCreateOrConnectWithoutBrandInput[]
    upsert?: BrandTranslationUpsertWithWhereUniqueWithoutBrandInput | BrandTranslationUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: BrandTranslationCreateManyBrandInputEnvelope
    set?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    disconnect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    delete?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    connect?: BrandTranslationWhereUniqueInput | BrandTranslationWhereUniqueInput[]
    update?: BrandTranslationUpdateWithWhereUniqueWithoutBrandInput | BrandTranslationUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: BrandTranslationUpdateManyWithWhereWithoutBrandInput | BrandTranslationUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
  }

  export type BrandCreateNestedOneWithoutBrandTranslationsInput = {
    create?: XOR<BrandCreateWithoutBrandTranslationsInput, BrandUncheckedCreateWithoutBrandTranslationsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutBrandTranslationsInput
    connect?: BrandWhereUniqueInput
  }

  export type LanguageCreateNestedOneWithoutBrandTranslationsInput = {
    create?: XOR<LanguageCreateWithoutBrandTranslationsInput, LanguageUncheckedCreateWithoutBrandTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutBrandTranslationsInput
    connect?: LanguageWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCreatedBrandTranslationsInput = {
    create?: XOR<UserCreateWithoutCreatedBrandTranslationsInput, UserUncheckedCreateWithoutCreatedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedBrandTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedBrandTranslationsInput = {
    create?: XOR<UserCreateWithoutUpdatedBrandTranslationsInput, UserUncheckedCreateWithoutUpdatedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedBrandTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedBrandTranslationsInput = {
    create?: XOR<UserCreateWithoutDeletedBrandTranslationsInput, UserUncheckedCreateWithoutDeletedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedBrandTranslationsInput
    connect?: UserWhereUniqueInput
  }

  export type BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput = {
    create?: XOR<BrandCreateWithoutBrandTranslationsInput, BrandUncheckedCreateWithoutBrandTranslationsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutBrandTranslationsInput
    upsert?: BrandUpsertWithoutBrandTranslationsInput
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutBrandTranslationsInput, BrandUpdateWithoutBrandTranslationsInput>, BrandUncheckedUpdateWithoutBrandTranslationsInput>
  }

  export type LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput = {
    create?: XOR<LanguageCreateWithoutBrandTranslationsInput, LanguageUncheckedCreateWithoutBrandTranslationsInput>
    connectOrCreate?: LanguageCreateOrConnectWithoutBrandTranslationsInput
    upsert?: LanguageUpsertWithoutBrandTranslationsInput
    connect?: LanguageWhereUniqueInput
    update?: XOR<XOR<LanguageUpdateToOneWithWhereWithoutBrandTranslationsInput, LanguageUpdateWithoutBrandTranslationsInput>, LanguageUncheckedUpdateWithoutBrandTranslationsInput>
  }

  export type UserUpdateOneWithoutCreatedBrandTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutCreatedBrandTranslationsInput, UserUncheckedCreateWithoutCreatedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedBrandTranslationsInput
    upsert?: UserUpsertWithoutCreatedBrandTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedBrandTranslationsInput, UserUpdateWithoutCreatedBrandTranslationsInput>, UserUncheckedUpdateWithoutCreatedBrandTranslationsInput>
  }

  export type UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedBrandTranslationsInput, UserUncheckedCreateWithoutUpdatedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedBrandTranslationsInput
    upsert?: UserUpsertWithoutUpdatedBrandTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedBrandTranslationsInput, UserUpdateWithoutUpdatedBrandTranslationsInput>, UserUncheckedUpdateWithoutUpdatedBrandTranslationsInput>
  }

  export type UserUpdateOneWithoutDeletedBrandTranslationsNestedInput = {
    create?: XOR<UserCreateWithoutDeletedBrandTranslationsInput, UserUncheckedCreateWithoutDeletedBrandTranslationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedBrandTranslationsInput
    upsert?: UserUpsertWithoutDeletedBrandTranslationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedBrandTranslationsInput, UserUpdateWithoutDeletedBrandTranslationsInput>, UserUncheckedUpdateWithoutDeletedBrandTranslationsInput>
  }

  export type SKUCreateNestedOneWithoutCartItemsInput = {
    create?: XOR<SKUCreateWithoutCartItemsInput, SKUUncheckedCreateWithoutCartItemsInput>
    connectOrCreate?: SKUCreateOrConnectWithoutCartItemsInput
    connect?: SKUWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutCartsInput = {
    create?: XOR<UserCreateWithoutCartsInput, UserUncheckedCreateWithoutCartsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCartsInput
    connect?: UserWhereUniqueInput
  }

  export type SKUUpdateOneRequiredWithoutCartItemsNestedInput = {
    create?: XOR<SKUCreateWithoutCartItemsInput, SKUUncheckedCreateWithoutCartItemsInput>
    connectOrCreate?: SKUCreateOrConnectWithoutCartItemsInput
    upsert?: SKUUpsertWithoutCartItemsInput
    connect?: SKUWhereUniqueInput
    update?: XOR<XOR<SKUUpdateToOneWithWhereWithoutCartItemsInput, SKUUpdateWithoutCartItemsInput>, SKUUncheckedUpdateWithoutCartItemsInput>
  }

  export type UserUpdateOneRequiredWithoutCartsNestedInput = {
    create?: XOR<UserCreateWithoutCartsInput, UserUncheckedCreateWithoutCartsInput>
    connectOrCreate?: UserCreateOrConnectWithoutCartsInput
    upsert?: UserUpsertWithoutCartsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCartsInput, UserUpdateWithoutCartsInput>, UserUncheckedUpdateWithoutCartsInput>
  }

  export type ProductSKUSnapshotCreateimagesInput = {
    set: string[]
  }

  export type SKUCreateNestedOneWithoutProductSKUSnapshotsInput = {
    create?: XOR<SKUCreateWithoutProductSKUSnapshotsInput, SKUUncheckedCreateWithoutProductSKUSnapshotsInput>
    connectOrCreate?: SKUCreateOrConnectWithoutProductSKUSnapshotsInput
    connect?: SKUWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductSKUSnapshotUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type SKUUpdateOneWithoutProductSKUSnapshotsNestedInput = {
    create?: XOR<SKUCreateWithoutProductSKUSnapshotsInput, SKUUncheckedCreateWithoutProductSKUSnapshotsInput>
    connectOrCreate?: SKUCreateOrConnectWithoutProductSKUSnapshotsInput
    upsert?: SKUUpsertWithoutProductSKUSnapshotsInput
    disconnect?: SKUWhereInput | boolean
    delete?: SKUWhereInput | boolean
    connect?: SKUWhereUniqueInput
    update?: XOR<XOR<SKUUpdateToOneWithWhereWithoutProductSKUSnapshotsInput, SKUUpdateWithoutProductSKUSnapshotsInput>, SKUUncheckedUpdateWithoutProductSKUSnapshotsInput>
  }

  export type OrderUpdateOneWithoutItemsNestedInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    upsert?: OrderUpsertWithoutItemsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutItemsInput, OrderUpdateWithoutItemsInput>, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type UserCreateNestedOneWithoutOrdersInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type ProductSKUSnapshotCreateNestedManyWithoutOrderInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput> | ProductSKUSnapshotCreateWithoutOrderInput[] | ProductSKUSnapshotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutOrderInput | ProductSKUSnapshotCreateOrConnectWithoutOrderInput[]
    createMany?: ProductSKUSnapshotCreateManyOrderInputEnvelope
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutCreatedOrdersInput = {
    create?: XOR<UserCreateWithoutCreatedOrdersInput, UserUncheckedCreateWithoutCreatedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUpdatedOrdersInput = {
    create?: XOR<UserCreateWithoutUpdatedOrdersInput, UserUncheckedCreateWithoutUpdatedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutDeletedOrdersInput = {
    create?: XOR<UserCreateWithoutDeletedOrdersInput, UserUncheckedCreateWithoutDeletedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput> | ProductSKUSnapshotCreateWithoutOrderInput[] | ProductSKUSnapshotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutOrderInput | ProductSKUSnapshotCreateOrConnectWithoutOrderInput[]
    createMany?: ProductSKUSnapshotCreateManyOrderInputEnvelope
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type UserUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    upsert?: UserUpsertWithoutOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersInput, UserUpdateWithoutOrdersInput>, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type ProductSKUSnapshotUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput> | ProductSKUSnapshotCreateWithoutOrderInput[] | ProductSKUSnapshotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutOrderInput | ProductSKUSnapshotCreateOrConnectWithoutOrderInput[]
    upsert?: ProductSKUSnapshotUpsertWithWhereUniqueWithoutOrderInput | ProductSKUSnapshotUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ProductSKUSnapshotCreateManyOrderInputEnvelope
    set?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    disconnect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    delete?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    update?: ProductSKUSnapshotUpdateWithWhereUniqueWithoutOrderInput | ProductSKUSnapshotUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ProductSKUSnapshotUpdateManyWithWhereWithoutOrderInput | ProductSKUSnapshotUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
  }

  export type UserUpdateOneWithoutCreatedOrdersNestedInput = {
    create?: XOR<UserCreateWithoutCreatedOrdersInput, UserUncheckedCreateWithoutCreatedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutCreatedOrdersInput
    upsert?: UserUpsertWithoutCreatedOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCreatedOrdersInput, UserUpdateWithoutCreatedOrdersInput>, UserUncheckedUpdateWithoutCreatedOrdersInput>
  }

  export type UserUpdateOneWithoutUpdatedOrdersNestedInput = {
    create?: XOR<UserCreateWithoutUpdatedOrdersInput, UserUncheckedCreateWithoutUpdatedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutUpdatedOrdersInput
    upsert?: UserUpsertWithoutUpdatedOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUpdatedOrdersInput, UserUpdateWithoutUpdatedOrdersInput>, UserUncheckedUpdateWithoutUpdatedOrdersInput>
  }

  export type UserUpdateOneWithoutDeletedOrdersNestedInput = {
    create?: XOR<UserCreateWithoutDeletedOrdersInput, UserUncheckedCreateWithoutDeletedOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutDeletedOrdersInput
    upsert?: UserUpsertWithoutDeletedOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutDeletedOrdersInput, UserUpdateWithoutDeletedOrdersInput>, UserUncheckedUpdateWithoutDeletedOrdersInput>
  }

  export type ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput> | ProductSKUSnapshotCreateWithoutOrderInput[] | ProductSKUSnapshotUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ProductSKUSnapshotCreateOrConnectWithoutOrderInput | ProductSKUSnapshotCreateOrConnectWithoutOrderInput[]
    upsert?: ProductSKUSnapshotUpsertWithWhereUniqueWithoutOrderInput | ProductSKUSnapshotUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ProductSKUSnapshotCreateManyOrderInputEnvelope
    set?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    disconnect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    delete?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    connect?: ProductSKUSnapshotWhereUniqueInput | ProductSKUSnapshotWhereUniqueInput[]
    update?: ProductSKUSnapshotUpdateWithWhereUniqueWithoutOrderInput | ProductSKUSnapshotUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ProductSKUSnapshotUpdateManyWithWhereWithoutOrderInput | ProductSKUSnapshotUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutReviewsInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    connect?: ProductWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReviewsInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    upsert?: ProductUpsertWithoutReviewsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutReviewsInput, ProductUpdateWithoutReviewsInput>, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    upsert?: UserUpsertWithoutReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewsInput, UserUpdateWithoutReviewsInput>, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserCreateNestedOneWithoutSentMessagesInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutReceivedMessagesInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSentMessagesNestedInput = {
    create?: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutSentMessagesInput
    upsert?: UserUpsertWithoutSentMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSentMessagesInput, UserUpdateWithoutSentMessagesInput>, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateOneRequiredWithoutReceivedMessagesNestedInput = {
    create?: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    connectOrCreate?: UserCreateOrConnectWithoutReceivedMessagesInput
    upsert?: UserUpsertWithoutReceivedMessagesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReceivedMessagesInput, UserUpdateWithoutReceivedMessagesInput>, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedEnumVerificationCodeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeFilter<$PrismaModel> | $Enums.VerificationCodeType
  }

  export type NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VerificationCodeType | EnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VerificationCodeType[] | ListEnumVerificationCodeTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVerificationCodeTypeWithAggregatesFilter<$PrismaModel> | $Enums.VerificationCodeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
    _max?: NestedEnumVerificationCodeTypeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumHTTPMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodFilter<$PrismaModel> | $Enums.HTTPMethod
  }

  export type NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.HTTPMethod | EnumHTTPMethodFieldRefInput<$PrismaModel>
    in?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.HTTPMethod[] | ListEnumHTTPMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumHTTPMethodWithAggregatesFilter<$PrismaModel> | $Enums.HTTPMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumHTTPMethodFilter<$PrismaModel>
    _max?: NestedEnumHTTPMethodFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type UserTranslationCreateWithoutLanguageInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedUserTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUserTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    userId: number
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateOrConnectWithoutLanguageInput = {
    where: UserTranslationWhereUniqueInput
    create: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type UserTranslationCreateManyLanguageInputEnvelope = {
    data: UserTranslationCreateManyLanguageInput | UserTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutLanguageInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    productId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutLanguageInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ProductTranslationCreateManyLanguageInputEnvelope = {
    data: ProductTranslationCreateManyLanguageInput | ProductTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutLanguageInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutCategoryTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoryTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    categoryId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type CategoryTranslationCreateManyLanguageInputEnvelope = {
    data: CategoryTranslationCreateManyLanguageInput | CategoryTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type BrandTranslationCreateWithoutLanguageInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutBrandTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateWithoutLanguageInput = {
    id?: number
    brandId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateOrConnectWithoutLanguageInput = {
    where: BrandTranslationWhereUniqueInput
    create: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type BrandTranslationCreateManyLanguageInputEnvelope = {
    data: BrandTranslationCreateManyLanguageInput | BrandTranslationCreateManyLanguageInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedLanguagesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedLanguagesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedLanguagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedLanguagesInput, UserUncheckedCreateWithoutCreatedLanguagesInput>
  }

  export type UserCreateWithoutUpdatedLanguagesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedLanguagesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedLanguagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedLanguagesInput, UserUncheckedCreateWithoutUpdatedLanguagesInput>
  }

  export type UserCreateWithoutDeletedLanguagesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedLanguagesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedLanguagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedLanguagesInput, UserUncheckedCreateWithoutDeletedLanguagesInput>
  }

  export type UserTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: UserTranslationWhereUniqueInput
    update: XOR<UserTranslationUpdateWithoutLanguageInput, UserTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<UserTranslationCreateWithoutLanguageInput, UserTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type UserTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: UserTranslationWhereUniqueInput
    data: XOR<UserTranslationUpdateWithoutLanguageInput, UserTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type UserTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: UserTranslationScalarWhereInput
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type UserTranslationScalarWhereInput = {
    AND?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
    OR?: UserTranslationScalarWhereInput[]
    NOT?: UserTranslationScalarWhereInput | UserTranslationScalarWhereInput[]
    id?: IntFilter<"UserTranslation"> | number
    userId?: IntFilter<"UserTranslation"> | number
    languageId?: StringFilter<"UserTranslation"> | string
    address?: StringNullableFilter<"UserTranslation"> | string | null
    description?: StringNullableFilter<"UserTranslation"> | string | null
    createdById?: IntNullableFilter<"UserTranslation"> | number | null
    updatedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedById?: IntNullableFilter<"UserTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"UserTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"UserTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"UserTranslation"> | Date | string
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutLanguageInput, ProductTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<ProductTranslationCreateWithoutLanguageInput, ProductTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutLanguageInput, ProductTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type ProductTranslationScalarWhereInput = {
    AND?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    OR?: ProductTranslationScalarWhereInput[]
    NOT?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    id?: IntFilter<"ProductTranslation"> | number
    productId?: IntFilter<"ProductTranslation"> | number
    languageId?: StringFilter<"ProductTranslation"> | string
    name?: StringFilter<"ProductTranslation"> | string
    description?: StringFilter<"ProductTranslation"> | string
    createdById?: IntNullableFilter<"ProductTranslation"> | number | null
    updatedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedById?: IntNullableFilter<"ProductTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"ProductTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutLanguageInput, CategoryTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<CategoryTranslationCreateWithoutLanguageInput, CategoryTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutLanguageInput, CategoryTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type CategoryTranslationScalarWhereInput = {
    AND?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    OR?: CategoryTranslationScalarWhereInput[]
    NOT?: CategoryTranslationScalarWhereInput | CategoryTranslationScalarWhereInput[]
    id?: IntFilter<"CategoryTranslation"> | number
    categoryId?: IntFilter<"CategoryTranslation"> | number
    languageId?: StringFilter<"CategoryTranslation"> | string
    name?: StringFilter<"CategoryTranslation"> | string
    description?: StringFilter<"CategoryTranslation"> | string
    createdById?: IntNullableFilter<"CategoryTranslation"> | number | null
    updatedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedById?: IntNullableFilter<"CategoryTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"CategoryTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"CategoryTranslation"> | Date | string
  }

  export type BrandTranslationUpsertWithWhereUniqueWithoutLanguageInput = {
    where: BrandTranslationWhereUniqueInput
    update: XOR<BrandTranslationUpdateWithoutLanguageInput, BrandTranslationUncheckedUpdateWithoutLanguageInput>
    create: XOR<BrandTranslationCreateWithoutLanguageInput, BrandTranslationUncheckedCreateWithoutLanguageInput>
  }

  export type BrandTranslationUpdateWithWhereUniqueWithoutLanguageInput = {
    where: BrandTranslationWhereUniqueInput
    data: XOR<BrandTranslationUpdateWithoutLanguageInput, BrandTranslationUncheckedUpdateWithoutLanguageInput>
  }

  export type BrandTranslationUpdateManyWithWhereWithoutLanguageInput = {
    where: BrandTranslationScalarWhereInput
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyWithoutLanguageInput>
  }

  export type BrandTranslationScalarWhereInput = {
    AND?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
    OR?: BrandTranslationScalarWhereInput[]
    NOT?: BrandTranslationScalarWhereInput | BrandTranslationScalarWhereInput[]
    id?: IntFilter<"BrandTranslation"> | number
    brandId?: IntFilter<"BrandTranslation"> | number
    languageId?: StringFilter<"BrandTranslation"> | string
    name?: StringFilter<"BrandTranslation"> | string
    description?: StringFilter<"BrandTranslation"> | string
    createdById?: IntNullableFilter<"BrandTranslation"> | number | null
    updatedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedById?: IntNullableFilter<"BrandTranslation"> | number | null
    deletedAt?: DateTimeNullableFilter<"BrandTranslation"> | Date | string | null
    createdAt?: DateTimeFilter<"BrandTranslation"> | Date | string
    updatedAt?: DateTimeFilter<"BrandTranslation"> | Date | string
  }

  export type UserUpsertWithoutCreatedLanguagesInput = {
    update: XOR<UserUpdateWithoutCreatedLanguagesInput, UserUncheckedUpdateWithoutCreatedLanguagesInput>
    create: XOR<UserCreateWithoutCreatedLanguagesInput, UserUncheckedCreateWithoutCreatedLanguagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedLanguagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedLanguagesInput, UserUncheckedUpdateWithoutCreatedLanguagesInput>
  }

  export type UserUpdateWithoutCreatedLanguagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedLanguagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedLanguagesInput = {
    update: XOR<UserUpdateWithoutUpdatedLanguagesInput, UserUncheckedUpdateWithoutUpdatedLanguagesInput>
    create: XOR<UserCreateWithoutUpdatedLanguagesInput, UserUncheckedCreateWithoutUpdatedLanguagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedLanguagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedLanguagesInput, UserUncheckedUpdateWithoutUpdatedLanguagesInput>
  }

  export type UserUpdateWithoutUpdatedLanguagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedLanguagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedLanguagesInput = {
    update: XOR<UserUpdateWithoutDeletedLanguagesInput, UserUncheckedUpdateWithoutDeletedLanguagesInput>
    create: XOR<UserCreateWithoutDeletedLanguagesInput, UserUncheckedCreateWithoutDeletedLanguagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedLanguagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedLanguagesInput, UserUncheckedUpdateWithoutDeletedLanguagesInput>
  }

  export type UserUpdateWithoutDeletedLanguagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedLanguagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type RoleCreateWithoutUsersInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionCreateNestedManyWithoutRolesInput
    createdBy?: UserCreateNestedOneWithoutCreatedRolesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedRolesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedRolesInput
  }

  export type RoleUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
  }

  export type RoleCreateOrConnectWithoutUsersInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
  }

  export type DeviceCreateWithoutUserInput = {
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
    refreshTokens?: RefreshTokenCreateNestedManyWithoutDeviceInput
  }

  export type DeviceUncheckedCreateWithoutUserInput = {
    id?: number
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutDeviceInput
  }

  export type DeviceCreateOrConnectWithoutUserInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceCreateManyUserInputEnvelope = {
    data: DeviceCreateManyUserInput | DeviceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    device: DeviceCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    token: string
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CartItemCreateWithoutUserInput = {
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    sku: SKUCreateNestedOneWithoutCartItemsInput
  }

  export type CartItemUncheckedCreateWithoutUserInput = {
    id?: number
    quantity: number
    skuId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CartItemCreateOrConnectWithoutUserInput = {
    where: CartItemWhereUniqueInput
    create: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput>
  }

  export type CartItemCreateManyUserInputEnvelope = {
    data: CartItemCreateManyUserInput | CartItemCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutUserInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotCreateNestedManyWithoutOrderInput
    createdBy?: UserCreateNestedOneWithoutCreatedOrdersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedOrdersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedOrdersInput
  }

  export type OrderUncheckedCreateWithoutUserInput = {
    id?: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutUserInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderCreateManyUserInputEnvelope = {
    data: OrderCreateManyUserInput | OrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutUserInput = {
    content: string
    rating: number
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutUserInput = {
    id?: number
    content: string
    rating: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutUserInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewCreateManyUserInputEnvelope = {
    data: ReviewCreateManyUserInput | ReviewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutCreatedByInput = {
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleCreateNestedManyWithoutPermissionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedPermissionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedPermissionsInput
  }

  export type PermissionUncheckedCreateWithoutCreatedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionCreateOrConnectWithoutCreatedByInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput>
  }

  export type PermissionCreateManyCreatedByInputEnvelope = {
    data: PermissionCreateManyCreatedByInput | PermissionCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutUpdatedByInput = {
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleCreateNestedManyWithoutPermissionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedPermissionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedPermissionsInput
  }

  export type PermissionUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionCreateOrConnectWithoutUpdatedByInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput>
  }

  export type PermissionCreateManyUpdatedByInputEnvelope = {
    data: PermissionCreateManyUpdatedByInput | PermissionCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type PermissionCreateWithoutDeletedByInput = {
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleCreateNestedManyWithoutPermissionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedPermissionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedPermissionsInput
  }

  export type PermissionUncheckedCreateWithoutDeletedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    roles?: RoleUncheckedCreateNestedManyWithoutPermissionsInput
  }

  export type PermissionCreateOrConnectWithoutDeletedByInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput>
  }

  export type PermissionCreateManyDeletedByInputEnvelope = {
    data: PermissionCreateManyDeletedByInput | PermissionCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutCreatedByInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionCreateNestedManyWithoutRolesInput
    users?: UserCreateNestedManyWithoutRoleInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedRolesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedRolesInput
  }

  export type RoleUncheckedCreateWithoutCreatedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutCreatedByInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput>
  }

  export type RoleCreateManyCreatedByInputEnvelope = {
    data: RoleCreateManyCreatedByInput | RoleCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutUpdatedByInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionCreateNestedManyWithoutRolesInput
    users?: UserCreateNestedManyWithoutRoleInput
    createdBy?: UserCreateNestedOneWithoutCreatedRolesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedRolesInput
  }

  export type RoleUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutUpdatedByInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput>
  }

  export type RoleCreateManyUpdatedByInputEnvelope = {
    data: RoleCreateManyUpdatedByInput | RoleCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutDeletedByInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionCreateNestedManyWithoutRolesInput
    users?: UserCreateNestedManyWithoutRoleInput
    createdBy?: UserCreateNestedOneWithoutCreatedRolesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedRolesInput
  }

  export type RoleUncheckedCreateWithoutDeletedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    permissions?: PermissionUncheckedCreateNestedManyWithoutRolesInput
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutDeletedByInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput>
  }

  export type RoleCreateManyDeletedByInputEnvelope = {
    data: RoleCreateManyDeletedByInput | RoleCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCreatedByInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutCreatedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductCreateManyCreatedByInputEnvelope = {
    data: ProductCreateManyCreatedByInput | ProductCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutUpdatedByInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductCreateManyUpdatedByInputEnvelope = {
    data: ProductCreateManyUpdatedByInput | ProductCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutDeletedByInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
  }

  export type ProductUncheckedCreateWithoutDeletedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutDeletedByInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput>
  }

  export type ProductCreateManyDeletedByInputEnvelope = {
    data: ProductCreateManyDeletedByInput | ProductCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutCreatedByInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutCreatedByInput = {
    id?: number
    parentCategoryId?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCreatedByInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput>
  }

  export type CategoryCreateManyCreatedByInputEnvelope = {
    data: CategoryCreateManyCreatedByInput | CategoryCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutUpdatedByInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutUpdatedByInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput>
  }

  export type CategoryCreateManyUpdatedByInputEnvelope = {
    data: CategoryCreateManyUpdatedByInput | CategoryCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryCreateWithoutDeletedByInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutDeletedByInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutDeletedByInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput>
  }

  export type CategoryCreateManyDeletedByInputEnvelope = {
    data: CategoryCreateManyDeletedByInput | CategoryCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantCreateWithoutCreatedByInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    variantOptions?: VariantOptionCreateNestedManyWithoutVariantInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantsInput
  }

  export type VariantUncheckedCreateWithoutCreatedByInput = {
    id?: number
    name: string
    productId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutVariantInput
  }

  export type VariantCreateOrConnectWithoutCreatedByInput = {
    where: VariantWhereUniqueInput
    create: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput>
  }

  export type VariantCreateManyCreatedByInputEnvelope = {
    data: VariantCreateManyCreatedByInput | VariantCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantCreateWithoutUpdatedByInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    variantOptions?: VariantOptionCreateNestedManyWithoutVariantInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantsInput
  }

  export type VariantUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutVariantInput
  }

  export type VariantCreateOrConnectWithoutUpdatedByInput = {
    where: VariantWhereUniqueInput
    create: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput>
  }

  export type VariantCreateManyUpdatedByInputEnvelope = {
    data: VariantCreateManyUpdatedByInput | VariantCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantCreateWithoutDeletedByInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    variantOptions?: VariantOptionCreateNestedManyWithoutVariantInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantsInput
  }

  export type VariantUncheckedCreateWithoutDeletedByInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutVariantInput
  }

  export type VariantCreateOrConnectWithoutDeletedByInput = {
    where: VariantWhereUniqueInput
    create: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput>
  }

  export type VariantCreateManyDeletedByInputEnvelope = {
    data: VariantCreateManyDeletedByInput | VariantCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantOptionCreateWithoutCreatedByInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant: VariantCreateNestedOneWithoutVariantOptionsInput
    skus?: SKUCreateNestedManyWithoutVariantOptionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantOptionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateWithoutCreatedByInput = {
    id?: number
    value: string
    variantId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUUncheckedCreateNestedManyWithoutVariantOptionsInput
  }

  export type VariantOptionCreateOrConnectWithoutCreatedByInput = {
    where: VariantOptionWhereUniqueInput
    create: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput>
  }

  export type VariantOptionCreateManyCreatedByInputEnvelope = {
    data: VariantOptionCreateManyCreatedByInput | VariantOptionCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantOptionCreateWithoutUpdatedByInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant: VariantCreateNestedOneWithoutVariantOptionsInput
    skus?: SKUCreateNestedManyWithoutVariantOptionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantOptionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUUncheckedCreateNestedManyWithoutVariantOptionsInput
  }

  export type VariantOptionCreateOrConnectWithoutUpdatedByInput = {
    where: VariantOptionWhereUniqueInput
    create: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput>
  }

  export type VariantOptionCreateManyUpdatedByInputEnvelope = {
    data: VariantOptionCreateManyUpdatedByInput | VariantOptionCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type VariantOptionCreateWithoutDeletedByInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant: VariantCreateNestedOneWithoutVariantOptionsInput
    skus?: SKUCreateNestedManyWithoutVariantOptionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantOptionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateWithoutDeletedByInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUUncheckedCreateNestedManyWithoutVariantOptionsInput
  }

  export type VariantOptionCreateOrConnectWithoutDeletedByInput = {
    where: VariantOptionWhereUniqueInput
    create: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput>
  }

  export type VariantOptionCreateManyDeletedByInputEnvelope = {
    data: VariantOptionCreateManyDeletedByInput | VariantOptionCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type SKUCreateWithoutCreatedByInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutCreatedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutCreatedByInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput>
  }

  export type SKUCreateManyCreatedByInputEnvelope = {
    data: SKUCreateManyCreatedByInput | SKUCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type SKUCreateWithoutUpdatedByInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutUpdatedByInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput>
  }

  export type SKUCreateManyUpdatedByInputEnvelope = {
    data: SKUCreateManyUpdatedByInput | SKUCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type SKUCreateWithoutDeletedByInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
  }

  export type SKUUncheckedCreateWithoutDeletedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutDeletedByInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput>
  }

  export type SKUCreateManyDeletedByInputEnvelope = {
    data: SKUCreateManyDeletedByInput | SKUCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutCreatedByInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutCreatedByInput = {
    id: string
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutCreatedByInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput>
  }

  export type LanguageCreateManyCreatedByInputEnvelope = {
    data: LanguageCreateManyCreatedByInput | LanguageCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutUpdatedByInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutUpdatedByInput = {
    id: string
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUpdatedByInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput>
  }

  export type LanguageCreateManyUpdatedByInputEnvelope = {
    data: LanguageCreateManyUpdatedByInput | LanguageCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type LanguageCreateWithoutDeletedByInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutDeletedByInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutDeletedByInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput>
  }

  export type LanguageCreateManyDeletedByInputEnvelope = {
    data: LanguageCreateManyDeletedByInput | LanguageCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutCreatedByInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutBrandInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandsInput
  }

  export type BrandUncheckedCreateWithoutCreatedByInput = {
    id?: number
    logo: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutCreatedByInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput>
  }

  export type BrandCreateManyCreatedByInputEnvelope = {
    data: BrandCreateManyCreatedByInput | BrandCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutUpdatedByInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutBrandInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandsInput
  }

  export type BrandUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    logo: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutUpdatedByInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput>
  }

  export type BrandCreateManyUpdatedByInputEnvelope = {
    data: BrandCreateManyUpdatedByInput | BrandCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandCreateWithoutDeletedByInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutBrandInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandsInput
  }

  export type BrandUncheckedCreateWithoutDeletedByInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutDeletedByInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput>
  }

  export type BrandCreateManyDeletedByInputEnvelope = {
    data: BrandCreateManyDeletedByInput | BrandCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutCreatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductTranslationsInput
    language: LanguageCreateNestedOneWithoutProductTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateWithoutCreatedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutCreatedByInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductTranslationCreateManyCreatedByInputEnvelope = {
    data: ProductTranslationCreateManyCreatedByInput | ProductTranslationCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutUpdatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductTranslationsInput
    language: LanguageCreateNestedOneWithoutProductTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutUpdatedByInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductTranslationCreateManyUpdatedByInputEnvelope = {
    data: ProductTranslationCreateManyUpdatedByInput | ProductTranslationCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutDeletedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutProductTranslationsInput
    language: LanguageCreateNestedOneWithoutProductTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateWithoutDeletedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutDeletedByInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type ProductTranslationCreateManyDeletedByInputEnvelope = {
    data: ProductTranslationCreateManyDeletedByInput | ProductTranslationCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutCreatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutCategoryTranslationsInput
    language: LanguageCreateNestedOneWithoutCategoryTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateWithoutCreatedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutCreatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type CategoryTranslationCreateManyCreatedByInputEnvelope = {
    data: CategoryTranslationCreateManyCreatedByInput | CategoryTranslationCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutUpdatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutCategoryTranslationsInput
    language: LanguageCreateNestedOneWithoutCategoryTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoryTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutUpdatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type CategoryTranslationCreateManyUpdatedByInputEnvelope = {
    data: CategoryTranslationCreateManyUpdatedByInput | CategoryTranslationCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutDeletedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    category: CategoryCreateNestedOneWithoutCategoryTranslationsInput
    language: LanguageCreateNestedOneWithoutCategoryTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoryTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateWithoutDeletedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutDeletedByInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type CategoryTranslationCreateManyDeletedByInputEnvelope = {
    data: CategoryTranslationCreateManyDeletedByInput | CategoryTranslationCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandTranslationCreateWithoutCreatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutBrandTranslationsInput
    language: LanguageCreateNestedOneWithoutBrandTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateWithoutCreatedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateOrConnectWithoutCreatedByInput = {
    where: BrandTranslationWhereUniqueInput
    create: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type BrandTranslationCreateManyCreatedByInputEnvelope = {
    data: BrandTranslationCreateManyCreatedByInput | BrandTranslationCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandTranslationCreateWithoutUpdatedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutBrandTranslationsInput
    language: LanguageCreateNestedOneWithoutBrandTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateOrConnectWithoutUpdatedByInput = {
    where: BrandTranslationWhereUniqueInput
    create: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type BrandTranslationCreateManyUpdatedByInputEnvelope = {
    data: BrandTranslationCreateManyUpdatedByInput | BrandTranslationCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type BrandTranslationCreateWithoutDeletedByInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutBrandTranslationsInput
    language: LanguageCreateNestedOneWithoutBrandTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateWithoutDeletedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateOrConnectWithoutDeletedByInput = {
    where: BrandTranslationWhereUniqueInput
    create: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type BrandTranslationCreateManyDeletedByInputEnvelope = {
    data: BrandTranslationCreateManyDeletedByInput | BrandTranslationCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCreatedByInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    items?: ProductSKUSnapshotCreateNestedManyWithoutOrderInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedOrdersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedOrdersInput
  }

  export type OrderUncheckedCreateWithoutCreatedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCreatedByInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput>
  }

  export type OrderCreateManyCreatedByInputEnvelope = {
    data: OrderCreateManyCreatedByInput | OrderCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutUpdatedByInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    items?: ProductSKUSnapshotCreateNestedManyWithoutOrderInput
    createdBy?: UserCreateNestedOneWithoutCreatedOrdersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedOrdersInput
  }

  export type OrderUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutUpdatedByInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput>
  }

  export type OrderCreateManyUpdatedByInputEnvelope = {
    data: OrderCreateManyUpdatedByInput | OrderCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutDeletedByInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    items?: ProductSKUSnapshotCreateNestedManyWithoutOrderInput
    createdBy?: UserCreateNestedOneWithoutCreatedOrdersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedOrdersInput
  }

  export type OrderUncheckedCreateWithoutDeletedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutDeletedByInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput>
  }

  export type OrderCreateManyDeletedByInputEnvelope = {
    data: OrderCreateManyDeletedByInput | OrderCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type UserTranslationCreateWithoutCreatedByInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserTranslationsInput
    language: LanguageCreateNestedOneWithoutUserTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUserTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateWithoutCreatedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateOrConnectWithoutCreatedByInput = {
    where: UserTranslationWhereUniqueInput
    create: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type UserTranslationCreateManyCreatedByInputEnvelope = {
    data: UserTranslationCreateManyCreatedByInput | UserTranslationCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserTranslationCreateWithoutUpdatedByInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserTranslationsInput
    language: LanguageCreateNestedOneWithoutUserTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedUserTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateOrConnectWithoutUpdatedByInput = {
    where: UserTranslationWhereUniqueInput
    create: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserTranslationCreateManyUpdatedByInputEnvelope = {
    data: UserTranslationCreateManyUpdatedByInput | UserTranslationCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserTranslationCreateWithoutDeletedByInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutUserTranslationsInput
    language: LanguageCreateNestedOneWithoutUserTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedUserTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateWithoutDeletedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateOrConnectWithoutDeletedByInput = {
    where: UserTranslationWhereUniqueInput
    create: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type UserTranslationCreateManyDeletedByInputEnvelope = {
    data: UserTranslationCreateManyDeletedByInput | UserTranslationCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type UserTranslationCreateWithoutUserInput = {
    address?: string | null
    description?: string | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    language: LanguageCreateNestedOneWithoutUserTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedUserTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUserTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUserTranslationsInput
  }

  export type UserTranslationUncheckedCreateWithoutUserInput = {
    id?: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateOrConnectWithoutUserInput = {
    where: UserTranslationWhereUniqueInput
    create: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput>
  }

  export type UserTranslationCreateManyUserInputEnvelope = {
    data: UserTranslationCreateManyUserInput | UserTranslationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutFromUserInput = {
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
    toUser: UserCreateNestedOneWithoutReceivedMessagesInput
  }

  export type MessageUncheckedCreateWithoutFromUserInput = {
    id?: number
    toUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutFromUserInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput>
  }

  export type MessageCreateManyFromUserInputEnvelope = {
    data: MessageCreateManyFromUserInput | MessageCreateManyFromUserInput[]
    skipDuplicates?: boolean
  }

  export type MessageCreateWithoutToUserInput = {
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
    fromUser: UserCreateNestedOneWithoutSentMessagesInput
  }

  export type MessageUncheckedCreateWithoutToUserInput = {
    id?: number
    fromUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageCreateOrConnectWithoutToUserInput = {
    where: MessageWhereUniqueInput
    create: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput>
  }

  export type MessageCreateManyToUserInputEnvelope = {
    data: MessageCreateManyToUserInput | MessageCreateManyToUserInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedUsersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedUsersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
  }

  export type UserCreateWithoutCreatedByInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput>
  }

  export type UserCreateManyCreatedByInputEnvelope = {
    data: UserCreateManyCreatedByInput | UserCreateManyCreatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutUpdatedUsersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedUsersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
  }

  export type UserCreateWithoutUpdatedByInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserCreateManyUpdatedByInputEnvelope = {
    data: UserCreateManyUpdatedByInput | UserCreateManyUpdatedByInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutDeletedUsersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
  }

  export type UserUncheckedCreateWithoutDeletedUsersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
  }

  export type UserCreateOrConnectWithoutDeletedUsersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedUsersInput, UserUncheckedCreateWithoutDeletedUsersInput>
  }

  export type UserCreateWithoutDeletedByInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedByInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput>
  }

  export type UserCreateManyDeletedByInputEnvelope = {
    data: UserCreateManyDeletedByInput | UserCreateManyDeletedByInput[]
    skipDuplicates?: boolean
  }

  export type RoleUpsertWithoutUsersInput = {
    update: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
    create: XOR<RoleCreateWithoutUsersInput, RoleUncheckedCreateWithoutUsersInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutUsersInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutUsersInput, RoleUncheckedUpdateWithoutUsersInput>
  }

  export type RoleUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUpdateManyWithoutRolesNestedInput
    createdBy?: UserUpdateOneWithoutCreatedRolesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedRolesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type DeviceUpsertWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    update: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
    create: XOR<DeviceCreateWithoutUserInput, DeviceUncheckedCreateWithoutUserInput>
  }

  export type DeviceUpdateWithWhereUniqueWithoutUserInput = {
    where: DeviceWhereUniqueInput
    data: XOR<DeviceUpdateWithoutUserInput, DeviceUncheckedUpdateWithoutUserInput>
  }

  export type DeviceUpdateManyWithWhereWithoutUserInput = {
    where: DeviceScalarWhereInput
    data: XOR<DeviceUpdateManyMutationInput, DeviceUncheckedUpdateManyWithoutUserInput>
  }

  export type DeviceScalarWhereInput = {
    AND?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    OR?: DeviceScalarWhereInput[]
    NOT?: DeviceScalarWhereInput | DeviceScalarWhereInput[]
    id?: IntFilter<"Device"> | number
    userId?: IntFilter<"Device"> | number
    userAgent?: StringFilter<"Device"> | string
    ip?: StringFilter<"Device"> | string
    lastActive?: DateTimeFilter<"Device"> | Date | string
    createdAt?: DateTimeFilter<"Device"> | Date | string
    isActive?: BoolFilter<"Device"> | boolean
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    token?: StringFilter<"RefreshToken"> | string
    userId?: IntFilter<"RefreshToken"> | number
    deviceId?: IntFilter<"RefreshToken"> | number
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
  }

  export type CartItemUpsertWithWhereUniqueWithoutUserInput = {
    where: CartItemWhereUniqueInput
    update: XOR<CartItemUpdateWithoutUserInput, CartItemUncheckedUpdateWithoutUserInput>
    create: XOR<CartItemCreateWithoutUserInput, CartItemUncheckedCreateWithoutUserInput>
  }

  export type CartItemUpdateWithWhereUniqueWithoutUserInput = {
    where: CartItemWhereUniqueInput
    data: XOR<CartItemUpdateWithoutUserInput, CartItemUncheckedUpdateWithoutUserInput>
  }

  export type CartItemUpdateManyWithWhereWithoutUserInput = {
    where: CartItemScalarWhereInput
    data: XOR<CartItemUpdateManyMutationInput, CartItemUncheckedUpdateManyWithoutUserInput>
  }

  export type CartItemScalarWhereInput = {
    AND?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
    OR?: CartItemScalarWhereInput[]
    NOT?: CartItemScalarWhereInput | CartItemScalarWhereInput[]
    id?: IntFilter<"CartItem"> | number
    quantity?: IntFilter<"CartItem"> | number
    skuId?: IntFilter<"CartItem"> | number
    userId?: IntFilter<"CartItem"> | number
    createdAt?: DateTimeFilter<"CartItem"> | Date | string
    updatedAt?: DateTimeFilter<"CartItem"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
  }

  export type OrderUpdateManyWithWhereWithoutUserInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutUserInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: IntFilter<"Order"> | number
    userId?: IntFilter<"Order"> | number
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    createdById?: IntNullableFilter<"Order"> | number | null
    updatedById?: IntNullableFilter<"Order"> | number | null
    deletedById?: IntNullableFilter<"Order"> | number | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
  }

  export type ReviewUpdateManyWithWhereWithoutUserInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutUserInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: IntFilter<"Review"> | number
    content?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    productId?: IntFilter<"Review"> | number
    userId?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
  }

  export type PermissionUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutCreatedByInput, PermissionUncheckedUpdateWithoutCreatedByInput>
    create: XOR<PermissionCreateWithoutCreatedByInput, PermissionUncheckedCreateWithoutCreatedByInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutCreatedByInput, PermissionUncheckedUpdateWithoutCreatedByInput>
  }

  export type PermissionUpdateManyWithWhereWithoutCreatedByInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type PermissionScalarWhereInput = {
    AND?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    OR?: PermissionScalarWhereInput[]
    NOT?: PermissionScalarWhereInput | PermissionScalarWhereInput[]
    id?: IntFilter<"Permission"> | number
    name?: StringFilter<"Permission"> | string
    description?: StringFilter<"Permission"> | string
    path?: StringFilter<"Permission"> | string
    method?: EnumHTTPMethodFilter<"Permission"> | $Enums.HTTPMethod
    module?: StringFilter<"Permission"> | string
    createdById?: IntNullableFilter<"Permission"> | number | null
    updatedById?: IntNullableFilter<"Permission"> | number | null
    deletedById?: IntNullableFilter<"Permission"> | number | null
    deletedAt?: DateTimeNullableFilter<"Permission"> | Date | string | null
    createdAt?: DateTimeFilter<"Permission"> | Date | string
    updatedAt?: DateTimeFilter<"Permission"> | Date | string
  }

  export type PermissionUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutUpdatedByInput, PermissionUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<PermissionCreateWithoutUpdatedByInput, PermissionUncheckedCreateWithoutUpdatedByInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutUpdatedByInput, PermissionUncheckedUpdateWithoutUpdatedByInput>
  }

  export type PermissionUpdateManyWithWhereWithoutUpdatedByInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type PermissionUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutDeletedByInput, PermissionUncheckedUpdateWithoutDeletedByInput>
    create: XOR<PermissionCreateWithoutDeletedByInput, PermissionUncheckedCreateWithoutDeletedByInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutDeletedByInput, PermissionUncheckedUpdateWithoutDeletedByInput>
  }

  export type PermissionUpdateManyWithWhereWithoutDeletedByInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutCreatedByInput, RoleUncheckedUpdateWithoutCreatedByInput>
    create: XOR<RoleCreateWithoutCreatedByInput, RoleUncheckedCreateWithoutCreatedByInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutCreatedByInput, RoleUncheckedUpdateWithoutCreatedByInput>
  }

  export type RoleUpdateManyWithWhereWithoutCreatedByInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type RoleScalarWhereInput = {
    AND?: RoleScalarWhereInput | RoleScalarWhereInput[]
    OR?: RoleScalarWhereInput[]
    NOT?: RoleScalarWhereInput | RoleScalarWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    description?: StringFilter<"Role"> | string
    isActive?: BoolFilter<"Role"> | boolean
    createdById?: IntNullableFilter<"Role"> | number | null
    updatedById?: IntNullableFilter<"Role"> | number | null
    deletedById?: IntNullableFilter<"Role"> | number | null
    deletedAt?: DateTimeNullableFilter<"Role"> | Date | string | null
    createdAt?: DateTimeFilter<"Role"> | Date | string
    updatedAt?: DateTimeFilter<"Role"> | Date | string
  }

  export type RoleUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutUpdatedByInput, RoleUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<RoleCreateWithoutUpdatedByInput, RoleUncheckedCreateWithoutUpdatedByInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutUpdatedByInput, RoleUncheckedUpdateWithoutUpdatedByInput>
  }

  export type RoleUpdateManyWithWhereWithoutUpdatedByInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutDeletedByInput, RoleUncheckedUpdateWithoutDeletedByInput>
    create: XOR<RoleCreateWithoutDeletedByInput, RoleUncheckedCreateWithoutDeletedByInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutDeletedByInput, RoleUncheckedUpdateWithoutDeletedByInput>
  }

  export type RoleUpdateManyWithWhereWithoutDeletedByInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCreatedByInput, ProductUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ProductCreateWithoutCreatedByInput, ProductUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCreatedByInput, ProductUncheckedUpdateWithoutCreatedByInput>
  }

  export type ProductUpdateManyWithWhereWithoutCreatedByInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: IntFilter<"Product"> | number
    base_price?: FloatFilter<"Product"> | number
    virtual_price?: FloatFilter<"Product"> | number
    brandId?: IntFilter<"Product"> | number
    images?: StringNullableListFilter<"Product">
    createdById?: IntNullableFilter<"Product"> | number | null
    updatedById?: IntNullableFilter<"Product"> | number | null
    deletedById?: IntNullableFilter<"Product"> | number | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutUpdatedByInput, ProductUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ProductCreateWithoutUpdatedByInput, ProductUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutUpdatedByInput, ProductUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ProductUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutDeletedByInput, ProductUncheckedUpdateWithoutDeletedByInput>
    create: XOR<ProductCreateWithoutDeletedByInput, ProductUncheckedCreateWithoutDeletedByInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutDeletedByInput, ProductUncheckedUpdateWithoutDeletedByInput>
  }

  export type ProductUpdateManyWithWhereWithoutDeletedByInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutCreatedByInput, CategoryUncheckedUpdateWithoutCreatedByInput>
    create: XOR<CategoryCreateWithoutCreatedByInput, CategoryUncheckedCreateWithoutCreatedByInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutCreatedByInput, CategoryUncheckedUpdateWithoutCreatedByInput>
  }

  export type CategoryUpdateManyWithWhereWithoutCreatedByInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type CategoryScalarWhereInput = {
    AND?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    OR?: CategoryScalarWhereInput[]
    NOT?: CategoryScalarWhereInput | CategoryScalarWhereInput[]
    id?: IntFilter<"Category"> | number
    parentCategoryId?: IntNullableFilter<"Category"> | number | null
    createdById?: IntNullableFilter<"Category"> | number | null
    updatedById?: IntNullableFilter<"Category"> | number | null
    deletedById?: IntNullableFilter<"Category"> | number | null
    deletedAt?: DateTimeNullableFilter<"Category"> | Date | string | null
    createdAt?: DateTimeFilter<"Category"> | Date | string
    updatedAt?: DateTimeFilter<"Category"> | Date | string
  }

  export type CategoryUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutUpdatedByInput, CategoryUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<CategoryCreateWithoutUpdatedByInput, CategoryUncheckedCreateWithoutUpdatedByInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutUpdatedByInput, CategoryUncheckedUpdateWithoutUpdatedByInput>
  }

  export type CategoryUpdateManyWithWhereWithoutUpdatedByInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type CategoryUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutDeletedByInput, CategoryUncheckedUpdateWithoutDeletedByInput>
    create: XOR<CategoryCreateWithoutDeletedByInput, CategoryUncheckedCreateWithoutDeletedByInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutDeletedByInput, CategoryUncheckedUpdateWithoutDeletedByInput>
  }

  export type CategoryUpdateManyWithWhereWithoutDeletedByInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type VariantUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: VariantWhereUniqueInput
    update: XOR<VariantUpdateWithoutCreatedByInput, VariantUncheckedUpdateWithoutCreatedByInput>
    create: XOR<VariantCreateWithoutCreatedByInput, VariantUncheckedCreateWithoutCreatedByInput>
  }

  export type VariantUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: VariantWhereUniqueInput
    data: XOR<VariantUpdateWithoutCreatedByInput, VariantUncheckedUpdateWithoutCreatedByInput>
  }

  export type VariantUpdateManyWithWhereWithoutCreatedByInput = {
    where: VariantScalarWhereInput
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type VariantScalarWhereInput = {
    AND?: VariantScalarWhereInput | VariantScalarWhereInput[]
    OR?: VariantScalarWhereInput[]
    NOT?: VariantScalarWhereInput | VariantScalarWhereInput[]
    id?: IntFilter<"Variant"> | number
    name?: StringFilter<"Variant"> | string
    productId?: IntFilter<"Variant"> | number
    createdById?: IntNullableFilter<"Variant"> | number | null
    updatedById?: IntNullableFilter<"Variant"> | number | null
    deletedById?: IntNullableFilter<"Variant"> | number | null
    deletedAt?: DateTimeNullableFilter<"Variant"> | Date | string | null
    createdAt?: DateTimeFilter<"Variant"> | Date | string
    updatedAt?: DateTimeFilter<"Variant"> | Date | string
  }

  export type VariantUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: VariantWhereUniqueInput
    update: XOR<VariantUpdateWithoutUpdatedByInput, VariantUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<VariantCreateWithoutUpdatedByInput, VariantUncheckedCreateWithoutUpdatedByInput>
  }

  export type VariantUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: VariantWhereUniqueInput
    data: XOR<VariantUpdateWithoutUpdatedByInput, VariantUncheckedUpdateWithoutUpdatedByInput>
  }

  export type VariantUpdateManyWithWhereWithoutUpdatedByInput = {
    where: VariantScalarWhereInput
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type VariantUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: VariantWhereUniqueInput
    update: XOR<VariantUpdateWithoutDeletedByInput, VariantUncheckedUpdateWithoutDeletedByInput>
    create: XOR<VariantCreateWithoutDeletedByInput, VariantUncheckedCreateWithoutDeletedByInput>
  }

  export type VariantUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: VariantWhereUniqueInput
    data: XOR<VariantUpdateWithoutDeletedByInput, VariantUncheckedUpdateWithoutDeletedByInput>
  }

  export type VariantUpdateManyWithWhereWithoutDeletedByInput = {
    where: VariantScalarWhereInput
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type VariantOptionUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: VariantOptionWhereUniqueInput
    update: XOR<VariantOptionUpdateWithoutCreatedByInput, VariantOptionUncheckedUpdateWithoutCreatedByInput>
    create: XOR<VariantOptionCreateWithoutCreatedByInput, VariantOptionUncheckedCreateWithoutCreatedByInput>
  }

  export type VariantOptionUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: VariantOptionWhereUniqueInput
    data: XOR<VariantOptionUpdateWithoutCreatedByInput, VariantOptionUncheckedUpdateWithoutCreatedByInput>
  }

  export type VariantOptionUpdateManyWithWhereWithoutCreatedByInput = {
    where: VariantOptionScalarWhereInput
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type VariantOptionScalarWhereInput = {
    AND?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
    OR?: VariantOptionScalarWhereInput[]
    NOT?: VariantOptionScalarWhereInput | VariantOptionScalarWhereInput[]
    id?: IntFilter<"VariantOption"> | number
    value?: StringFilter<"VariantOption"> | string
    variantId?: IntFilter<"VariantOption"> | number
    createdById?: IntNullableFilter<"VariantOption"> | number | null
    updatedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedById?: IntNullableFilter<"VariantOption"> | number | null
    deletedAt?: DateTimeNullableFilter<"VariantOption"> | Date | string | null
    createdAt?: DateTimeFilter<"VariantOption"> | Date | string
    updatedAt?: DateTimeFilter<"VariantOption"> | Date | string
  }

  export type VariantOptionUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: VariantOptionWhereUniqueInput
    update: XOR<VariantOptionUpdateWithoutUpdatedByInput, VariantOptionUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<VariantOptionCreateWithoutUpdatedByInput, VariantOptionUncheckedCreateWithoutUpdatedByInput>
  }

  export type VariantOptionUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: VariantOptionWhereUniqueInput
    data: XOR<VariantOptionUpdateWithoutUpdatedByInput, VariantOptionUncheckedUpdateWithoutUpdatedByInput>
  }

  export type VariantOptionUpdateManyWithWhereWithoutUpdatedByInput = {
    where: VariantOptionScalarWhereInput
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type VariantOptionUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: VariantOptionWhereUniqueInput
    update: XOR<VariantOptionUpdateWithoutDeletedByInput, VariantOptionUncheckedUpdateWithoutDeletedByInput>
    create: XOR<VariantOptionCreateWithoutDeletedByInput, VariantOptionUncheckedCreateWithoutDeletedByInput>
  }

  export type VariantOptionUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: VariantOptionWhereUniqueInput
    data: XOR<VariantOptionUpdateWithoutDeletedByInput, VariantOptionUncheckedUpdateWithoutDeletedByInput>
  }

  export type VariantOptionUpdateManyWithWhereWithoutDeletedByInput = {
    where: VariantOptionScalarWhereInput
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type SKUUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: SKUWhereUniqueInput
    update: XOR<SKUUpdateWithoutCreatedByInput, SKUUncheckedUpdateWithoutCreatedByInput>
    create: XOR<SKUCreateWithoutCreatedByInput, SKUUncheckedCreateWithoutCreatedByInput>
  }

  export type SKUUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: SKUWhereUniqueInput
    data: XOR<SKUUpdateWithoutCreatedByInput, SKUUncheckedUpdateWithoutCreatedByInput>
  }

  export type SKUUpdateManyWithWhereWithoutCreatedByInput = {
    where: SKUScalarWhereInput
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type SKUScalarWhereInput = {
    AND?: SKUScalarWhereInput | SKUScalarWhereInput[]
    OR?: SKUScalarWhereInput[]
    NOT?: SKUScalarWhereInput | SKUScalarWhereInput[]
    id?: IntFilter<"SKU"> | number
    value?: StringFilter<"SKU"> | string
    price?: FloatFilter<"SKU"> | number
    stock?: IntFilter<"SKU"> | number
    images?: StringNullableListFilter<"SKU">
    productId?: IntFilter<"SKU"> | number
    createdById?: IntNullableFilter<"SKU"> | number | null
    updatedById?: IntNullableFilter<"SKU"> | number | null
    deletedById?: IntNullableFilter<"SKU"> | number | null
    deletedAt?: DateTimeNullableFilter<"SKU"> | Date | string | null
    createdAt?: DateTimeFilter<"SKU"> | Date | string
    updatedAt?: DateTimeFilter<"SKU"> | Date | string
  }

  export type SKUUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: SKUWhereUniqueInput
    update: XOR<SKUUpdateWithoutUpdatedByInput, SKUUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<SKUCreateWithoutUpdatedByInput, SKUUncheckedCreateWithoutUpdatedByInput>
  }

  export type SKUUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: SKUWhereUniqueInput
    data: XOR<SKUUpdateWithoutUpdatedByInput, SKUUncheckedUpdateWithoutUpdatedByInput>
  }

  export type SKUUpdateManyWithWhereWithoutUpdatedByInput = {
    where: SKUScalarWhereInput
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type SKUUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: SKUWhereUniqueInput
    update: XOR<SKUUpdateWithoutDeletedByInput, SKUUncheckedUpdateWithoutDeletedByInput>
    create: XOR<SKUCreateWithoutDeletedByInput, SKUUncheckedCreateWithoutDeletedByInput>
  }

  export type SKUUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: SKUWhereUniqueInput
    data: XOR<SKUUpdateWithoutDeletedByInput, SKUUncheckedUpdateWithoutDeletedByInput>
  }

  export type SKUUpdateManyWithWhereWithoutDeletedByInput = {
    where: SKUScalarWhereInput
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type LanguageUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutCreatedByInput, LanguageUncheckedUpdateWithoutCreatedByInput>
    create: XOR<LanguageCreateWithoutCreatedByInput, LanguageUncheckedCreateWithoutCreatedByInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutCreatedByInput, LanguageUncheckedUpdateWithoutCreatedByInput>
  }

  export type LanguageUpdateManyWithWhereWithoutCreatedByInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type LanguageScalarWhereInput = {
    AND?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
    OR?: LanguageScalarWhereInput[]
    NOT?: LanguageScalarWhereInput | LanguageScalarWhereInput[]
    id?: StringFilter<"Language"> | string
    name?: StringFilter<"Language"> | string
    createdById?: IntNullableFilter<"Language"> | number | null
    updatedById?: IntNullableFilter<"Language"> | number | null
    deletedById?: IntNullableFilter<"Language"> | number | null
    deletedAt?: DateTimeNullableFilter<"Language"> | Date | string | null
    createdAt?: DateTimeFilter<"Language"> | Date | string
    updatedAt?: DateTimeFilter<"Language"> | Date | string
  }

  export type LanguageUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutUpdatedByInput, LanguageUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<LanguageCreateWithoutUpdatedByInput, LanguageUncheckedCreateWithoutUpdatedByInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutUpdatedByInput, LanguageUncheckedUpdateWithoutUpdatedByInput>
  }

  export type LanguageUpdateManyWithWhereWithoutUpdatedByInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type LanguageUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: LanguageWhereUniqueInput
    update: XOR<LanguageUpdateWithoutDeletedByInput, LanguageUncheckedUpdateWithoutDeletedByInput>
    create: XOR<LanguageCreateWithoutDeletedByInput, LanguageUncheckedCreateWithoutDeletedByInput>
  }

  export type LanguageUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: LanguageWhereUniqueInput
    data: XOR<LanguageUpdateWithoutDeletedByInput, LanguageUncheckedUpdateWithoutDeletedByInput>
  }

  export type LanguageUpdateManyWithWhereWithoutDeletedByInput = {
    where: LanguageScalarWhereInput
    data: XOR<LanguageUpdateManyMutationInput, LanguageUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type BrandUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutCreatedByInput, BrandUncheckedUpdateWithoutCreatedByInput>
    create: XOR<BrandCreateWithoutCreatedByInput, BrandUncheckedCreateWithoutCreatedByInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutCreatedByInput, BrandUncheckedUpdateWithoutCreatedByInput>
  }

  export type BrandUpdateManyWithWhereWithoutCreatedByInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type BrandScalarWhereInput = {
    AND?: BrandScalarWhereInput | BrandScalarWhereInput[]
    OR?: BrandScalarWhereInput[]
    NOT?: BrandScalarWhereInput | BrandScalarWhereInput[]
    id?: IntFilter<"Brand"> | number
    logo?: StringFilter<"Brand"> | string
    createdById?: IntNullableFilter<"Brand"> | number | null
    updatedById?: IntNullableFilter<"Brand"> | number | null
    deletedById?: IntNullableFilter<"Brand"> | number | null
    deletedAt?: DateTimeNullableFilter<"Brand"> | Date | string | null
    createdAt?: DateTimeFilter<"Brand"> | Date | string
    updatedAt?: DateTimeFilter<"Brand"> | Date | string
  }

  export type BrandUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutUpdatedByInput, BrandUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<BrandCreateWithoutUpdatedByInput, BrandUncheckedCreateWithoutUpdatedByInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutUpdatedByInput, BrandUncheckedUpdateWithoutUpdatedByInput>
  }

  export type BrandUpdateManyWithWhereWithoutUpdatedByInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type BrandUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: BrandWhereUniqueInput
    update: XOR<BrandUpdateWithoutDeletedByInput, BrandUncheckedUpdateWithoutDeletedByInput>
    create: XOR<BrandCreateWithoutDeletedByInput, BrandUncheckedCreateWithoutDeletedByInput>
  }

  export type BrandUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: BrandWhereUniqueInput
    data: XOR<BrandUpdateWithoutDeletedByInput, BrandUncheckedUpdateWithoutDeletedByInput>
  }

  export type BrandUpdateManyWithWhereWithoutDeletedByInput = {
    where: BrandScalarWhereInput
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutCreatedByInput, ProductTranslationUncheckedUpdateWithoutCreatedByInput>
    create: XOR<ProductTranslationCreateWithoutCreatedByInput, ProductTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutCreatedByInput, ProductTranslationUncheckedUpdateWithoutCreatedByInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutCreatedByInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutUpdatedByInput, ProductTranslationUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<ProductTranslationCreateWithoutUpdatedByInput, ProductTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutUpdatedByInput, ProductTranslationUncheckedUpdateWithoutUpdatedByInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutUpdatedByInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutDeletedByInput, ProductTranslationUncheckedUpdateWithoutDeletedByInput>
    create: XOR<ProductTranslationCreateWithoutDeletedByInput, ProductTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutDeletedByInput, ProductTranslationUncheckedUpdateWithoutDeletedByInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutDeletedByInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutCreatedByInput, CategoryTranslationUncheckedUpdateWithoutCreatedByInput>
    create: XOR<CategoryTranslationCreateWithoutCreatedByInput, CategoryTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutCreatedByInput, CategoryTranslationUncheckedUpdateWithoutCreatedByInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutCreatedByInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutUpdatedByInput, CategoryTranslationUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<CategoryTranslationCreateWithoutUpdatedByInput, CategoryTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutUpdatedByInput, CategoryTranslationUncheckedUpdateWithoutUpdatedByInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutUpdatedByInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutDeletedByInput, CategoryTranslationUncheckedUpdateWithoutDeletedByInput>
    create: XOR<CategoryTranslationCreateWithoutDeletedByInput, CategoryTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutDeletedByInput, CategoryTranslationUncheckedUpdateWithoutDeletedByInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutDeletedByInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type BrandTranslationUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: BrandTranslationWhereUniqueInput
    update: XOR<BrandTranslationUpdateWithoutCreatedByInput, BrandTranslationUncheckedUpdateWithoutCreatedByInput>
    create: XOR<BrandTranslationCreateWithoutCreatedByInput, BrandTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type BrandTranslationUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: BrandTranslationWhereUniqueInput
    data: XOR<BrandTranslationUpdateWithoutCreatedByInput, BrandTranslationUncheckedUpdateWithoutCreatedByInput>
  }

  export type BrandTranslationUpdateManyWithWhereWithoutCreatedByInput = {
    where: BrandTranslationScalarWhereInput
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type BrandTranslationUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: BrandTranslationWhereUniqueInput
    update: XOR<BrandTranslationUpdateWithoutUpdatedByInput, BrandTranslationUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<BrandTranslationCreateWithoutUpdatedByInput, BrandTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type BrandTranslationUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: BrandTranslationWhereUniqueInput
    data: XOR<BrandTranslationUpdateWithoutUpdatedByInput, BrandTranslationUncheckedUpdateWithoutUpdatedByInput>
  }

  export type BrandTranslationUpdateManyWithWhereWithoutUpdatedByInput = {
    where: BrandTranslationScalarWhereInput
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type BrandTranslationUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: BrandTranslationWhereUniqueInput
    update: XOR<BrandTranslationUpdateWithoutDeletedByInput, BrandTranslationUncheckedUpdateWithoutDeletedByInput>
    create: XOR<BrandTranslationCreateWithoutDeletedByInput, BrandTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type BrandTranslationUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: BrandTranslationWhereUniqueInput
    data: XOR<BrandTranslationUpdateWithoutDeletedByInput, BrandTranslationUncheckedUpdateWithoutDeletedByInput>
  }

  export type BrandTranslationUpdateManyWithWhereWithoutDeletedByInput = {
    where: BrandTranslationScalarWhereInput
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCreatedByInput, OrderUncheckedUpdateWithoutCreatedByInput>
    create: XOR<OrderCreateWithoutCreatedByInput, OrderUncheckedCreateWithoutCreatedByInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCreatedByInput, OrderUncheckedUpdateWithoutCreatedByInput>
  }

  export type OrderUpdateManyWithWhereWithoutCreatedByInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutUpdatedByInput, OrderUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<OrderCreateWithoutUpdatedByInput, OrderUncheckedCreateWithoutUpdatedByInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutUpdatedByInput, OrderUncheckedUpdateWithoutUpdatedByInput>
  }

  export type OrderUpdateManyWithWhereWithoutUpdatedByInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutDeletedByInput, OrderUncheckedUpdateWithoutDeletedByInput>
    create: XOR<OrderCreateWithoutDeletedByInput, OrderUncheckedCreateWithoutDeletedByInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutDeletedByInput, OrderUncheckedUpdateWithoutDeletedByInput>
  }

  export type OrderUpdateManyWithWhereWithoutDeletedByInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type UserTranslationUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: UserTranslationWhereUniqueInput
    update: XOR<UserTranslationUpdateWithoutCreatedByInput, UserTranslationUncheckedUpdateWithoutCreatedByInput>
    create: XOR<UserTranslationCreateWithoutCreatedByInput, UserTranslationUncheckedCreateWithoutCreatedByInput>
  }

  export type UserTranslationUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: UserTranslationWhereUniqueInput
    data: XOR<UserTranslationUpdateWithoutCreatedByInput, UserTranslationUncheckedUpdateWithoutCreatedByInput>
  }

  export type UserTranslationUpdateManyWithWhereWithoutCreatedByInput = {
    where: UserTranslationScalarWhereInput
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type UserTranslationUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: UserTranslationWhereUniqueInput
    update: XOR<UserTranslationUpdateWithoutUpdatedByInput, UserTranslationUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<UserTranslationCreateWithoutUpdatedByInput, UserTranslationUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserTranslationUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: UserTranslationWhereUniqueInput
    data: XOR<UserTranslationUpdateWithoutUpdatedByInput, UserTranslationUncheckedUpdateWithoutUpdatedByInput>
  }

  export type UserTranslationUpdateManyWithWhereWithoutUpdatedByInput = {
    where: UserTranslationScalarWhereInput
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type UserTranslationUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: UserTranslationWhereUniqueInput
    update: XOR<UserTranslationUpdateWithoutDeletedByInput, UserTranslationUncheckedUpdateWithoutDeletedByInput>
    create: XOR<UserTranslationCreateWithoutDeletedByInput, UserTranslationUncheckedCreateWithoutDeletedByInput>
  }

  export type UserTranslationUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: UserTranslationWhereUniqueInput
    data: XOR<UserTranslationUpdateWithoutDeletedByInput, UserTranslationUncheckedUpdateWithoutDeletedByInput>
  }

  export type UserTranslationUpdateManyWithWhereWithoutDeletedByInput = {
    where: UserTranslationScalarWhereInput
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type UserTranslationUpsertWithWhereUniqueWithoutUserInput = {
    where: UserTranslationWhereUniqueInput
    update: XOR<UserTranslationUpdateWithoutUserInput, UserTranslationUncheckedUpdateWithoutUserInput>
    create: XOR<UserTranslationCreateWithoutUserInput, UserTranslationUncheckedCreateWithoutUserInput>
  }

  export type UserTranslationUpdateWithWhereUniqueWithoutUserInput = {
    where: UserTranslationWhereUniqueInput
    data: XOR<UserTranslationUpdateWithoutUserInput, UserTranslationUncheckedUpdateWithoutUserInput>
  }

  export type UserTranslationUpdateManyWithWhereWithoutUserInput = {
    where: UserTranslationScalarWhereInput
    data: XOR<UserTranslationUpdateManyMutationInput, UserTranslationUncheckedUpdateManyWithoutUserInput>
  }

  export type MessageUpsertWithWhereUniqueWithoutFromUserInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutFromUserInput, MessageUncheckedUpdateWithoutFromUserInput>
    create: XOR<MessageCreateWithoutFromUserInput, MessageUncheckedCreateWithoutFromUserInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutFromUserInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutFromUserInput, MessageUncheckedUpdateWithoutFromUserInput>
  }

  export type MessageUpdateManyWithWhereWithoutFromUserInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutFromUserInput>
  }

  export type MessageScalarWhereInput = {
    AND?: MessageScalarWhereInput | MessageScalarWhereInput[]
    OR?: MessageScalarWhereInput[]
    NOT?: MessageScalarWhereInput | MessageScalarWhereInput[]
    id?: IntFilter<"Message"> | number
    fromUserId?: IntFilter<"Message"> | number
    toUserId?: IntFilter<"Message"> | number
    content?: StringFilter<"Message"> | string
    readAt?: DateTimeNullableFilter<"Message"> | Date | string | null
    createdAt?: DateTimeFilter<"Message"> | Date | string
  }

  export type MessageUpsertWithWhereUniqueWithoutToUserInput = {
    where: MessageWhereUniqueInput
    update: XOR<MessageUpdateWithoutToUserInput, MessageUncheckedUpdateWithoutToUserInput>
    create: XOR<MessageCreateWithoutToUserInput, MessageUncheckedCreateWithoutToUserInput>
  }

  export type MessageUpdateWithWhereUniqueWithoutToUserInput = {
    where: MessageWhereUniqueInput
    data: XOR<MessageUpdateWithoutToUserInput, MessageUncheckedUpdateWithoutToUserInput>
  }

  export type MessageUpdateManyWithWhereWithoutToUserInput = {
    where: MessageScalarWhereInput
    data: XOR<MessageUpdateManyMutationInput, MessageUncheckedUpdateManyWithoutToUserInput>
  }

  export type UserUpsertWithoutCreatedUsersInput = {
    update: XOR<UserUpdateWithoutCreatedUsersInput, UserUncheckedUpdateWithoutCreatedUsersInput>
    create: XOR<UserCreateWithoutCreatedUsersInput, UserUncheckedCreateWithoutCreatedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedUsersInput, UserUncheckedUpdateWithoutCreatedUsersInput>
  }

  export type UserUpdateWithoutCreatedUsersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCreatedByInput, UserUncheckedUpdateWithoutCreatedByInput>
    create: XOR<UserCreateWithoutCreatedByInput, UserUncheckedCreateWithoutCreatedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCreatedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCreatedByInput, UserUncheckedUpdateWithoutCreatedByInput>
  }

  export type UserUpdateManyWithWhereWithoutCreatedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCreatedByInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    phoneNumber?: StringFilter<"User"> | string
    avatar?: StringNullableFilter<"User"> | string | null
    totpSecret?: StringNullableFilter<"User"> | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    roleId?: IntFilter<"User"> | number
    createdById?: IntNullableFilter<"User"> | number | null
    updatedById?: IntNullableFilter<"User"> | number | null
    deletedById?: IntNullableFilter<"User"> | number | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserUpsertWithoutUpdatedUsersInput = {
    update: XOR<UserUpdateWithoutUpdatedUsersInput, UserUncheckedUpdateWithoutUpdatedUsersInput>
    create: XOR<UserCreateWithoutUpdatedUsersInput, UserUncheckedCreateWithoutUpdatedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedUsersInput, UserUncheckedUpdateWithoutUpdatedUsersInput>
  }

  export type UserUpdateWithoutUpdatedUsersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutUpdatedByInput, UserUncheckedUpdateWithoutUpdatedByInput>
    create: XOR<UserCreateWithoutUpdatedByInput, UserUncheckedCreateWithoutUpdatedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutUpdatedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutUpdatedByInput, UserUncheckedUpdateWithoutUpdatedByInput>
  }

  export type UserUpdateManyWithWhereWithoutUpdatedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUpdatedByInput>
  }

  export type UserUpsertWithoutDeletedUsersInput = {
    update: XOR<UserUpdateWithoutDeletedUsersInput, UserUncheckedUpdateWithoutDeletedUsersInput>
    create: XOR<UserCreateWithoutDeletedUsersInput, UserUncheckedCreateWithoutDeletedUsersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedUsersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedUsersInput, UserUncheckedUpdateWithoutDeletedUsersInput>
  }

  export type UserUpdateWithoutDeletedUsersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutDeletedByInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutDeletedByInput, UserUncheckedUpdateWithoutDeletedByInput>
    create: XOR<UserCreateWithoutDeletedByInput, UserUncheckedCreateWithoutDeletedByInput>
  }

  export type UserUpdateWithWhereUniqueWithoutDeletedByInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutDeletedByInput, UserUncheckedUpdateWithoutDeletedByInput>
  }

  export type UserUpdateManyWithWhereWithoutDeletedByInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutDeletedByInput>
  }

  export type UserCreateWithoutUserTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUserTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUserTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserTranslationsInput, UserUncheckedCreateWithoutUserTranslationsInput>
  }

  export type LanguageCreateWithoutUserTranslationsInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutUserTranslationsInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutUserTranslationsInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutUserTranslationsInput, LanguageUncheckedCreateWithoutUserTranslationsInput>
  }

  export type UserCreateWithoutCreatedUserTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedUserTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedUserTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedUserTranslationsInput, UserUncheckedCreateWithoutCreatedUserTranslationsInput>
  }

  export type UserCreateWithoutUpdatedUserTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedUserTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedUserTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedUserTranslationsInput, UserUncheckedCreateWithoutUpdatedUserTranslationsInput>
  }

  export type UserCreateWithoutDeletedUserTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedUserTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedUserTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedUserTranslationsInput, UserUncheckedCreateWithoutDeletedUserTranslationsInput>
  }

  export type UserUpsertWithoutUserTranslationsInput = {
    update: XOR<UserUpdateWithoutUserTranslationsInput, UserUncheckedUpdateWithoutUserTranslationsInput>
    create: XOR<UserCreateWithoutUserTranslationsInput, UserUncheckedCreateWithoutUserTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserTranslationsInput, UserUncheckedUpdateWithoutUserTranslationsInput>
  }

  export type UserUpdateWithoutUserTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUserTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type LanguageUpsertWithoutUserTranslationsInput = {
    update: XOR<LanguageUpdateWithoutUserTranslationsInput, LanguageUncheckedUpdateWithoutUserTranslationsInput>
    create: XOR<LanguageCreateWithoutUserTranslationsInput, LanguageUncheckedCreateWithoutUserTranslationsInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutUserTranslationsInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutUserTranslationsInput, LanguageUncheckedUpdateWithoutUserTranslationsInput>
  }

  export type LanguageUpdateWithoutUserTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUserTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type UserUpsertWithoutCreatedUserTranslationsInput = {
    update: XOR<UserUpdateWithoutCreatedUserTranslationsInput, UserUncheckedUpdateWithoutCreatedUserTranslationsInput>
    create: XOR<UserCreateWithoutCreatedUserTranslationsInput, UserUncheckedCreateWithoutCreatedUserTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedUserTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedUserTranslationsInput, UserUncheckedUpdateWithoutCreatedUserTranslationsInput>
  }

  export type UserUpdateWithoutCreatedUserTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedUserTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedUserTranslationsInput = {
    update: XOR<UserUpdateWithoutUpdatedUserTranslationsInput, UserUncheckedUpdateWithoutUpdatedUserTranslationsInput>
    create: XOR<UserCreateWithoutUpdatedUserTranslationsInput, UserUncheckedCreateWithoutUpdatedUserTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedUserTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedUserTranslationsInput, UserUncheckedUpdateWithoutUpdatedUserTranslationsInput>
  }

  export type UserUpdateWithoutUpdatedUserTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedUserTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedUserTranslationsInput = {
    update: XOR<UserUpdateWithoutDeletedUserTranslationsInput, UserUncheckedUpdateWithoutDeletedUserTranslationsInput>
    create: XOR<UserCreateWithoutDeletedUserTranslationsInput, UserUncheckedCreateWithoutDeletedUserTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedUserTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedUserTranslationsInput, UserUncheckedUpdateWithoutDeletedUserTranslationsInput>
  }

  export type UserUpdateWithoutDeletedUserTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedUserTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserCreateWithoutDevicesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDevicesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDevicesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
  }

  export type RefreshTokenCreateWithoutDeviceInput = {
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutRefreshTokensInput
  }

  export type RefreshTokenUncheckedCreateWithoutDeviceInput = {
    token: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenCreateOrConnectWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput>
  }

  export type RefreshTokenCreateManyDeviceInputEnvelope = {
    data: RefreshTokenCreateManyDeviceInput | RefreshTokenCreateManyDeviceInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDevicesInput = {
    update: XOR<UserUpdateWithoutDevicesInput, UserUncheckedUpdateWithoutDevicesInput>
    create: XOR<UserCreateWithoutDevicesInput, UserUncheckedCreateWithoutDevicesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDevicesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDevicesInput, UserUncheckedUpdateWithoutDevicesInput>
  }

  export type UserUpdateWithoutDevicesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDevicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutDeviceInput, RefreshTokenUncheckedUpdateWithoutDeviceInput>
    create: XOR<RefreshTokenCreateWithoutDeviceInput, RefreshTokenUncheckedCreateWithoutDeviceInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutDeviceInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutDeviceInput, RefreshTokenUncheckedUpdateWithoutDeviceInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutDeviceInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutDeviceInput>
  }

  export type UserCreateWithoutRefreshTokensInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutRefreshTokensInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutRefreshTokensInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
  }

  export type DeviceCreateWithoutRefreshTokensInput = {
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
    user: UserCreateNestedOneWithoutDevicesInput
  }

  export type DeviceUncheckedCreateWithoutRefreshTokensInput = {
    id?: number
    userId: number
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type DeviceCreateOrConnectWithoutRefreshTokensInput = {
    where: DeviceWhereUniqueInput
    create: XOR<DeviceCreateWithoutRefreshTokensInput, DeviceUncheckedCreateWithoutRefreshTokensInput>
  }

  export type UserUpsertWithoutRefreshTokensInput = {
    update: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<UserCreateWithoutRefreshTokensInput, UserUncheckedCreateWithoutRefreshTokensInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokensInput, UserUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type UserUpdateWithoutRefreshTokensInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type DeviceUpsertWithoutRefreshTokensInput = {
    update: XOR<DeviceUpdateWithoutRefreshTokensInput, DeviceUncheckedUpdateWithoutRefreshTokensInput>
    create: XOR<DeviceCreateWithoutRefreshTokensInput, DeviceUncheckedCreateWithoutRefreshTokensInput>
    where?: DeviceWhereInput
  }

  export type DeviceUpdateToOneWithWhereWithoutRefreshTokensInput = {
    where?: DeviceWhereInput
    data: XOR<DeviceUpdateWithoutRefreshTokensInput, DeviceUncheckedUpdateWithoutRefreshTokensInput>
  }

  export type DeviceUpdateWithoutRefreshTokensInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutDevicesNestedInput
  }

  export type DeviceUncheckedUpdateWithoutRefreshTokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RoleCreateWithoutPermissionsInput = {
    name: string
    description?: string
    isActive?: boolean
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutRoleInput
    createdBy?: UserCreateNestedOneWithoutCreatedRolesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedRolesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedRolesInput
  }

  export type RoleUncheckedCreateWithoutPermissionsInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
  }

  export type UserCreateWithoutCreatedPermissionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedPermissionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedPermissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedPermissionsInput, UserUncheckedCreateWithoutCreatedPermissionsInput>
  }

  export type UserCreateWithoutUpdatedPermissionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedPermissionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedPermissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedPermissionsInput, UserUncheckedCreateWithoutUpdatedPermissionsInput>
  }

  export type UserCreateWithoutDeletedPermissionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedPermissionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedPermissionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedPermissionsInput, UserUncheckedCreateWithoutDeletedPermissionsInput>
  }

  export type RoleUpsertWithWhereUniqueWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    update: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
    create: XOR<RoleCreateWithoutPermissionsInput, RoleUncheckedCreateWithoutPermissionsInput>
  }

  export type RoleUpdateWithWhereUniqueWithoutPermissionsInput = {
    where: RoleWhereUniqueInput
    data: XOR<RoleUpdateWithoutPermissionsInput, RoleUncheckedUpdateWithoutPermissionsInput>
  }

  export type RoleUpdateManyWithWhereWithoutPermissionsInput = {
    where: RoleScalarWhereInput
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyWithoutPermissionsInput>
  }

  export type UserUpsertWithoutCreatedPermissionsInput = {
    update: XOR<UserUpdateWithoutCreatedPermissionsInput, UserUncheckedUpdateWithoutCreatedPermissionsInput>
    create: XOR<UserCreateWithoutCreatedPermissionsInput, UserUncheckedCreateWithoutCreatedPermissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedPermissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedPermissionsInput, UserUncheckedUpdateWithoutCreatedPermissionsInput>
  }

  export type UserUpdateWithoutCreatedPermissionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedPermissionsInput = {
    update: XOR<UserUpdateWithoutUpdatedPermissionsInput, UserUncheckedUpdateWithoutUpdatedPermissionsInput>
    create: XOR<UserCreateWithoutUpdatedPermissionsInput, UserUncheckedCreateWithoutUpdatedPermissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedPermissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedPermissionsInput, UserUncheckedUpdateWithoutUpdatedPermissionsInput>
  }

  export type UserUpdateWithoutUpdatedPermissionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedPermissionsInput = {
    update: XOR<UserUpdateWithoutDeletedPermissionsInput, UserUncheckedUpdateWithoutDeletedPermissionsInput>
    create: XOR<UserCreateWithoutDeletedPermissionsInput, UserUncheckedCreateWithoutDeletedPermissionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedPermissionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedPermissionsInput, UserUncheckedUpdateWithoutDeletedPermissionsInput>
  }

  export type UserUpdateWithoutDeletedPermissionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type PermissionCreateWithoutRolesInput = {
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: UserCreateNestedOneWithoutCreatedPermissionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedPermissionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedPermissionsInput
  }

  export type PermissionUncheckedCreateWithoutRolesInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionCreateOrConnectWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    create: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput>
  }

  export type UserCreateWithoutRoleInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutRoleInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutRoleInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserCreateManyRoleInputEnvelope = {
    data: UserCreateManyRoleInput | UserCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedRolesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedRolesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedRolesInput, UserUncheckedCreateWithoutCreatedRolesInput>
  }

  export type UserCreateWithoutUpdatedRolesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedRolesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedRolesInput, UserUncheckedCreateWithoutUpdatedRolesInput>
  }

  export type UserCreateWithoutDeletedRolesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedRolesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedRolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedRolesInput, UserUncheckedCreateWithoutDeletedRolesInput>
  }

  export type PermissionUpsertWithWhereUniqueWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    update: XOR<PermissionUpdateWithoutRolesInput, PermissionUncheckedUpdateWithoutRolesInput>
    create: XOR<PermissionCreateWithoutRolesInput, PermissionUncheckedCreateWithoutRolesInput>
  }

  export type PermissionUpdateWithWhereUniqueWithoutRolesInput = {
    where: PermissionWhereUniqueInput
    data: XOR<PermissionUpdateWithoutRolesInput, PermissionUncheckedUpdateWithoutRolesInput>
  }

  export type PermissionUpdateManyWithWhereWithoutRolesInput = {
    where: PermissionScalarWhereInput
    data: XOR<PermissionUpdateManyMutationInput, PermissionUncheckedUpdateManyWithoutRolesInput>
  }

  export type UserUpsertWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
    create: XOR<UserCreateWithoutRoleInput, UserUncheckedCreateWithoutRoleInput>
  }

  export type UserUpdateWithWhereUniqueWithoutRoleInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutRoleInput, UserUncheckedUpdateWithoutRoleInput>
  }

  export type UserUpdateManyWithWhereWithoutRoleInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutRoleInput>
  }

  export type UserUpsertWithoutCreatedRolesInput = {
    update: XOR<UserUpdateWithoutCreatedRolesInput, UserUncheckedUpdateWithoutCreatedRolesInput>
    create: XOR<UserCreateWithoutCreatedRolesInput, UserUncheckedCreateWithoutCreatedRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedRolesInput, UserUncheckedUpdateWithoutCreatedRolesInput>
  }

  export type UserUpdateWithoutCreatedRolesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedRolesInput = {
    update: XOR<UserUpdateWithoutUpdatedRolesInput, UserUncheckedUpdateWithoutUpdatedRolesInput>
    create: XOR<UserCreateWithoutUpdatedRolesInput, UserUncheckedCreateWithoutUpdatedRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedRolesInput, UserUncheckedUpdateWithoutUpdatedRolesInput>
  }

  export type UserUpdateWithoutUpdatedRolesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedRolesInput = {
    update: XOR<UserUpdateWithoutDeletedRolesInput, UserUncheckedUpdateWithoutDeletedRolesInput>
    create: XOR<UserCreateWithoutDeletedRolesInput, UserUncheckedCreateWithoutDeletedRolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedRolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedRolesInput, UserUncheckedUpdateWithoutDeletedRolesInput>
  }

  export type UserUpdateWithoutDeletedRolesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type BrandCreateWithoutProductsInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brandTranslations?: BrandTranslationCreateNestedManyWithoutBrandInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandsInput
  }

  export type BrandUncheckedCreateWithoutProductsInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutProductsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
  }

  export type CategoryCreateWithoutProductsInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutProductsInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
  }

  export type VariantCreateWithoutProductInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionCreateNestedManyWithoutVariantInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantsInput
  }

  export type VariantUncheckedCreateWithoutProductInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutVariantInput
  }

  export type VariantCreateOrConnectWithoutProductInput = {
    where: VariantWhereUniqueInput
    create: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput>
  }

  export type VariantCreateManyProductInputEnvelope = {
    data: VariantCreateManyProductInput | VariantCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type SKUCreateWithoutProductInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutProductInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutProductInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput>
  }

  export type SKUCreateManyProductInputEnvelope = {
    data: SKUCreateManyProductInput | SKUCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutProductInput = {
    content: string
    rating: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutProductInput = {
    id?: number
    content: string
    rating: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutProductInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewCreateManyProductInputEnvelope = {
    data: ReviewCreateManyProductInput | ReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductTranslationCreateWithoutProductInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    language: LanguageCreateNestedOneWithoutProductTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductTranslationsInput
  }

  export type ProductTranslationUncheckedCreateWithoutProductInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateOrConnectWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationCreateManyProductInputEnvelope = {
    data: ProductTranslationCreateManyProductInput | ProductTranslationCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedProductsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedProductsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedProductsInput, UserUncheckedCreateWithoutCreatedProductsInput>
  }

  export type UserCreateWithoutUpdatedProductsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedProductsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedProductsInput, UserUncheckedCreateWithoutUpdatedProductsInput>
  }

  export type UserCreateWithoutDeletedProductsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedProductsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedProductsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedProductsInput, UserUncheckedCreateWithoutDeletedProductsInput>
  }

  export type BrandUpsertWithoutProductsInput = {
    update: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutProductsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateWithoutProductsInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brandTranslations?: BrandTranslationUpdateManyWithoutBrandNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type CategoryUpdateManyWithWhereWithoutProductsInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutProductsInput>
  }

  export type VariantUpsertWithWhereUniqueWithoutProductInput = {
    where: VariantWhereUniqueInput
    update: XOR<VariantUpdateWithoutProductInput, VariantUncheckedUpdateWithoutProductInput>
    create: XOR<VariantCreateWithoutProductInput, VariantUncheckedCreateWithoutProductInput>
  }

  export type VariantUpdateWithWhereUniqueWithoutProductInput = {
    where: VariantWhereUniqueInput
    data: XOR<VariantUpdateWithoutProductInput, VariantUncheckedUpdateWithoutProductInput>
  }

  export type VariantUpdateManyWithWhereWithoutProductInput = {
    where: VariantScalarWhereInput
    data: XOR<VariantUpdateManyMutationInput, VariantUncheckedUpdateManyWithoutProductInput>
  }

  export type SKUUpsertWithWhereUniqueWithoutProductInput = {
    where: SKUWhereUniqueInput
    update: XOR<SKUUpdateWithoutProductInput, SKUUncheckedUpdateWithoutProductInput>
    create: XOR<SKUCreateWithoutProductInput, SKUUncheckedCreateWithoutProductInput>
  }

  export type SKUUpdateWithWhereUniqueWithoutProductInput = {
    where: SKUWhereUniqueInput
    data: XOR<SKUUpdateWithoutProductInput, SKUUncheckedUpdateWithoutProductInput>
  }

  export type SKUUpdateManyWithWhereWithoutProductInput = {
    where: SKUScalarWhereInput
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyWithoutProductInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
  }

  export type ReviewUpdateManyWithWhereWithoutProductInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutProductInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutProductInput>
  }

  export type UserUpsertWithoutCreatedProductsInput = {
    update: XOR<UserUpdateWithoutCreatedProductsInput, UserUncheckedUpdateWithoutCreatedProductsInput>
    create: XOR<UserCreateWithoutCreatedProductsInput, UserUncheckedCreateWithoutCreatedProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedProductsInput, UserUncheckedUpdateWithoutCreatedProductsInput>
  }

  export type UserUpdateWithoutCreatedProductsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedProductsInput = {
    update: XOR<UserUpdateWithoutUpdatedProductsInput, UserUncheckedUpdateWithoutUpdatedProductsInput>
    create: XOR<UserCreateWithoutUpdatedProductsInput, UserUncheckedCreateWithoutUpdatedProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedProductsInput, UserUncheckedUpdateWithoutUpdatedProductsInput>
  }

  export type UserUpdateWithoutUpdatedProductsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedProductsInput = {
    update: XOR<UserUpdateWithoutDeletedProductsInput, UserUncheckedUpdateWithoutDeletedProductsInput>
    create: XOR<UserCreateWithoutDeletedProductsInput, UserUncheckedCreateWithoutDeletedProductsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedProductsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedProductsInput, UserUncheckedUpdateWithoutDeletedProductsInput>
  }

  export type UserUpdateWithoutDeletedProductsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutProductTranslationsInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutProductTranslationsInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductTranslationsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductTranslationsInput, ProductUncheckedCreateWithoutProductTranslationsInput>
  }

  export type LanguageCreateWithoutProductTranslationsInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutProductTranslationsInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutProductTranslationsInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutProductTranslationsInput, LanguageUncheckedCreateWithoutProductTranslationsInput>
  }

  export type UserCreateWithoutCreatedProductTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedProductTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedProductTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedProductTranslationsInput, UserUncheckedCreateWithoutCreatedProductTranslationsInput>
  }

  export type UserCreateWithoutUpdatedProductTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedProductTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedProductTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedProductTranslationsInput, UserUncheckedCreateWithoutUpdatedProductTranslationsInput>
  }

  export type UserCreateWithoutDeletedProductTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedProductTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedProductTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedProductTranslationsInput, UserUncheckedCreateWithoutDeletedProductTranslationsInput>
  }

  export type ProductUpsertWithoutProductTranslationsInput = {
    update: XOR<ProductUpdateWithoutProductTranslationsInput, ProductUncheckedUpdateWithoutProductTranslationsInput>
    create: XOR<ProductCreateWithoutProductTranslationsInput, ProductUncheckedCreateWithoutProductTranslationsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductTranslationsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductTranslationsInput, ProductUncheckedUpdateWithoutProductTranslationsInput>
  }

  export type ProductUpdateWithoutProductTranslationsInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type LanguageUpsertWithoutProductTranslationsInput = {
    update: XOR<LanguageUpdateWithoutProductTranslationsInput, LanguageUncheckedUpdateWithoutProductTranslationsInput>
    create: XOR<LanguageCreateWithoutProductTranslationsInput, LanguageUncheckedCreateWithoutProductTranslationsInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutProductTranslationsInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutProductTranslationsInput, LanguageUncheckedUpdateWithoutProductTranslationsInput>
  }

  export type LanguageUpdateWithoutProductTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutProductTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type UserUpsertWithoutCreatedProductTranslationsInput = {
    update: XOR<UserUpdateWithoutCreatedProductTranslationsInput, UserUncheckedUpdateWithoutCreatedProductTranslationsInput>
    create: XOR<UserCreateWithoutCreatedProductTranslationsInput, UserUncheckedCreateWithoutCreatedProductTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedProductTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedProductTranslationsInput, UserUncheckedUpdateWithoutCreatedProductTranslationsInput>
  }

  export type UserUpdateWithoutCreatedProductTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedProductTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedProductTranslationsInput = {
    update: XOR<UserUpdateWithoutUpdatedProductTranslationsInput, UserUncheckedUpdateWithoutUpdatedProductTranslationsInput>
    create: XOR<UserCreateWithoutUpdatedProductTranslationsInput, UserUncheckedCreateWithoutUpdatedProductTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedProductTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedProductTranslationsInput, UserUncheckedUpdateWithoutUpdatedProductTranslationsInput>
  }

  export type UserUpdateWithoutUpdatedProductTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedProductTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedProductTranslationsInput = {
    update: XOR<UserUpdateWithoutDeletedProductTranslationsInput, UserUncheckedUpdateWithoutDeletedProductTranslationsInput>
    create: XOR<UserCreateWithoutDeletedProductTranslationsInput, UserUncheckedCreateWithoutDeletedProductTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedProductTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedProductTranslationsInput, UserUncheckedUpdateWithoutDeletedProductTranslationsInput>
  }

  export type UserUpdateWithoutDeletedProductTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedProductTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutCategoriesInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutCategoriesInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type CategoryCreateWithoutChildrenCategoriesInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutChildrenCategoriesInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutChildrenCategoriesInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutChildrenCategoriesInput, CategoryUncheckedCreateWithoutChildrenCategoriesInput>
  }

  export type CategoryCreateWithoutParentCategoryInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutParentCategoryInput = {
    id?: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput>
  }

  export type CategoryCreateManyParentCategoryInputEnvelope = {
    data: CategoryCreateManyParentCategoryInput | CategoryCreateManyParentCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryTranslationCreateWithoutCategoryInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    language: LanguageCreateNestedOneWithoutCategoryTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoryTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoryTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoryTranslationsInput
  }

  export type CategoryTranslationUncheckedCreateWithoutCategoryInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateOrConnectWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationCreateManyCategoryInputEnvelope = {
    data: CategoryTranslationCreateManyCategoryInput | CategoryTranslationCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedCategoriesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedCategoriesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
  }

  export type UserCreateWithoutUpdatedCategoriesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedCategoriesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
  }

  export type UserCreateWithoutDeletedCategoriesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedCategoriesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedCategoriesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedCategoriesInput, UserUncheckedCreateWithoutDeletedCategoriesInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoriesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type CategoryUpsertWithoutChildrenCategoriesInput = {
    update: XOR<CategoryUpdateWithoutChildrenCategoriesInput, CategoryUncheckedUpdateWithoutChildrenCategoriesInput>
    create: XOR<CategoryCreateWithoutChildrenCategoriesInput, CategoryUncheckedCreateWithoutChildrenCategoriesInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutChildrenCategoriesInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutChildrenCategoriesInput, CategoryUncheckedUpdateWithoutChildrenCategoriesInput>
  }

  export type CategoryUpdateWithoutChildrenCategoriesInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutChildrenCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUpsertWithWhereUniqueWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    update: XOR<CategoryUpdateWithoutParentCategoryInput, CategoryUncheckedUpdateWithoutParentCategoryInput>
    create: XOR<CategoryCreateWithoutParentCategoryInput, CategoryUncheckedCreateWithoutParentCategoryInput>
  }

  export type CategoryUpdateWithWhereUniqueWithoutParentCategoryInput = {
    where: CategoryWhereUniqueInput
    data: XOR<CategoryUpdateWithoutParentCategoryInput, CategoryUncheckedUpdateWithoutParentCategoryInput>
  }

  export type CategoryUpdateManyWithWhereWithoutParentCategoryInput = {
    where: CategoryScalarWhereInput
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyWithoutParentCategoryInput>
  }

  export type CategoryTranslationUpsertWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    update: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
    create: XOR<CategoryTranslationCreateWithoutCategoryInput, CategoryTranslationUncheckedCreateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateWithWhereUniqueWithoutCategoryInput = {
    where: CategoryTranslationWhereUniqueInput
    data: XOR<CategoryTranslationUpdateWithoutCategoryInput, CategoryTranslationUncheckedUpdateWithoutCategoryInput>
  }

  export type CategoryTranslationUpdateManyWithWhereWithoutCategoryInput = {
    where: CategoryTranslationScalarWhereInput
    data: XOR<CategoryTranslationUpdateManyMutationInput, CategoryTranslationUncheckedUpdateManyWithoutCategoryInput>
  }

  export type UserUpsertWithoutCreatedCategoriesInput = {
    update: XOR<UserUpdateWithoutCreatedCategoriesInput, UserUncheckedUpdateWithoutCreatedCategoriesInput>
    create: XOR<UserCreateWithoutCreatedCategoriesInput, UserUncheckedCreateWithoutCreatedCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedCategoriesInput, UserUncheckedUpdateWithoutCreatedCategoriesInput>
  }

  export type UserUpdateWithoutCreatedCategoriesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedCategoriesInput = {
    update: XOR<UserUpdateWithoutUpdatedCategoriesInput, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
    create: XOR<UserCreateWithoutUpdatedCategoriesInput, UserUncheckedCreateWithoutUpdatedCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedCategoriesInput, UserUncheckedUpdateWithoutUpdatedCategoriesInput>
  }

  export type UserUpdateWithoutUpdatedCategoriesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedCategoriesInput = {
    update: XOR<UserUpdateWithoutDeletedCategoriesInput, UserUncheckedUpdateWithoutDeletedCategoriesInput>
    create: XOR<UserCreateWithoutDeletedCategoriesInput, UserUncheckedCreateWithoutDeletedCategoriesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedCategoriesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedCategoriesInput, UserUncheckedUpdateWithoutDeletedCategoriesInput>
  }

  export type UserUpdateWithoutDeletedCategoriesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type CategoryCreateWithoutCategoryTranslationsInput = {
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutCategoriesInput
    parentCategory?: CategoryCreateNestedOneWithoutChildrenCategoriesInput
    childrenCategories?: CategoryCreateNestedManyWithoutParentCategoryInput
    createdBy?: UserCreateNestedOneWithoutCreatedCategoriesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedCategoriesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedCategoriesInput
  }

  export type CategoryUncheckedCreateWithoutCategoryTranslationsInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
    childrenCategories?: CategoryUncheckedCreateNestedManyWithoutParentCategoryInput
  }

  export type CategoryCreateOrConnectWithoutCategoryTranslationsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutCategoryTranslationsInput, CategoryUncheckedCreateWithoutCategoryTranslationsInput>
  }

  export type LanguageCreateWithoutCategoryTranslationsInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutCategoryTranslationsInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    brandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutCategoryTranslationsInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutCategoryTranslationsInput, LanguageUncheckedCreateWithoutCategoryTranslationsInput>
  }

  export type UserCreateWithoutCreatedCategoryTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedCategoryTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedCategoryTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedCategoryTranslationsInput, UserUncheckedCreateWithoutCreatedCategoryTranslationsInput>
  }

  export type UserCreateWithoutUpdatedCategoryTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedCategoryTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedCategoryTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedCategoryTranslationsInput, UserUncheckedCreateWithoutUpdatedCategoryTranslationsInput>
  }

  export type UserCreateWithoutDeletedCategoryTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedCategoryTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedCategoryTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedCategoryTranslationsInput, UserUncheckedCreateWithoutDeletedCategoryTranslationsInput>
  }

  export type CategoryUpsertWithoutCategoryTranslationsInput = {
    update: XOR<CategoryUpdateWithoutCategoryTranslationsInput, CategoryUncheckedUpdateWithoutCategoryTranslationsInput>
    create: XOR<CategoryCreateWithoutCategoryTranslationsInput, CategoryUncheckedCreateWithoutCategoryTranslationsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutCategoryTranslationsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutCategoryTranslationsInput, CategoryUncheckedUpdateWithoutCategoryTranslationsInput>
  }

  export type CategoryUpdateWithoutCategoryTranslationsInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCategoryTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
  }

  export type LanguageUpsertWithoutCategoryTranslationsInput = {
    update: XOR<LanguageUpdateWithoutCategoryTranslationsInput, LanguageUncheckedUpdateWithoutCategoryTranslationsInput>
    create: XOR<LanguageCreateWithoutCategoryTranslationsInput, LanguageUncheckedCreateWithoutCategoryTranslationsInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutCategoryTranslationsInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutCategoryTranslationsInput, LanguageUncheckedUpdateWithoutCategoryTranslationsInput>
  }

  export type LanguageUpdateWithoutCategoryTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutCategoryTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type UserUpsertWithoutCreatedCategoryTranslationsInput = {
    update: XOR<UserUpdateWithoutCreatedCategoryTranslationsInput, UserUncheckedUpdateWithoutCreatedCategoryTranslationsInput>
    create: XOR<UserCreateWithoutCreatedCategoryTranslationsInput, UserUncheckedCreateWithoutCreatedCategoryTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedCategoryTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedCategoryTranslationsInput, UserUncheckedUpdateWithoutCreatedCategoryTranslationsInput>
  }

  export type UserUpdateWithoutCreatedCategoryTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedCategoryTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedCategoryTranslationsInput = {
    update: XOR<UserUpdateWithoutUpdatedCategoryTranslationsInput, UserUncheckedUpdateWithoutUpdatedCategoryTranslationsInput>
    create: XOR<UserCreateWithoutUpdatedCategoryTranslationsInput, UserUncheckedCreateWithoutUpdatedCategoryTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedCategoryTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedCategoryTranslationsInput, UserUncheckedUpdateWithoutUpdatedCategoryTranslationsInput>
  }

  export type UserUpdateWithoutUpdatedCategoryTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedCategoryTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedCategoryTranslationsInput = {
    update: XOR<UserUpdateWithoutDeletedCategoryTranslationsInput, UserUncheckedUpdateWithoutDeletedCategoryTranslationsInput>
    create: XOR<UserCreateWithoutDeletedCategoryTranslationsInput, UserUncheckedCreateWithoutDeletedCategoryTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedCategoryTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedCategoryTranslationsInput, UserUncheckedUpdateWithoutDeletedCategoryTranslationsInput>
  }

  export type UserUpdateWithoutDeletedCategoryTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedCategoryTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutVariantsInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutVariantsInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutVariantsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
  }

  export type VariantOptionCreateWithoutVariantInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUCreateNestedManyWithoutVariantOptionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantOptionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantOptionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateWithoutVariantInput = {
    id?: number
    value: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    skus?: SKUUncheckedCreateNestedManyWithoutVariantOptionsInput
  }

  export type VariantOptionCreateOrConnectWithoutVariantInput = {
    where: VariantOptionWhereUniqueInput
    create: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput>
  }

  export type VariantOptionCreateManyVariantInputEnvelope = {
    data: VariantOptionCreateManyVariantInput | VariantOptionCreateManyVariantInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedVariantsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedVariantsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedVariantsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedVariantsInput, UserUncheckedCreateWithoutCreatedVariantsInput>
  }

  export type UserCreateWithoutUpdatedVariantsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedVariantsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedVariantsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedVariantsInput, UserUncheckedCreateWithoutUpdatedVariantsInput>
  }

  export type UserCreateWithoutDeletedVariantsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedVariantsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedVariantsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedVariantsInput, UserUncheckedCreateWithoutDeletedVariantsInput>
  }

  export type ProductUpsertWithoutVariantsInput = {
    update: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutVariantsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type ProductUpdateWithoutVariantsInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutVariantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type VariantOptionUpsertWithWhereUniqueWithoutVariantInput = {
    where: VariantOptionWhereUniqueInput
    update: XOR<VariantOptionUpdateWithoutVariantInput, VariantOptionUncheckedUpdateWithoutVariantInput>
    create: XOR<VariantOptionCreateWithoutVariantInput, VariantOptionUncheckedCreateWithoutVariantInput>
  }

  export type VariantOptionUpdateWithWhereUniqueWithoutVariantInput = {
    where: VariantOptionWhereUniqueInput
    data: XOR<VariantOptionUpdateWithoutVariantInput, VariantOptionUncheckedUpdateWithoutVariantInput>
  }

  export type VariantOptionUpdateManyWithWhereWithoutVariantInput = {
    where: VariantOptionScalarWhereInput
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyWithoutVariantInput>
  }

  export type UserUpsertWithoutCreatedVariantsInput = {
    update: XOR<UserUpdateWithoutCreatedVariantsInput, UserUncheckedUpdateWithoutCreatedVariantsInput>
    create: XOR<UserCreateWithoutCreatedVariantsInput, UserUncheckedCreateWithoutCreatedVariantsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedVariantsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedVariantsInput, UserUncheckedUpdateWithoutCreatedVariantsInput>
  }

  export type UserUpdateWithoutCreatedVariantsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedVariantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedVariantsInput = {
    update: XOR<UserUpdateWithoutUpdatedVariantsInput, UserUncheckedUpdateWithoutUpdatedVariantsInput>
    create: XOR<UserCreateWithoutUpdatedVariantsInput, UserUncheckedCreateWithoutUpdatedVariantsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedVariantsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedVariantsInput, UserUncheckedUpdateWithoutUpdatedVariantsInput>
  }

  export type UserUpdateWithoutUpdatedVariantsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedVariantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedVariantsInput = {
    update: XOR<UserUpdateWithoutDeletedVariantsInput, UserUncheckedUpdateWithoutDeletedVariantsInput>
    create: XOR<UserCreateWithoutDeletedVariantsInput, UserUncheckedCreateWithoutDeletedVariantsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedVariantsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedVariantsInput, UserUncheckedUpdateWithoutDeletedVariantsInput>
  }

  export type UserUpdateWithoutDeletedVariantsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedVariantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type VariantCreateWithoutVariantOptionsInput = {
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutVariantsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantsInput
  }

  export type VariantUncheckedCreateWithoutVariantOptionsInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantCreateOrConnectWithoutVariantOptionsInput = {
    where: VariantWhereUniqueInput
    create: XOR<VariantCreateWithoutVariantOptionsInput, VariantUncheckedCreateWithoutVariantOptionsInput>
  }

  export type SKUCreateWithoutVariantOptionsInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutVariantOptionsInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutVariantOptionsInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput>
  }

  export type UserCreateWithoutCreatedVariantOptionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedVariantOptionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedVariantOptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedVariantOptionsInput, UserUncheckedCreateWithoutCreatedVariantOptionsInput>
  }

  export type UserCreateWithoutUpdatedVariantOptionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedVariantOptionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedVariantOptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedVariantOptionsInput, UserUncheckedCreateWithoutUpdatedVariantOptionsInput>
  }

  export type UserCreateWithoutDeletedVariantOptionsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedVariantOptionsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedVariantOptionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedVariantOptionsInput, UserUncheckedCreateWithoutDeletedVariantOptionsInput>
  }

  export type VariantUpsertWithoutVariantOptionsInput = {
    update: XOR<VariantUpdateWithoutVariantOptionsInput, VariantUncheckedUpdateWithoutVariantOptionsInput>
    create: XOR<VariantCreateWithoutVariantOptionsInput, VariantUncheckedCreateWithoutVariantOptionsInput>
    where?: VariantWhereInput
  }

  export type VariantUpdateToOneWithWhereWithoutVariantOptionsInput = {
    where?: VariantWhereInput
    data: XOR<VariantUpdateWithoutVariantOptionsInput, VariantUncheckedUpdateWithoutVariantOptionsInput>
  }

  export type VariantUpdateWithoutVariantOptionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantsNestedInput
  }

  export type VariantUncheckedUpdateWithoutVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpsertWithWhereUniqueWithoutVariantOptionsInput = {
    where: SKUWhereUniqueInput
    update: XOR<SKUUpdateWithoutVariantOptionsInput, SKUUncheckedUpdateWithoutVariantOptionsInput>
    create: XOR<SKUCreateWithoutVariantOptionsInput, SKUUncheckedCreateWithoutVariantOptionsInput>
  }

  export type SKUUpdateWithWhereUniqueWithoutVariantOptionsInput = {
    where: SKUWhereUniqueInput
    data: XOR<SKUUpdateWithoutVariantOptionsInput, SKUUncheckedUpdateWithoutVariantOptionsInput>
  }

  export type SKUUpdateManyWithWhereWithoutVariantOptionsInput = {
    where: SKUScalarWhereInput
    data: XOR<SKUUpdateManyMutationInput, SKUUncheckedUpdateManyWithoutVariantOptionsInput>
  }

  export type UserUpsertWithoutCreatedVariantOptionsInput = {
    update: XOR<UserUpdateWithoutCreatedVariantOptionsInput, UserUncheckedUpdateWithoutCreatedVariantOptionsInput>
    create: XOR<UserCreateWithoutCreatedVariantOptionsInput, UserUncheckedCreateWithoutCreatedVariantOptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedVariantOptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedVariantOptionsInput, UserUncheckedUpdateWithoutCreatedVariantOptionsInput>
  }

  export type UserUpdateWithoutCreatedVariantOptionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedVariantOptionsInput = {
    update: XOR<UserUpdateWithoutUpdatedVariantOptionsInput, UserUncheckedUpdateWithoutUpdatedVariantOptionsInput>
    create: XOR<UserCreateWithoutUpdatedVariantOptionsInput, UserUncheckedCreateWithoutUpdatedVariantOptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedVariantOptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedVariantOptionsInput, UserUncheckedUpdateWithoutUpdatedVariantOptionsInput>
  }

  export type UserUpdateWithoutUpdatedVariantOptionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedVariantOptionsInput = {
    update: XOR<UserUpdateWithoutDeletedVariantOptionsInput, UserUncheckedUpdateWithoutDeletedVariantOptionsInput>
    create: XOR<UserCreateWithoutDeletedVariantOptionsInput, UserUncheckedCreateWithoutDeletedVariantOptionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedVariantOptionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedVariantOptionsInput, UserUncheckedUpdateWithoutDeletedVariantOptionsInput>
  }

  export type UserUpdateWithoutDeletedVariantOptionsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutSkusInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutSkusInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSkusInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSkusInput, ProductUncheckedCreateWithoutSkusInput>
  }

  export type VariantOptionCreateWithoutSkusInput = {
    value: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variant: VariantCreateNestedOneWithoutVariantOptionsInput
    createdBy?: UserCreateNestedOneWithoutCreatedVariantOptionsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedVariantOptionsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedVariantOptionsInput
  }

  export type VariantOptionUncheckedCreateWithoutSkusInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionCreateOrConnectWithoutSkusInput = {
    where: VariantOptionWhereUniqueInput
    create: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput>
  }

  export type CartItemCreateWithoutSkuInput = {
    quantity: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCartsInput
  }

  export type CartItemUncheckedCreateWithoutSkuInput = {
    id?: number
    quantity: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CartItemCreateOrConnectWithoutSkuInput = {
    where: CartItemWhereUniqueInput
    create: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput>
  }

  export type CartItemCreateManySkuInputEnvelope = {
    data: CartItemCreateManySkuInput | CartItemCreateManySkuInput[]
    skipDuplicates?: boolean
  }

  export type ProductSKUSnapshotCreateWithoutSkuInput = {
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    createdAt?: Date | string
    order?: OrderCreateNestedOneWithoutItemsInput
  }

  export type ProductSKUSnapshotUncheckedCreateWithoutSkuInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    orderId?: number | null
    createdAt?: Date | string
  }

  export type ProductSKUSnapshotCreateOrConnectWithoutSkuInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    create: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput>
  }

  export type ProductSKUSnapshotCreateManySkuInputEnvelope = {
    data: ProductSKUSnapshotCreateManySkuInput | ProductSKUSnapshotCreateManySkuInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedSKUSInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedSKUSInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedSKUSInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedSKUSInput, UserUncheckedCreateWithoutCreatedSKUSInput>
  }

  export type UserCreateWithoutUpdatedSKUSInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedSKUSInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedSKUSInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedSKUSInput, UserUncheckedCreateWithoutUpdatedSKUSInput>
  }

  export type UserCreateWithoutDeletedSKUSInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedSKUSInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedSKUSInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedSKUSInput, UserUncheckedCreateWithoutDeletedSKUSInput>
  }

  export type ProductUpsertWithoutSkusInput = {
    update: XOR<ProductUpdateWithoutSkusInput, ProductUncheckedUpdateWithoutSkusInput>
    create: XOR<ProductCreateWithoutSkusInput, ProductUncheckedCreateWithoutSkusInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutSkusInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutSkusInput, ProductUncheckedUpdateWithoutSkusInput>
  }

  export type ProductUpdateWithoutSkusInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutSkusInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type VariantOptionUpsertWithWhereUniqueWithoutSkusInput = {
    where: VariantOptionWhereUniqueInput
    update: XOR<VariantOptionUpdateWithoutSkusInput, VariantOptionUncheckedUpdateWithoutSkusInput>
    create: XOR<VariantOptionCreateWithoutSkusInput, VariantOptionUncheckedCreateWithoutSkusInput>
  }

  export type VariantOptionUpdateWithWhereUniqueWithoutSkusInput = {
    where: VariantOptionWhereUniqueInput
    data: XOR<VariantOptionUpdateWithoutSkusInput, VariantOptionUncheckedUpdateWithoutSkusInput>
  }

  export type VariantOptionUpdateManyWithWhereWithoutSkusInput = {
    where: VariantOptionScalarWhereInput
    data: XOR<VariantOptionUpdateManyMutationInput, VariantOptionUncheckedUpdateManyWithoutSkusInput>
  }

  export type CartItemUpsertWithWhereUniqueWithoutSkuInput = {
    where: CartItemWhereUniqueInput
    update: XOR<CartItemUpdateWithoutSkuInput, CartItemUncheckedUpdateWithoutSkuInput>
    create: XOR<CartItemCreateWithoutSkuInput, CartItemUncheckedCreateWithoutSkuInput>
  }

  export type CartItemUpdateWithWhereUniqueWithoutSkuInput = {
    where: CartItemWhereUniqueInput
    data: XOR<CartItemUpdateWithoutSkuInput, CartItemUncheckedUpdateWithoutSkuInput>
  }

  export type CartItemUpdateManyWithWhereWithoutSkuInput = {
    where: CartItemScalarWhereInput
    data: XOR<CartItemUpdateManyMutationInput, CartItemUncheckedUpdateManyWithoutSkuInput>
  }

  export type ProductSKUSnapshotUpsertWithWhereUniqueWithoutSkuInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    update: XOR<ProductSKUSnapshotUpdateWithoutSkuInput, ProductSKUSnapshotUncheckedUpdateWithoutSkuInput>
    create: XOR<ProductSKUSnapshotCreateWithoutSkuInput, ProductSKUSnapshotUncheckedCreateWithoutSkuInput>
  }

  export type ProductSKUSnapshotUpdateWithWhereUniqueWithoutSkuInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    data: XOR<ProductSKUSnapshotUpdateWithoutSkuInput, ProductSKUSnapshotUncheckedUpdateWithoutSkuInput>
  }

  export type ProductSKUSnapshotUpdateManyWithWhereWithoutSkuInput = {
    where: ProductSKUSnapshotScalarWhereInput
    data: XOR<ProductSKUSnapshotUpdateManyMutationInput, ProductSKUSnapshotUncheckedUpdateManyWithoutSkuInput>
  }

  export type ProductSKUSnapshotScalarWhereInput = {
    AND?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
    OR?: ProductSKUSnapshotScalarWhereInput[]
    NOT?: ProductSKUSnapshotScalarWhereInput | ProductSKUSnapshotScalarWhereInput[]
    id?: IntFilter<"ProductSKUSnapshot"> | number
    productName?: StringFilter<"ProductSKUSnapshot"> | string
    price?: FloatFilter<"ProductSKUSnapshot"> | number
    images?: StringNullableListFilter<"ProductSKUSnapshot">
    skuValue?: StringFilter<"ProductSKUSnapshot"> | string
    skuId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    orderId?: IntNullableFilter<"ProductSKUSnapshot"> | number | null
    createdAt?: DateTimeFilter<"ProductSKUSnapshot"> | Date | string
  }

  export type UserUpsertWithoutCreatedSKUSInput = {
    update: XOR<UserUpdateWithoutCreatedSKUSInput, UserUncheckedUpdateWithoutCreatedSKUSInput>
    create: XOR<UserCreateWithoutCreatedSKUSInput, UserUncheckedCreateWithoutCreatedSKUSInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedSKUSInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedSKUSInput, UserUncheckedUpdateWithoutCreatedSKUSInput>
  }

  export type UserUpdateWithoutCreatedSKUSInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedSKUSInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedSKUSInput = {
    update: XOR<UserUpdateWithoutUpdatedSKUSInput, UserUncheckedUpdateWithoutUpdatedSKUSInput>
    create: XOR<UserCreateWithoutUpdatedSKUSInput, UserUncheckedCreateWithoutUpdatedSKUSInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedSKUSInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedSKUSInput, UserUncheckedUpdateWithoutUpdatedSKUSInput>
  }

  export type UserUpdateWithoutUpdatedSKUSInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedSKUSInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedSKUSInput = {
    update: XOR<UserUpdateWithoutDeletedSKUSInput, UserUncheckedUpdateWithoutDeletedSKUSInput>
    create: XOR<UserCreateWithoutDeletedSKUSInput, UserUncheckedCreateWithoutDeletedSKUSInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedSKUSInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedSKUSInput, UserUncheckedUpdateWithoutDeletedSKUSInput>
  }

  export type UserUpdateWithoutDeletedSKUSInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedSKUSInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutBrandInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutBrandInput = {
    id?: number
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBrandInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductCreateManyBrandInputEnvelope = {
    data: ProductCreateManyBrandInput | ProductCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type BrandTranslationCreateWithoutBrandInput = {
    name: string
    description: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    language: LanguageCreateNestedOneWithoutBrandTranslationsInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandTranslationsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandTranslationsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandTranslationsInput
  }

  export type BrandTranslationUncheckedCreateWithoutBrandInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateOrConnectWithoutBrandInput = {
    where: BrandTranslationWhereUniqueInput
    create: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput>
  }

  export type BrandTranslationCreateManyBrandInputEnvelope = {
    data: BrandTranslationCreateManyBrandInput | BrandTranslationCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedBrandsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedBrandsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedBrandsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedBrandsInput, UserUncheckedCreateWithoutCreatedBrandsInput>
  }

  export type UserCreateWithoutUpdatedBrandsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedBrandsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedBrandsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedBrandsInput, UserUncheckedCreateWithoutUpdatedBrandsInput>
  }

  export type UserCreateWithoutDeletedBrandsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedBrandsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedBrandsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedBrandsInput, UserUncheckedCreateWithoutDeletedBrandsInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
  }

  export type ProductUpdateManyWithWhereWithoutBrandInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBrandInput>
  }

  export type BrandTranslationUpsertWithWhereUniqueWithoutBrandInput = {
    where: BrandTranslationWhereUniqueInput
    update: XOR<BrandTranslationUpdateWithoutBrandInput, BrandTranslationUncheckedUpdateWithoutBrandInput>
    create: XOR<BrandTranslationCreateWithoutBrandInput, BrandTranslationUncheckedCreateWithoutBrandInput>
  }

  export type BrandTranslationUpdateWithWhereUniqueWithoutBrandInput = {
    where: BrandTranslationWhereUniqueInput
    data: XOR<BrandTranslationUpdateWithoutBrandInput, BrandTranslationUncheckedUpdateWithoutBrandInput>
  }

  export type BrandTranslationUpdateManyWithWhereWithoutBrandInput = {
    where: BrandTranslationScalarWhereInput
    data: XOR<BrandTranslationUpdateManyMutationInput, BrandTranslationUncheckedUpdateManyWithoutBrandInput>
  }

  export type UserUpsertWithoutCreatedBrandsInput = {
    update: XOR<UserUpdateWithoutCreatedBrandsInput, UserUncheckedUpdateWithoutCreatedBrandsInput>
    create: XOR<UserCreateWithoutCreatedBrandsInput, UserUncheckedCreateWithoutCreatedBrandsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedBrandsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedBrandsInput, UserUncheckedUpdateWithoutCreatedBrandsInput>
  }

  export type UserUpdateWithoutCreatedBrandsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedBrandsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedBrandsInput = {
    update: XOR<UserUpdateWithoutUpdatedBrandsInput, UserUncheckedUpdateWithoutUpdatedBrandsInput>
    create: XOR<UserCreateWithoutUpdatedBrandsInput, UserUncheckedCreateWithoutUpdatedBrandsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedBrandsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedBrandsInput, UserUncheckedUpdateWithoutUpdatedBrandsInput>
  }

  export type UserUpdateWithoutUpdatedBrandsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedBrandsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedBrandsInput = {
    update: XOR<UserUpdateWithoutDeletedBrandsInput, UserUncheckedUpdateWithoutDeletedBrandsInput>
    create: XOR<UserCreateWithoutDeletedBrandsInput, UserUncheckedCreateWithoutDeletedBrandsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedBrandsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedBrandsInput, UserUncheckedUpdateWithoutDeletedBrandsInput>
  }

  export type UserUpdateWithoutDeletedBrandsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedBrandsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type BrandCreateWithoutBrandTranslationsInput = {
    logo: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutBrandInput
    createdBy?: UserCreateNestedOneWithoutCreatedBrandsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedBrandsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedBrandsInput
  }

  export type BrandUncheckedCreateWithoutBrandTranslationsInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandCreateOrConnectWithoutBrandTranslationsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutBrandTranslationsInput, BrandUncheckedCreateWithoutBrandTranslationsInput>
  }

  export type LanguageCreateWithoutBrandTranslationsInput = {
    id: string
    name: string
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationCreateNestedManyWithoutLanguageInput
    createdBy?: UserCreateNestedOneWithoutCreatedLanguagesInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedLanguagesInput
    deletedBy?: UserCreateNestedOneWithoutDeletedLanguagesInput
  }

  export type LanguageUncheckedCreateWithoutBrandTranslationsInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutLanguageInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutLanguageInput
    categoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutLanguageInput
  }

  export type LanguageCreateOrConnectWithoutBrandTranslationsInput = {
    where: LanguageWhereUniqueInput
    create: XOR<LanguageCreateWithoutBrandTranslationsInput, LanguageUncheckedCreateWithoutBrandTranslationsInput>
  }

  export type UserCreateWithoutCreatedBrandTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedBrandTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedBrandTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedBrandTranslationsInput, UserUncheckedCreateWithoutCreatedBrandTranslationsInput>
  }

  export type UserCreateWithoutUpdatedBrandTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedBrandTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedBrandTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedBrandTranslationsInput, UserUncheckedCreateWithoutUpdatedBrandTranslationsInput>
  }

  export type UserCreateWithoutDeletedBrandTranslationsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedBrandTranslationsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedBrandTranslationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedBrandTranslationsInput, UserUncheckedCreateWithoutDeletedBrandTranslationsInput>
  }

  export type BrandUpsertWithoutBrandTranslationsInput = {
    update: XOR<BrandUpdateWithoutBrandTranslationsInput, BrandUncheckedUpdateWithoutBrandTranslationsInput>
    create: XOR<BrandCreateWithoutBrandTranslationsInput, BrandUncheckedCreateWithoutBrandTranslationsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutBrandTranslationsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutBrandTranslationsInput, BrandUncheckedUpdateWithoutBrandTranslationsInput>
  }

  export type BrandUpdateWithoutBrandTranslationsInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutBrandTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type LanguageUpsertWithoutBrandTranslationsInput = {
    update: XOR<LanguageUpdateWithoutBrandTranslationsInput, LanguageUncheckedUpdateWithoutBrandTranslationsInput>
    create: XOR<LanguageCreateWithoutBrandTranslationsInput, LanguageUncheckedCreateWithoutBrandTranslationsInput>
    where?: LanguageWhereInput
  }

  export type LanguageUpdateToOneWithWhereWithoutBrandTranslationsInput = {
    where?: LanguageWhereInput
    data: XOR<LanguageUpdateWithoutBrandTranslationsInput, LanguageUncheckedUpdateWithoutBrandTranslationsInput>
  }

  export type LanguageUpdateWithoutBrandTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutBrandTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type UserUpsertWithoutCreatedBrandTranslationsInput = {
    update: XOR<UserUpdateWithoutCreatedBrandTranslationsInput, UserUncheckedUpdateWithoutCreatedBrandTranslationsInput>
    create: XOR<UserCreateWithoutCreatedBrandTranslationsInput, UserUncheckedCreateWithoutCreatedBrandTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedBrandTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedBrandTranslationsInput, UserUncheckedUpdateWithoutCreatedBrandTranslationsInput>
  }

  export type UserUpdateWithoutCreatedBrandTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedBrandTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedBrandTranslationsInput = {
    update: XOR<UserUpdateWithoutUpdatedBrandTranslationsInput, UserUncheckedUpdateWithoutUpdatedBrandTranslationsInput>
    create: XOR<UserCreateWithoutUpdatedBrandTranslationsInput, UserUncheckedCreateWithoutUpdatedBrandTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedBrandTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedBrandTranslationsInput, UserUncheckedUpdateWithoutUpdatedBrandTranslationsInput>
  }

  export type UserUpdateWithoutUpdatedBrandTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedBrandTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedBrandTranslationsInput = {
    update: XOR<UserUpdateWithoutDeletedBrandTranslationsInput, UserUncheckedUpdateWithoutDeletedBrandTranslationsInput>
    create: XOR<UserCreateWithoutDeletedBrandTranslationsInput, UserUncheckedCreateWithoutDeletedBrandTranslationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedBrandTranslationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedBrandTranslationsInput, UserUncheckedUpdateWithoutDeletedBrandTranslationsInput>
  }

  export type UserUpdateWithoutDeletedBrandTranslationsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedBrandTranslationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type SKUCreateWithoutCartItemsInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    productSKUSnapshots?: ProductSKUSnapshotCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutCartItemsInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutCartItemsInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutCartItemsInput, SKUUncheckedCreateWithoutCartItemsInput>
  }

  export type UserCreateWithoutCartsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCartsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCartsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCartsInput, UserUncheckedCreateWithoutCartsInput>
  }

  export type SKUUpsertWithoutCartItemsInput = {
    update: XOR<SKUUpdateWithoutCartItemsInput, SKUUncheckedUpdateWithoutCartItemsInput>
    create: XOR<SKUCreateWithoutCartItemsInput, SKUUncheckedCreateWithoutCartItemsInput>
    where?: SKUWhereInput
  }

  export type SKUUpdateToOneWithWhereWithoutCartItemsInput = {
    where?: SKUWhereInput
    data: XOR<SKUUpdateWithoutCartItemsInput, SKUUncheckedUpdateWithoutCartItemsInput>
  }

  export type SKUUpdateWithoutCartItemsInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutCartItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type UserUpsertWithoutCartsInput = {
    update: XOR<UserUpdateWithoutCartsInput, UserUncheckedUpdateWithoutCartsInput>
    create: XOR<UserCreateWithoutCartsInput, UserUncheckedCreateWithoutCartsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCartsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCartsInput, UserUncheckedUpdateWithoutCartsInput>
  }

  export type UserUpdateWithoutCartsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCartsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type SKUCreateWithoutProductSKUSnapshotsInput = {
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    product: ProductCreateNestedOneWithoutSkusInput
    variantOptions?: VariantOptionCreateNestedManyWithoutSkusInput
    cartItems?: CartItemCreateNestedManyWithoutSkuInput
    createdBy?: UserCreateNestedOneWithoutCreatedSKUSInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedSKUSInput
    deletedBy?: UserCreateNestedOneWithoutDeletedSKUSInput
  }

  export type SKUUncheckedCreateWithoutProductSKUSnapshotsInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    variantOptions?: VariantOptionUncheckedCreateNestedManyWithoutSkusInput
    cartItems?: CartItemUncheckedCreateNestedManyWithoutSkuInput
  }

  export type SKUCreateOrConnectWithoutProductSKUSnapshotsInput = {
    where: SKUWhereUniqueInput
    create: XOR<SKUCreateWithoutProductSKUSnapshotsInput, SKUUncheckedCreateWithoutProductSKUSnapshotsInput>
  }

  export type OrderCreateWithoutItemsInput = {
    status: $Enums.OrderStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    createdBy?: UserCreateNestedOneWithoutCreatedOrdersInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedOrdersInput
    deletedBy?: UserCreateNestedOneWithoutDeletedOrdersInput
  }

  export type OrderUncheckedCreateWithoutItemsInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateOrConnectWithoutItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
  }

  export type SKUUpsertWithoutProductSKUSnapshotsInput = {
    update: XOR<SKUUpdateWithoutProductSKUSnapshotsInput, SKUUncheckedUpdateWithoutProductSKUSnapshotsInput>
    create: XOR<SKUCreateWithoutProductSKUSnapshotsInput, SKUUncheckedCreateWithoutProductSKUSnapshotsInput>
    where?: SKUWhereInput
  }

  export type SKUUpdateToOneWithWhereWithoutProductSKUSnapshotsInput = {
    where?: SKUWhereInput
    data: XOR<SKUUpdateWithoutProductSKUSnapshotsInput, SKUUncheckedUpdateWithoutProductSKUSnapshotsInput>
  }

  export type SKUUpdateWithoutProductSKUSnapshotsInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutProductSKUSnapshotsInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type OrderUpsertWithoutItemsInput = {
    update: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type OrderUpdateWithoutItemsInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    createdBy?: UserUpdateOneWithoutCreatedOrdersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedOrdersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutOrdersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutOrdersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
  }

  export type ProductSKUSnapshotCreateWithoutOrderInput = {
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    createdAt?: Date | string
    sku?: SKUCreateNestedOneWithoutProductSKUSnapshotsInput
  }

  export type ProductSKUSnapshotUncheckedCreateWithoutOrderInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    skuId?: number | null
    createdAt?: Date | string
  }

  export type ProductSKUSnapshotCreateOrConnectWithoutOrderInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    create: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput>
  }

  export type ProductSKUSnapshotCreateManyOrderInputEnvelope = {
    data: ProductSKUSnapshotCreateManyOrderInput | ProductSKUSnapshotCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCreatedOrdersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutCreatedOrdersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutCreatedOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCreatedOrdersInput, UserUncheckedCreateWithoutCreatedOrdersInput>
  }

  export type UserCreateWithoutUpdatedOrdersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutUpdatedOrdersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutUpdatedOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUpdatedOrdersInput, UserUncheckedCreateWithoutUpdatedOrdersInput>
  }

  export type UserCreateWithoutDeletedOrdersInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutDeletedOrdersInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutDeletedOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDeletedOrdersInput, UserUncheckedCreateWithoutDeletedOrdersInput>
  }

  export type UserUpsertWithoutOrdersInput = {
    update: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateWithoutOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductSKUSnapshotUpsertWithWhereUniqueWithoutOrderInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    update: XOR<ProductSKUSnapshotUpdateWithoutOrderInput, ProductSKUSnapshotUncheckedUpdateWithoutOrderInput>
    create: XOR<ProductSKUSnapshotCreateWithoutOrderInput, ProductSKUSnapshotUncheckedCreateWithoutOrderInput>
  }

  export type ProductSKUSnapshotUpdateWithWhereUniqueWithoutOrderInput = {
    where: ProductSKUSnapshotWhereUniqueInput
    data: XOR<ProductSKUSnapshotUpdateWithoutOrderInput, ProductSKUSnapshotUncheckedUpdateWithoutOrderInput>
  }

  export type ProductSKUSnapshotUpdateManyWithWhereWithoutOrderInput = {
    where: ProductSKUSnapshotScalarWhereInput
    data: XOR<ProductSKUSnapshotUpdateManyMutationInput, ProductSKUSnapshotUncheckedUpdateManyWithoutOrderInput>
  }

  export type UserUpsertWithoutCreatedOrdersInput = {
    update: XOR<UserUpdateWithoutCreatedOrdersInput, UserUncheckedUpdateWithoutCreatedOrdersInput>
    create: XOR<UserCreateWithoutCreatedOrdersInput, UserUncheckedCreateWithoutCreatedOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCreatedOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCreatedOrdersInput, UserUncheckedUpdateWithoutCreatedOrdersInput>
  }

  export type UserUpdateWithoutCreatedOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutUpdatedOrdersInput = {
    update: XOR<UserUpdateWithoutUpdatedOrdersInput, UserUncheckedUpdateWithoutUpdatedOrdersInput>
    create: XOR<UserCreateWithoutUpdatedOrdersInput, UserUncheckedCreateWithoutUpdatedOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUpdatedOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUpdatedOrdersInput, UserUncheckedUpdateWithoutUpdatedOrdersInput>
  }

  export type UserUpdateWithoutUpdatedOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutDeletedOrdersInput = {
    update: XOR<UserUpdateWithoutDeletedOrdersInput, UserUncheckedUpdateWithoutDeletedOrdersInput>
    create: XOR<UserCreateWithoutDeletedOrdersInput, UserUncheckedCreateWithoutDeletedOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutDeletedOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutDeletedOrdersInput, UserUncheckedUpdateWithoutDeletedOrdersInput>
  }

  export type UserUpdateWithoutDeletedOrdersInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedOrdersInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type ProductCreateWithoutReviewsInput = {
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    brand: BrandCreateNestedOneWithoutProductsInput
    categories?: CategoryCreateNestedManyWithoutProductsInput
    variants?: VariantCreateNestedManyWithoutProductInput
    skus?: SKUCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationCreateNestedManyWithoutProductInput
    createdBy?: UserCreateNestedOneWithoutCreatedProductsInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedProductsInput
    deletedBy?: UserCreateNestedOneWithoutDeletedProductsInput
  }

  export type ProductUncheckedCreateWithoutReviewsInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    categories?: CategoryUncheckedCreateNestedManyWithoutProductsInput
    variants?: VariantUncheckedCreateNestedManyWithoutProductInput
    skus?: SKUUncheckedCreateNestedManyWithoutProductInput
    productTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutReviewsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
  }

  export type UserCreateWithoutReviewsInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutReviewsInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
  }

  export type ProductUpsertWithoutReviewsInput = {
    update: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutReviewsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type ProductUpdateWithoutReviewsInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserUpsertWithoutReviewsInput = {
    update: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateWithoutReviewsInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewsInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserCreateWithoutSentMessagesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    receivedMessages?: MessageCreateNestedManyWithoutToUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutSentMessagesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    receivedMessages?: MessageUncheckedCreateNestedManyWithoutToUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutSentMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
  }

  export type UserCreateWithoutReceivedMessagesInput = {
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutUsersInput
    devices?: DeviceCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenCreateNestedManyWithoutUserInput
    carts?: CartItemCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationCreateNestedManyWithoutUserInput
    sentMessages?: MessageCreateNestedManyWithoutFromUserInput
    createdBy?: UserCreateNestedOneWithoutCreatedUsersInput
    createdUsers?: UserCreateNestedManyWithoutCreatedByInput
    updatedBy?: UserCreateNestedOneWithoutUpdatedUsersInput
    updatedUsers?: UserCreateNestedManyWithoutUpdatedByInput
    deletedBy?: UserCreateNestedOneWithoutDeletedUsersInput
    deletedUsers?: UserCreateNestedManyWithoutDeletedByInput
  }

  export type UserUncheckedCreateWithoutReceivedMessagesInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    devices?: DeviceUncheckedCreateNestedManyWithoutUserInput
    refreshTokens?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
    carts?: CartItemUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    createdPermissions?: PermissionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedPermissions?: PermissionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedPermissions?: PermissionUncheckedCreateNestedManyWithoutDeletedByInput
    createdRoles?: RoleUncheckedCreateNestedManyWithoutCreatedByInput
    updatedRoles?: RoleUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedRoles?: RoleUncheckedCreateNestedManyWithoutDeletedByInput
    createdProducts?: ProductUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProducts?: ProductUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProducts?: ProductUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategories?: CategoryUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategories?: CategoryUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategories?: CategoryUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariants?: VariantUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariants?: VariantUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariants?: VariantUncheckedCreateNestedManyWithoutDeletedByInput
    createdVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutCreatedByInput
    updatedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedVariantOptions?: VariantOptionUncheckedCreateNestedManyWithoutDeletedByInput
    createdSKUS?: SKUUncheckedCreateNestedManyWithoutCreatedByInput
    updatedSKUS?: SKUUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedSKUS?: SKUUncheckedCreateNestedManyWithoutDeletedByInput
    createdLanguages?: LanguageUncheckedCreateNestedManyWithoutCreatedByInput
    updatedLanguages?: LanguageUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedLanguages?: LanguageUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrands?: BrandUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrands?: BrandUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrands?: BrandUncheckedCreateNestedManyWithoutDeletedByInput
    createdProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedProductTranslations?: ProductTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedBrandTranslations?: BrandTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    createdOrders?: OrderUncheckedCreateNestedManyWithoutCreatedByInput
    updatedOrders?: OrderUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedOrders?: OrderUncheckedCreateNestedManyWithoutDeletedByInput
    createdUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUserTranslations?: UserTranslationUncheckedCreateNestedManyWithoutDeletedByInput
    userTranslations?: UserTranslationUncheckedCreateNestedManyWithoutUserInput
    sentMessages?: MessageUncheckedCreateNestedManyWithoutFromUserInput
    createdUsers?: UserUncheckedCreateNestedManyWithoutCreatedByInput
    updatedUsers?: UserUncheckedCreateNestedManyWithoutUpdatedByInput
    deletedUsers?: UserUncheckedCreateNestedManyWithoutDeletedByInput
  }

  export type UserCreateOrConnectWithoutReceivedMessagesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
  }

  export type UserUpsertWithoutSentMessagesInput = {
    update: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
    create: XOR<UserCreateWithoutSentMessagesInput, UserUncheckedCreateWithoutSentMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSentMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSentMessagesInput, UserUncheckedUpdateWithoutSentMessagesInput>
  }

  export type UserUpdateWithoutSentMessagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutSentMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUpsertWithoutReceivedMessagesInput = {
    update: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
    create: XOR<UserCreateWithoutReceivedMessagesInput, UserUncheckedCreateWithoutReceivedMessagesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReceivedMessagesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReceivedMessagesInput, UserUncheckedUpdateWithoutReceivedMessagesInput>
  }

  export type UserUpdateWithoutReceivedMessagesInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutReceivedMessagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserTranslationCreateManyLanguageInput = {
    id?: number
    userId: number
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateManyLanguageInput = {
    id?: number
    productId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateManyLanguageInput = {
    id?: number
    categoryId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateManyLanguageInput = {
    id?: number
    brandId: number
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationUpdateWithoutLanguageInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUserTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUserTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUpdateWithoutLanguageInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyWithoutLanguageInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DeviceCreateManyUserInput = {
    id?: number
    userAgent: string
    ip: string
    lastActive?: Date | string
    createdAt?: Date | string
    isActive?: boolean
  }

  export type RefreshTokenCreateManyUserInput = {
    token: string
    deviceId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type CartItemCreateManyUserInput = {
    id?: number
    quantity: number
    skuId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyUserInput = {
    id?: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyUserInput = {
    id?: number
    content: string
    rating: number
    productId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionCreateManyCreatedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionCreateManyUpdatedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionCreateManyDeletedByInput = {
    id?: number
    name: string
    description?: string
    path: string
    method: $Enums.HTTPMethod
    module?: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleCreateManyCreatedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleCreateManyUpdatedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type RoleCreateManyDeletedByInput = {
    id?: number
    name: string
    description?: string
    isActive?: boolean
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyCreatedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyUpdatedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyDeletedByInput = {
    id?: number
    base_price: number
    virtual_price: number
    brandId: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryCreateManyCreatedByInput = {
    id?: number
    parentCategoryId?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryCreateManyUpdatedByInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryCreateManyDeletedByInput = {
    id?: number
    parentCategoryId?: number | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantCreateManyCreatedByInput = {
    id?: number
    name: string
    productId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantCreateManyUpdatedByInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantCreateManyDeletedByInput = {
    id?: number
    name: string
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionCreateManyCreatedByInput = {
    id?: number
    value: string
    variantId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionCreateManyUpdatedByInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionCreateManyDeletedByInput = {
    id?: number
    value: string
    variantId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SKUCreateManyCreatedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SKUCreateManyUpdatedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SKUCreateManyDeletedByInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    productId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LanguageCreateManyCreatedByInput = {
    id: string
    name: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LanguageCreateManyUpdatedByInput = {
    id: string
    name: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LanguageCreateManyDeletedByInput = {
    id: string
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandCreateManyCreatedByInput = {
    id?: number
    logo: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandCreateManyUpdatedByInput = {
    id?: number
    logo: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandCreateManyDeletedByInput = {
    id?: number
    logo: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateManyCreatedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateManyUpdatedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateManyDeletedByInput = {
    id?: number
    productId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateManyCreatedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateManyUpdatedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateManyDeletedByInput = {
    id?: number
    categoryId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateManyCreatedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateManyUpdatedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateManyDeletedByInput = {
    id?: number
    brandId: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyCreatedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyUpdatedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyDeletedByInput = {
    id?: number
    userId: number
    status: $Enums.OrderStatus
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateManyCreatedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateManyUpdatedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateManyDeletedByInput = {
    id?: number
    userId: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserTranslationCreateManyUserInput = {
    id?: number
    languageId: string
    address?: string | null
    description?: string | null
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MessageCreateManyFromUserInput = {
    id?: number
    toUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type MessageCreateManyToUserInput = {
    id?: number
    fromUserId: number
    content: string
    readAt?: Date | string | null
    createdAt?: Date | string
  }

  export type UserCreateManyCreatedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateManyUpdatedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateManyDeletedByInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    roleId: number
    createdById?: number | null
    updatedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type DeviceUpdateWithoutUserInput = {
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutDeviceNestedInput
  }

  export type DeviceUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    userAgent?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    lastActive?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    device?: DeviceUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    token?: StringFieldUpdateOperationsInput | string
    deviceId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemUpdateWithoutUserInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sku?: SKUUpdateOneRequiredWithoutCartItemsNestedInput
  }

  export type CartItemUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    skuId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    skuId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutUserInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUpdateManyWithoutOrderNestedInput
    createdBy?: UserUpdateOneWithoutCreatedOrdersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedOrdersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUpdateManyWithoutPermissionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedPermissionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUpdateManyWithoutPermissionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedPermissionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUpdateManyWithoutPermissionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedPermissionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roles?: RoleUncheckedUpdateManyWithoutPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUpdateManyWithoutRolesNestedInput
    users?: UserUpdateManyWithoutRoleNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedRolesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUpdateManyWithoutRolesNestedInput
    users?: UserUpdateManyWithoutRoleNestedInput
    createdBy?: UserUpdateOneWithoutCreatedRolesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUpdateManyWithoutRolesNestedInput
    users?: UserUpdateManyWithoutRoleNestedInput
    createdBy?: UserUpdateOneWithoutCreatedRolesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    permissions?: PermissionUncheckedUpdateManyWithoutRolesNestedInput
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutCreatedByInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutUpdatedByInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutDeletedByInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutCreatedByInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutUpdatedByInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutDeletedByInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutVariantNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantsNestedInput
  }

  export type VariantUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type VariantUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutVariantNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantsNestedInput
  }

  export type VariantUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type VariantUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutVariantNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantsNestedInput
  }

  export type VariantUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type VariantUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionUpdateWithoutCreatedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: VariantUpdateOneRequiredWithoutVariantOptionsNestedInput
    skus?: SKUUpdateManyWithoutVariantOptionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantOptionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionUpdateWithoutUpdatedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: VariantUpdateOneRequiredWithoutVariantOptionsNestedInput
    skus?: SKUUpdateManyWithoutVariantOptionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantOptionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionUpdateWithoutDeletedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: VariantUpdateOneRequiredWithoutVariantOptionsNestedInput
    skus?: SKUUpdateManyWithoutVariantOptionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantOptionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpdateWithoutCreatedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpdateWithoutUpdatedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpdateWithoutDeletedByInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutCreatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LanguageUpdateWithoutDeletedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutLanguageNestedInput
    createdBy?: UserUpdateOneWithoutCreatedLanguagesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedLanguagesNestedInput
  }

  export type LanguageUncheckedUpdateWithoutDeletedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutLanguageNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutLanguageNestedInput
  }

  export type LanguageUncheckedUpdateManyWithoutDeletedByInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUpdateWithoutCreatedByInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutBrandNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUpdateWithoutUpdatedByInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutBrandNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandUpdateWithoutDeletedByInput = {
    logo?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUpdateManyWithoutBrandNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandsNestedInput
  }

  export type BrandUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
    brandTranslations?: BrandTranslationUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    logo?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutProductTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: CategoryUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    categoryId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUpdateWithoutCreatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUpdateWithoutUpdatedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUpdateWithoutDeletedByInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutBrandTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutCreatedByInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    items?: ProductSKUSnapshotUpdateManyWithoutOrderNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedOrdersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutUpdatedByInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    items?: ProductSKUSnapshotUpdateManyWithoutOrderNestedInput
    createdBy?: UserUpdateOneWithoutCreatedOrdersNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutDeletedByInput = {
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    items?: ProductSKUSnapshotUpdateManyWithoutOrderNestedInput
    createdBy?: UserUpdateOneWithoutCreatedOrdersNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: ProductSKUSnapshotUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUpdateWithoutCreatedByInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUserTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUpdateWithoutUpdatedByInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUserTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUpdateWithoutDeletedByInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutUserTranslationsNestedInput
    language?: LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUserTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUpdateWithoutUserInput = {
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    language?: LanguageUpdateOneRequiredWithoutUserTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUserTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUserTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUserTranslationsNestedInput
  }

  export type UserTranslationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserTranslationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutFromUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    toUser?: UserUpdateOneRequiredWithoutReceivedMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutFromUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    toUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutFromUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    toUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUpdateWithoutToUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    fromUser?: UserUpdateOneRequiredWithoutSentMessagesNestedInput
  }

  export type MessageUncheckedUpdateWithoutToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    fromUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MessageUncheckedUpdateManyWithoutToUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    fromUserId?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    readAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutCreatedByInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCreatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutUpdatedByInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUpdatedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutDeletedByInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutUsersNestedInput
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutDeletedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    roleId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenCreateManyDeviceInput = {
    token: string
    userId: number
    expiresAt: Date | string
    createdAt?: Date | string
  }

  export type RefreshTokenUpdateWithoutDeviceInput = {
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutRefreshTokensNestedInput
  }

  export type RefreshTokenUncheckedUpdateWithoutDeviceInput = {
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RefreshTokenUncheckedUpdateManyWithoutDeviceInput = {
    token?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type RoleUpdateWithoutPermissionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutRoleNestedInput
    createdBy?: UserUpdateOneWithoutCreatedRolesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedRolesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedRolesNestedInput
  }

  export type RoleUncheckedUpdateWithoutPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateManyWithoutPermissionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyRoleInput = {
    id?: number
    email: string
    name: string
    password: string
    phoneNumber: string
    avatar?: string | null
    totpSecret?: string | null
    status?: $Enums.UserStatus
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PermissionUpdateWithoutRolesInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: UserUpdateOneWithoutCreatedPermissionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedPermissionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedPermissionsNestedInput
  }

  export type PermissionUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PermissionUncheckedUpdateManyWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    path?: StringFieldUpdateOperationsInput | string
    method?: EnumHTTPMethodFieldUpdateOperationsInput | $Enums.HTTPMethod
    module?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutRoleInput = {
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUpdateManyWithoutUserNestedInput
    carts?: CartItemUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUpdateManyWithoutToUserNestedInput
    createdBy?: UserUpdateOneWithoutCreatedUsersNestedInput
    createdUsers?: UserUpdateManyWithoutCreatedByNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedUsersNestedInput
    updatedUsers?: UserUpdateManyWithoutUpdatedByNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedUsersNestedInput
    deletedUsers?: UserUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    devices?: DeviceUncheckedUpdateManyWithoutUserNestedInput
    refreshTokens?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
    carts?: CartItemUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    createdPermissions?: PermissionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedPermissions?: PermissionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedPermissions?: PermissionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdRoles?: RoleUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedRoles?: RoleUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedRoles?: RoleUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProducts?: ProductUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProducts?: ProductUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProducts?: ProductUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategories?: CategoryUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategories?: CategoryUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategories?: CategoryUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariants?: VariantUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariants?: VariantUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariants?: VariantUncheckedUpdateManyWithoutDeletedByNestedInput
    createdVariantOptions?: VariantOptionUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedVariantOptions?: VariantOptionUncheckedUpdateManyWithoutDeletedByNestedInput
    createdSKUS?: SKUUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedSKUS?: SKUUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedSKUS?: SKUUncheckedUpdateManyWithoutDeletedByNestedInput
    createdLanguages?: LanguageUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedLanguages?: LanguageUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedLanguages?: LanguageUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrands?: BrandUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrands?: BrandUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrands?: BrandUncheckedUpdateManyWithoutDeletedByNestedInput
    createdProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedProductTranslations?: ProductTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedCategoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedBrandTranslations?: BrandTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    createdOrders?: OrderUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedOrders?: OrderUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedOrders?: OrderUncheckedUpdateManyWithoutDeletedByNestedInput
    createdUserTranslations?: UserTranslationUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUserTranslations?: UserTranslationUncheckedUpdateManyWithoutDeletedByNestedInput
    userTranslations?: UserTranslationUncheckedUpdateManyWithoutUserNestedInput
    sentMessages?: MessageUncheckedUpdateManyWithoutFromUserNestedInput
    receivedMessages?: MessageUncheckedUpdateManyWithoutToUserNestedInput
    createdUsers?: UserUncheckedUpdateManyWithoutCreatedByNestedInput
    updatedUsers?: UserUncheckedUpdateManyWithoutUpdatedByNestedInput
    deletedUsers?: UserUncheckedUpdateManyWithoutDeletedByNestedInput
  }

  export type UserUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    phoneNumber?: StringFieldUpdateOperationsInput | string
    avatar?: NullableStringFieldUpdateOperationsInput | string | null
    totpSecret?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantCreateManyProductInput = {
    id?: number
    name: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SKUCreateManyProductInput = {
    id?: number
    value: string
    price: number
    stock: number
    images?: SKUCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyProductInput = {
    id?: number
    content: string
    rating: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductTranslationCreateManyProductInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryUpdateWithoutProductsInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parentCategory?: CategoryUpdateOneWithoutChildrenCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    parentCategoryId?: NullableIntFieldUpdateOperationsInput | number | null
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantUpdateWithoutProductInput = {
    name?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUpdateManyWithoutVariantNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantsNestedInput
  }

  export type VariantUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutVariantNestedInput
  }

  export type VariantUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpdateWithoutProductInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantOptions?: VariantOptionUncheckedUpdateManyWithoutSkusNestedInput
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutProductInput = {
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutProductInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    language?: LanguageUpdateOneRequiredWithoutProductTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryCreateManyParentCategoryInput = {
    id?: number
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CategoryTranslationCreateManyCategoryInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateWithoutCategoriesInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    brandId?: IntFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryUpdateWithoutParentCategoryInput = {
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUpdateManyWithoutCategoryNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoriesNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoriesNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoriesNestedInput
  }

  export type CategoryUncheckedUpdateWithoutParentCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
    childrenCategories?: CategoryUncheckedUpdateManyWithoutParentCategoryNestedInput
    categoryTranslations?: CategoryTranslationUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateManyWithoutParentCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUpdateWithoutCategoryInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    language?: LanguageUpdateOneRequiredWithoutCategoryTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedCategoryTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedCategoryTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedCategoryTranslationsNestedInput
  }

  export type CategoryTranslationUncheckedUpdateWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CategoryTranslationUncheckedUpdateManyWithoutCategoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionCreateManyVariantInput = {
    id?: number
    value: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type VariantOptionUpdateWithoutVariantInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUpdateManyWithoutVariantOptionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantOptionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantOptionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateWithoutVariantInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    skus?: SKUUncheckedUpdateManyWithoutVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateManyWithoutVariantInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SKUUpdateWithoutVariantOptionsInput = {
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutSkusNestedInput
    cartItems?: CartItemUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUpdateManyWithoutSkuNestedInput
    createdBy?: UserUpdateOneWithoutCreatedSKUSNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedSKUSNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedSKUSNestedInput
  }

  export type SKUUncheckedUpdateWithoutVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cartItems?: CartItemUncheckedUpdateManyWithoutSkuNestedInput
    productSKUSnapshots?: ProductSKUSnapshotUncheckedUpdateManyWithoutSkuNestedInput
  }

  export type SKUUncheckedUpdateManyWithoutVariantOptionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    stock?: IntFieldUpdateOperationsInput | number
    images?: SKUUpdateimagesInput | string[]
    productId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemCreateManySkuInput = {
    id?: number
    quantity: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductSKUSnapshotCreateManySkuInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    orderId?: number | null
    createdAt?: Date | string
  }

  export type VariantOptionUpdateWithoutSkusInput = {
    value?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variant?: VariantUpdateOneRequiredWithoutVariantOptionsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedVariantOptionsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedVariantOptionsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedVariantOptionsNestedInput
  }

  export type VariantOptionUncheckedUpdateWithoutSkusInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VariantOptionUncheckedUpdateManyWithoutSkusInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    variantId?: IntFieldUpdateOperationsInput | number
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemUpdateWithoutSkuInput = {
    quantity?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCartsNestedInput
  }

  export type CartItemUncheckedUpdateWithoutSkuInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CartItemUncheckedUpdateManyWithoutSkuInput = {
    id?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotUpdateWithoutSkuInput = {
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutItemsNestedInput
  }

  export type ProductSKUSnapshotUncheckedUpdateWithoutSkuInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotUncheckedUpdateManyWithoutSkuInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    orderId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateManyBrandInput = {
    id?: number
    base_price: number
    virtual_price: number
    images?: ProductCreateimagesInput | string[]
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BrandTranslationCreateManyBrandInput = {
    id?: number
    languageId: string
    name: string
    description: string
    createdById?: number | null
    updatedById?: number | null
    deletedById?: number | null
    deletedAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductUpdateWithoutBrandInput = {
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUpdateManyWithoutProductsNestedInput
    variants?: VariantUpdateManyWithoutProductNestedInput
    skus?: SKUUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUpdateManyWithoutProductNestedInput
    createdBy?: UserUpdateOneWithoutCreatedProductsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedProductsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: CategoryUncheckedUpdateManyWithoutProductsNestedInput
    variants?: VariantUncheckedUpdateManyWithoutProductNestedInput
    skus?: SKUUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    productTranslations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    base_price?: FloatFieldUpdateOperationsInput | number
    virtual_price?: FloatFieldUpdateOperationsInput | number
    images?: ProductUpdateimagesInput | string[]
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUpdateWithoutBrandInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    language?: LanguageUpdateOneRequiredWithoutBrandTranslationsNestedInput
    createdBy?: UserUpdateOneWithoutCreatedBrandTranslationsNestedInput
    updatedBy?: UserUpdateOneWithoutUpdatedBrandTranslationsNestedInput
    deletedBy?: UserUpdateOneWithoutDeletedBrandTranslationsNestedInput
  }

  export type BrandTranslationUncheckedUpdateWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BrandTranslationUncheckedUpdateManyWithoutBrandInput = {
    id?: IntFieldUpdateOperationsInput | number
    languageId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    createdById?: NullableIntFieldUpdateOperationsInput | number | null
    updatedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedById?: NullableIntFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotCreateManyOrderInput = {
    id?: number
    productName: string
    price: number
    images?: ProductSKUSnapshotCreateimagesInput | string[]
    skuValue: string
    skuId?: number | null
    createdAt?: Date | string
  }

  export type ProductSKUSnapshotUpdateWithoutOrderInput = {
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sku?: SKUUpdateOneWithoutProductSKUSnapshotsNestedInput
  }

  export type ProductSKUSnapshotUncheckedUpdateWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    skuId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSKUSnapshotUncheckedUpdateManyWithoutOrderInput = {
    id?: IntFieldUpdateOperationsInput | number
    productName?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    images?: ProductSKUSnapshotUpdateimagesInput | string[]
    skuValue?: StringFieldUpdateOperationsInput | string
    skuId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}